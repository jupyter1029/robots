<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.8.7 on linux)" generated="20210217 00:37:27.594" rpa="false">
<suite id="s1" name="Atest" source="/home/runner/work/robots/robots/atest">
<suite id="s1-s1" name="Jupyter Server" source="/home/runner/work/robots/robots/atest/jupyter_server">
<suite id="s1-s1-s1" name="JupyterServerCLI" source="/home/runner/work/robots/robots/atest/jupyter_server/JupyterServerCLI.robot">
<test id="s1-s1-s1-t1" name="Test &quot;port&quot; trait">
<kw name="Start Unauthenticated Jupyter Server" library="Variables">
<arguments>
<arg>--ServerApp.port=9999</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210217 00:37:27.703" level="INFO">${extra_args} = ['--ServerApp.token=', '']</msg>
<status status="PASS" starttime="20210217 00:37:27.703" endtime="20210217 00:37:27.703"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210217 00:37:27.704" level="INFO">Starting process:
jupyter-server --ServerApp.port=9999 --ServerApp.token= ""</msg>
<msg timestamp="20210217 00:37:27.707" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210217 00:37:27.703" endtime="20210217 00:37:27.707"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210217 00:37:27.708" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210217 00:37:27.707" endtime="20210217 00:37:27.708"></status>
</kw>
<status status="PASS" starttime="20210217 00:37:27.701" endtime="20210217 00:37:27.708"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<arguments>
<arg>http://127.0.0.1:9999</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210217 00:37:27.709" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:9999, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210217 00:37:27.709" endtime="20210217 00:37:27.710"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210217 00:37:29.120" level="INFO">GET Request : url=http://127.0.0.1:9999/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210217 00:37:29.120" level="INFO">GET Response : url=http://127.0.0.1:9999/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Wed, 17 Feb 2021 00:37:29 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"bfc415ae6d0ede6c687e28b13db6649e65269412"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-17T00:37:28.908606Z", "started": "2021-02-17T00:37:28.908606Z"} 
 </msg>
<status status="PASS" starttime="20210217 00:37:27.710" endtime="20210217 00:37:29.120"></status>
</kw>
<status status="PASS" starttime="20210217 00:37:27.709" endtime="20210217 00:37:29.121"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210217 00:37:29.122" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210217 00:37:29.222" level="INFO">Process completed.</msg>
<msg timestamp="20210217 00:37:29.222" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210217 00:37:29.121" endtime="20210217 00:37:29.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210217 00:37:29.223" level="INFO">[I 2021-02-17 00:37:28.272 ServerApp] Writing notebook server cookie secret to /home/runner/.local/share/jupyter/runtime/jupyter_cookie_secret
[I 2021-02-17 00:37:28.903 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-17 00:37:28.921 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-17 00:37:28.929 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-17 00:37:28.929 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-17 00:37:28.929 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-17 00:37:28.929 ServerApp] http://localhost:9999/
[I 2021-02-17 00:37:28.929 ServerApp]  or http://127.0.0.1:9999/
[I 2021-02-17 00:37:28.929 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-02-17 00:37:29.121 ServerApp] received signal 15, stopping
[I 2021-02-17 00:37:29.122 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210217 00:37:29.223" endtime="20210217 00:37:29.223"></status>
</kw>
<status status="PASS" starttime="20210217 00:37:29.121" endtime="20210217 00:37:29.223"></status>
</kw>
<status status="PASS" starttime="20210217 00:37:27.701" endtime="20210217 00:37:29.223" critical="yes"></status>
</test>
<status status="PASS" starttime="20210217 00:37:27.626" endtime="20210217 00:37:29.225"></status>
</suite>
<suite id="s1-s1-s2" name="Nbclassic" source="/home/runner/work/robots/robots/atest/jupyter_server/Nbclassic.robot">
<test id="s1-s1-s2-t1" name="Test Entrypoint">
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210217 00:37:29.349" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210217 00:37:29.349" endtime="20210217 00:37:29.349"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210217 00:37:29.349" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210217 00:37:29.352" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210217 00:37:29.349" endtime="20210217 00:37:29.352"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210217 00:37:29.353" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210217 00:37:29.353" endtime="20210217 00:37:29.353"></status>
</kw>
<status status="PASS" starttime="20210217 00:37:29.348" endtime="20210217 00:37:29.354"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210217 00:37:29.355" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210217 00:37:29.354" endtime="20210217 00:37:29.355"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210217 00:37:29.964" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210217 00:37:29.964" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Wed, 17 Feb 2021 00:37:29 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"5b30e8293e9a859c3ca715fff20f4143cc3ec0f2"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-17T00:37:29.895519Z", "started": "2021-02-17T00:37:29.895519Z"} 
 </msg>
<status status="PASS" starttime="20210217 00:37:29.356" endtime="20210217 00:37:29.964"></status>
</kw>
<status status="PASS" starttime="20210217 00:37:29.354" endtime="20210217 00:37:29.964"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210217 00:37:29.965" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210217 00:37:30.066" level="INFO">Process completed.</msg>
<msg timestamp="20210217 00:37:30.066" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210217 00:37:29.965" endtime="20210217 00:37:30.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210217 00:37:30.067" level="INFO">[I 2021-02-17 00:37:29.889 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-17 00:37:29.908 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-17 00:37:29.915 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-17 00:37:29.915 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-17 00:37:29.915 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-17 00:37:29.915 ServerApp] http://localhost:8888/tree
[I 2021-02-17 00:37:29.916 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-17 00:37:29.916 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-02-17 00:37:29.965 ServerApp] received signal 15, stopping
[I 2021-02-17 00:37:29.965 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210217 00:37:30.067" endtime="20210217 00:37:30.067"></status>
</kw>
<status status="PASS" starttime="20210217 00:37:29.965" endtime="20210217 00:37:30.067"></status>
</kw>
<status status="PASS" starttime="20210217 00:37:29.348" endtime="20210217 00:37:30.067" critical="yes"></status>
</test>
<test id="s1-s1-s2-t2" name="Test Landing Page">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210217 00:37:30.070" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210217 00:37:30.068" endtime="20210217 00:37:30.070"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210217 00:37:30.071" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210217 00:37:30.070" endtime="20210217 00:37:30.071"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210217 00:37:30.072" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210217 00:37:30.071" endtime="20210217 00:37:30.072"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210217 00:37:30.072" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210217 00:37:30.076" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210217 00:37:30.072" endtime="20210217 00:37:30.076"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210217 00:37:30.077" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210217 00:37:30.077" endtime="20210217 00:37:30.078"></status>
</kw>
<status status="PASS" starttime="20210217 00:37:30.071" endtime="20210217 00:37:30.078"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210217 00:37:30.079" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210217 00:37:30.078" endtime="20210217 00:37:30.080"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210217 00:37:30.688" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210217 00:37:30.688" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Wed, 17 Feb 2021 00:37:30 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"61a282c739c4b3fb83bd39a2033bda97386ee6b8"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-17T00:37:30.620881Z", "started": "2021-02-17T00:37:30.620881Z"} 
 </msg>
<status status="PASS" starttime="20210217 00:37:30.080" endtime="20210217 00:37:30.688"></status>
</kw>
<status status="PASS" starttime="20210217 00:37:30.078" endtime="20210217 00:37:30.689"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210217 00:37:30.690" level="INFO">http://127.0.0.1:8888</msg>
<msg timestamp="20210217 00:37:33.967" level="INFO">0%|          | 0/108773488 [00:00&lt;?, ?it/s] 20%|##        | 22046720/108773488 [00:00&lt;00:00, 220403826.67it/s] 46%|####5     | 49745920/108773488 [00:00&lt;00:00, 253631705.11it/s] 72%|#######1  | 77783040/108773488 [00:00&lt;00:00, 265795717.02it/s] 97%|#########7| 105973760/108773488 [00:00&lt;00:00, 272041706.85it/s]100%|##########| 108773488/108773488 [00:00&lt;00:00, 263169960.97it/s]</msg>
<status status="PASS" starttime="20210217 00:37:30.689" endtime="20210217 00:37:33.968"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210217 00:37:33.969" endtime="20210217 00:37:34.094"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210217 00:37:34.230" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-1.png"&gt;&lt;img src="puppeteer-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210217 00:37:34.094" endtime="20210217 00:37:34.231"></status>
</kw>
<status status="PASS" starttime="20210217 00:37:33.968" endtime="20210217 00:37:34.231"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210217 00:37:34.231" endtime="20210217 00:37:34.244"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210217 00:37:34.245" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210217 00:37:34.346" level="INFO">Process completed.</msg>
<msg timestamp="20210217 00:37:34.346" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210217 00:37:34.245" endtime="20210217 00:37:34.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210217 00:37:34.347" level="INFO">[I 2021-02-17 00:37:30.615 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-17 00:37:30.634 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-17 00:37:30.641 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-17 00:37:30.641 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-17 00:37:30.641 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-17 00:37:30.641 ServerApp] http://localhost:8888/tree
[I 2021-02-17 00:37:30.642 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-17 00:37:30.642 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-02-17 00:37:33.719 ServerApp] 302 GET / (127.0.0.1) 0.51ms
[C 2021-02-17 00:37:34.245 ServerApp] received signal 15, stopping
[I 2021-02-17 00:37:34.245 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210217 00:37:34.346" endtime="20210217 00:37:34.347"></status>
</kw>
<status status="PASS" starttime="20210217 00:37:34.245" endtime="20210217 00:37:34.347"></status>
</kw>
<status status="PASS" starttime="20210217 00:37:30.068" endtime="20210217 00:37:34.347" critical="yes"></status>
</test>
<test id="s1-s1-s2-t3" name="Test file_to_run">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210217 00:37:34.349" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210217 00:37:34.348" endtime="20210217 00:37:34.349"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210217 00:37:34.350" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210217 00:37:34.349" endtime="20210217 00:37:34.350"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210217 00:37:34.351" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210217 00:37:34.350" endtime="20210217 00:37:34.351"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210217 00:37:34.351" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210217 00:37:34.355" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210217 00:37:34.351" endtime="20210217 00:37:34.355"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210217 00:37:34.356" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210217 00:37:34.355" endtime="20210217 00:37:34.356"></status>
</kw>
<status status="PASS" starttime="20210217 00:37:34.350" endtime="20210217 00:37:34.356"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210217 00:37:34.357" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210217 00:37:34.356" endtime="20210217 00:37:34.357"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210217 00:37:34.966" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210217 00:37:34.966" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Wed, 17 Feb 2021 00:37:34 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"54946db4f012156b65b0d1bc56ae2c759b1ae9e8"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-17T00:37:34.890908Z", "started": "2021-02-17T00:37:34.890908Z"} 
 </msg>
<status status="PASS" starttime="20210217 00:37:34.358" endtime="20210217 00:37:34.967"></status>
</kw>
<status status="PASS" starttime="20210217 00:37:34.356" endtime="20210217 00:37:34.967"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210217 00:37:34.968" level="INFO">http://127.0.0.1:8888</msg>
<status status="PASS" starttime="20210217 00:37:34.967" endtime="20210217 00:37:35.363"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210217 00:37:35.364" endtime="20210217 00:37:35.482"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210217 00:37:35.615" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-2.png"&gt;&lt;img src="puppeteer-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210217 00:37:35.482" endtime="20210217 00:37:35.615"></status>
</kw>
<status status="PASS" starttime="20210217 00:37:35.364" endtime="20210217 00:37:35.615"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210217 00:37:35.616" endtime="20210217 00:37:35.644"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210217 00:37:35.645" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210217 00:37:35.745" level="INFO">Process completed.</msg>
<msg timestamp="20210217 00:37:35.746" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210217 00:37:35.644" endtime="20210217 00:37:35.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210217 00:37:35.746" level="INFO">[I 2021-02-17 00:37:34.884 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-17 00:37:34.904 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-17 00:37:34.911 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-17 00:37:34.911 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-17 00:37:34.911 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-17 00:37:34.911 ServerApp] http://localhost:8888/tree
[I 2021-02-17 00:37:34.911 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-17 00:37:34.911 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-02-17 00:37:35.134 ServerApp] 302 GET / (127.0.0.1) 0.46ms
[C 2021-02-17 00:37:35.644 ServerApp] received signal 15, stopping
[I 2021-02-17 00:37:35.645 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210217 00:37:35.746" endtime="20210217 00:37:35.746"></status>
</kw>
<status status="PASS" starttime="20210217 00:37:35.644" endtime="20210217 00:37:35.747"></status>
</kw>
<status status="PASS" starttime="20210217 00:37:34.347" endtime="20210217 00:37:35.747" critical="yes"></status>
</test>
<status status="PASS" starttime="20210217 00:37:29.227" endtime="20210217 00:37:35.748"></status>
</suite>
<status status="PASS" starttime="20210217 00:37:27.624" endtime="20210217 00:37:35.751"></status>
</suite>
<status status="PASS" starttime="20210217 00:37:27.595" endtime="20210217 00:37:35.753"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="Atest">Atest</stat>
<stat pass="4" fail="0" id="s1-s1" name="Jupyter Server">Atest.Jupyter Server</stat>
<stat pass="1" fail="0" id="s1-s1-s1" name="JupyterServerCLI">Atest.Jupyter Server.JupyterServerCLI</stat>
<stat pass="3" fail="0" id="s1-s1-s2" name="Nbclassic">Atest.Jupyter Server.Nbclassic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
