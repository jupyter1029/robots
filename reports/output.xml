<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.8.7 on linux)" generated="20210303 00:39:08.148" rpa="false">
<suite id="s1" name="Atest" source="/home/runner/work/robots/robots/atest">
<suite id="s1-s1" name="Jupyter Server" source="/home/runner/work/robots/robots/atest/jupyter_server">
<suite id="s1-s1-s1" name="JupyterServerCLI" source="/home/runner/work/robots/robots/atest/jupyter_server/JupyterServerCLI.robot">
<test id="s1-s1-s1-t1" name="Test &quot;port&quot; trait">
<kw name="Start Unauthenticated Jupyter Server" library="Variables">
<arguments>
<arg>--ServerApp.port=9999</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210303 00:39:08.262" level="INFO">${extra_args} = ['--ServerApp.token=', '']</msg>
<status status="PASS" starttime="20210303 00:39:08.262" endtime="20210303 00:39:08.262"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210303 00:39:08.263" level="INFO">Starting process:
jupyter-server --ServerApp.port=9999 --ServerApp.token= ""</msg>
<msg timestamp="20210303 00:39:08.266" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210303 00:39:08.262" endtime="20210303 00:39:08.266"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210303 00:39:08.267" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210303 00:39:08.267" endtime="20210303 00:39:08.267"></status>
</kw>
<status status="PASS" starttime="20210303 00:39:08.260" endtime="20210303 00:39:08.268"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<arguments>
<arg>http://127.0.0.1:9999</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210303 00:39:08.269" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:9999, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210303 00:39:08.268" endtime="20210303 00:39:08.271"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210303 00:39:09.681" level="INFO">GET Request : url=http://127.0.0.1:9999/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210303 00:39:09.681" level="INFO">GET Response : url=http://127.0.0.1:9999/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Wed, 03 Mar 2021 00:39:09 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"5e5e1e303a64a530ca703e369f3cab888b55eb38"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-03-03T00:39:09.510259Z", "started": "2021-03-03T00:39:09.510259Z"} 
 </msg>
<status status="PASS" starttime="20210303 00:39:08.271" endtime="20210303 00:39:09.682"></status>
</kw>
<status status="PASS" starttime="20210303 00:39:08.268" endtime="20210303 00:39:09.682"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210303 00:39:09.683" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210303 00:39:09.783" level="INFO">Process completed.</msg>
<msg timestamp="20210303 00:39:09.784" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210303 00:39:09.683" endtime="20210303 00:39:09.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210303 00:39:09.784" level="INFO">[I 2021-03-03 00:39:08.903 ServerApp] Writing notebook server cookie secret to /home/runner/.local/share/jupyter/runtime/jupyter_cookie_secret
[I 2021-03-03 00:39:09.503 ServerApp] nbclassic | extension was successfully linked.
[W 2021-03-03 00:39:09.525 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-03-03 00:39:09.534 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-03-03 00:39:09.534 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-03-03 00:39:09.534 ServerApp] Jupyter Server 1.4.1 is running at:
[I 2021-03-03 00:39:09.534 ServerApp] http://localhost:9999/
[I 2021-03-03 00:39:09.534 ServerApp]  or http://127.0.0.1:9999/
[I 2021-03-03 00:39:09.534 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-03-03 00:39:09.683 ServerApp] received signal 15, stopping
[I 2021-03-03 00:39:09.683 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210303 00:39:09.784" endtime="20210303 00:39:09.784"></status>
</kw>
<status status="PASS" starttime="20210303 00:39:09.682" endtime="20210303 00:39:09.785"></status>
</kw>
<status status="PASS" starttime="20210303 00:39:08.260" endtime="20210303 00:39:09.785" critical="yes"></status>
</test>
<status status="PASS" starttime="20210303 00:39:08.178" endtime="20210303 00:39:09.786"></status>
</suite>
<suite id="s1-s1-s2" name="Nbclassic" source="/home/runner/work/robots/robots/atest/jupyter_server/Nbclassic.robot">
<test id="s1-s1-s2-t1" name="Test Entrypoint">
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210303 00:39:09.931" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210303 00:39:09.931" endtime="20210303 00:39:09.931"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210303 00:39:09.932" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210303 00:39:09.935" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210303 00:39:09.931" endtime="20210303 00:39:09.935"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210303 00:39:09.936" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210303 00:39:09.936" endtime="20210303 00:39:09.936"></status>
</kw>
<status status="PASS" starttime="20210303 00:39:09.930" endtime="20210303 00:39:09.936"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210303 00:39:09.938" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210303 00:39:09.937" endtime="20210303 00:39:09.940"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210303 00:39:11.350" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210303 00:39:11.350" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Wed, 03 Mar 2021 00:39:11 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"d2de79f7882aac9aaa2dbb1aec20c98035223a49"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-03-03T00:39:10.533216Z", "started": "2021-03-03T00:39:10.533216Z"} 
 </msg>
<status status="PASS" starttime="20210303 00:39:09.940" endtime="20210303 00:39:11.351"></status>
</kw>
<status status="PASS" starttime="20210303 00:39:09.937" endtime="20210303 00:39:11.351"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210303 00:39:11.352" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210303 00:39:11.452" level="INFO">Process completed.</msg>
<msg timestamp="20210303 00:39:11.453" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210303 00:39:11.352" endtime="20210303 00:39:11.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210303 00:39:11.453" level="INFO">[I 2021-03-03 00:39:10.526 ServerApp] nbclassic | extension was successfully linked.
[W 2021-03-03 00:39:10.548 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-03-03 00:39:10.556 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-03-03 00:39:10.556 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-03-03 00:39:10.556 ServerApp] Jupyter Server 1.4.1 is running at:
[I 2021-03-03 00:39:10.556 ServerApp] http://localhost:8888/tree
[I 2021-03-03 00:39:10.556 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-03-03 00:39:10.556 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-03-03 00:39:11.351 ServerApp] received signal 15, stopping
[I 2021-03-03 00:39:11.352 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210303 00:39:11.453" endtime="20210303 00:39:11.453"></status>
</kw>
<status status="PASS" starttime="20210303 00:39:11.351" endtime="20210303 00:39:11.454"></status>
</kw>
<status status="PASS" starttime="20210303 00:39:09.930" endtime="20210303 00:39:11.454" critical="yes"></status>
</test>
<test id="s1-s1-s2-t2" name="Test Landing Page">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210303 00:39:11.456" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210303 00:39:11.455" endtime="20210303 00:39:11.456"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210303 00:39:11.458" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210303 00:39:11.456" endtime="20210303 00:39:11.458"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210303 00:39:11.459" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210303 00:39:11.458" endtime="20210303 00:39:11.459"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210303 00:39:11.459" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210303 00:39:11.462" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210303 00:39:11.459" endtime="20210303 00:39:11.462"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210303 00:39:11.463" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210303 00:39:11.463" endtime="20210303 00:39:11.464"></status>
</kw>
<status status="PASS" starttime="20210303 00:39:11.458" endtime="20210303 00:39:11.464"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210303 00:39:11.465" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210303 00:39:11.464" endtime="20210303 00:39:11.465"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210303 00:39:12.876" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210303 00:39:12.876" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Wed, 03 Mar 2021 00:39:12 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"ed3e1414cc051a15b70a48af9ae47761e5616fdc"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-03-03T00:39:12.070461Z", "started": "2021-03-03T00:39:12.070461Z"} 
 </msg>
<status status="PASS" starttime="20210303 00:39:11.465" endtime="20210303 00:39:12.876"></status>
</kw>
<status status="PASS" starttime="20210303 00:39:11.464" endtime="20210303 00:39:12.876"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210303 00:39:12.877" level="INFO">http://127.0.0.1:8888</msg>
<msg timestamp="20210303 00:39:16.824" level="INFO">0%|          | 0/108773488 [00:00&lt;?, ?it/s] 13%|#2        | 13803520/108773488 [00:00&lt;00:00, 138013943.31it/s] 35%|###4      | 37580800/108773488 [00:00&lt;00:00, 196672981.91it/s] 59%|#####8    | 63907840/108773488 [00:00&lt;00:00, 227041173.34it/s] 83%|########2 | 89999360/108773488 [00:00&lt;00:00, 238674842.13it/s]100%|##########| 108773488/108773488 [00:00&lt;00:00, 230192253.18it/s]</msg>
<status status="PASS" starttime="20210303 00:39:12.877" endtime="20210303 00:39:16.824"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210303 00:39:16.825" endtime="20210303 00:39:16.956"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210303 00:39:17.110" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-1.png"&gt;&lt;img src="puppeteer-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210303 00:39:16.956" endtime="20210303 00:39:17.110"></status>
</kw>
<status status="PASS" starttime="20210303 00:39:16.824" endtime="20210303 00:39:17.111"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210303 00:39:17.111" endtime="20210303 00:39:17.135"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210303 00:39:17.137" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210303 00:39:17.237" level="INFO">Process completed.</msg>
<msg timestamp="20210303 00:39:17.238" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210303 00:39:17.137" endtime="20210303 00:39:17.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210303 00:39:17.239" level="INFO">[I 2021-03-03 00:39:12.061 ServerApp] nbclassic | extension was successfully linked.
[W 2021-03-03 00:39:12.086 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-03-03 00:39:12.093 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-03-03 00:39:12.094 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-03-03 00:39:12.094 ServerApp] Jupyter Server 1.4.1 is running at:
[I 2021-03-03 00:39:12.094 ServerApp] http://localhost:8888/tree
[I 2021-03-03 00:39:12.094 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-03-03 00:39:12.094 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-03-03 00:39:16.560 ServerApp] 302 GET / (127.0.0.1) 0.53ms
[C 2021-03-03 00:39:17.137 ServerApp] received signal 15, stopping
[I 2021-03-03 00:39:17.137 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210303 00:39:17.239" endtime="20210303 00:39:17.240"></status>
</kw>
<status status="PASS" starttime="20210303 00:39:17.136" endtime="20210303 00:39:17.240"></status>
</kw>
<status status="PASS" starttime="20210303 00:39:11.454" endtime="20210303 00:39:17.240" critical="yes"></status>
</test>
<test id="s1-s1-s2-t3" name="Test file_to_run">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210303 00:39:17.242" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210303 00:39:17.241" endtime="20210303 00:39:17.242"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210303 00:39:17.243" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210303 00:39:17.242" endtime="20210303 00:39:17.243"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210303 00:39:17.244" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210303 00:39:17.243" endtime="20210303 00:39:17.244"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210303 00:39:17.244" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210303 00:39:17.248" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210303 00:39:17.244" endtime="20210303 00:39:17.248"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210303 00:39:17.249" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210303 00:39:17.248" endtime="20210303 00:39:17.249"></status>
</kw>
<status status="PASS" starttime="20210303 00:39:17.243" endtime="20210303 00:39:17.249"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210303 00:39:17.250" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210303 00:39:17.250" endtime="20210303 00:39:17.251"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210303 00:39:18.662" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210303 00:39:18.662" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Wed, 03 Mar 2021 00:39:18 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"7ac1185c8c25555570f0e6bf559b4c9c0ef49510"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-03-03T00:39:17.841936Z", "started": "2021-03-03T00:39:17.841936Z"} 
 </msg>
<status status="PASS" starttime="20210303 00:39:17.251" endtime="20210303 00:39:18.662"></status>
</kw>
<status status="PASS" starttime="20210303 00:39:17.249" endtime="20210303 00:39:18.663"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210303 00:39:18.663" level="INFO">http://127.0.0.1:8888</msg>
<status status="PASS" starttime="20210303 00:39:18.663" endtime="20210303 00:39:19.101"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210303 00:39:19.102" endtime="20210303 00:39:19.236"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210303 00:39:19.382" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-2.png"&gt;&lt;img src="puppeteer-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210303 00:39:19.236" endtime="20210303 00:39:19.382"></status>
</kw>
<status status="PASS" starttime="20210303 00:39:19.101" endtime="20210303 00:39:19.382"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210303 00:39:19.382" endtime="20210303 00:39:19.413"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210303 00:39:19.414" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210303 00:39:19.515" level="INFO">Process completed.</msg>
<msg timestamp="20210303 00:39:19.515" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210303 00:39:19.414" endtime="20210303 00:39:19.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210303 00:39:19.515" level="INFO">[I 2021-03-03 00:39:17.835 ServerApp] nbclassic | extension was successfully linked.
[W 2021-03-03 00:39:17.856 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-03-03 00:39:17.864 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-03-03 00:39:17.864 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-03-03 00:39:17.864 ServerApp] Jupyter Server 1.4.1 is running at:
[I 2021-03-03 00:39:17.864 ServerApp] http://localhost:8888/tree
[I 2021-03-03 00:39:17.864 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-03-03 00:39:17.864 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-03-03 00:39:18.854 ServerApp] 302 GET / (127.0.0.1) 0.53ms
[C 2021-03-03 00:39:19.414 ServerApp] received signal 15, stopping
[I 2021-03-03 00:39:19.414 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210303 00:39:19.515" endtime="20210303 00:39:19.516"></status>
</kw>
<status status="PASS" starttime="20210303 00:39:19.413" endtime="20210303 00:39:19.516"></status>
</kw>
<status status="PASS" starttime="20210303 00:39:17.240" endtime="20210303 00:39:19.516" critical="yes"></status>
</test>
<status status="PASS" starttime="20210303 00:39:09.787" endtime="20210303 00:39:19.517"></status>
</suite>
<status status="PASS" starttime="20210303 00:39:08.176" endtime="20210303 00:39:19.520"></status>
</suite>
<status status="PASS" starttime="20210303 00:39:08.149" endtime="20210303 00:39:19.523"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="Atest">Atest</stat>
<stat pass="4" fail="0" id="s1-s1" name="Jupyter Server">Atest.Jupyter Server</stat>
<stat pass="1" fail="0" id="s1-s1-s1" name="JupyterServerCLI">Atest.Jupyter Server.JupyterServerCLI</stat>
<stat pass="3" fail="0" id="s1-s1-s2" name="Nbclassic">Atest.Jupyter Server.Nbclassic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
