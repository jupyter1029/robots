<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.8.7 on linux)" generated="20210226 00:38:43.659" rpa="false">
<suite id="s1" name="Atest" source="/home/runner/work/robots/robots/atest">
<suite id="s1-s1" name="Jupyter Server" source="/home/runner/work/robots/robots/atest/jupyter_server">
<suite id="s1-s1-s1" name="JupyterServerCLI" source="/home/runner/work/robots/robots/atest/jupyter_server/JupyterServerCLI.robot">
<test id="s1-s1-s1-t1" name="Test &quot;port&quot; trait">
<kw name="Start Unauthenticated Jupyter Server" library="Variables">
<arguments>
<arg>--ServerApp.port=9999</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210226 00:38:43.760" level="INFO">${extra_args} = ['--ServerApp.token=', '']</msg>
<status status="PASS" starttime="20210226 00:38:43.759" endtime="20210226 00:38:43.760"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210226 00:38:43.760" level="INFO">Starting process:
jupyter-server --ServerApp.port=9999 --ServerApp.token= ""</msg>
<msg timestamp="20210226 00:38:43.763" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210226 00:38:43.760" endtime="20210226 00:38:43.763"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210226 00:38:43.764" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210226 00:38:43.764" endtime="20210226 00:38:43.765"></status>
</kw>
<status status="PASS" starttime="20210226 00:38:43.758" endtime="20210226 00:38:43.765"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<arguments>
<arg>http://127.0.0.1:9999</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210226 00:38:43.766" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:9999, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210226 00:38:43.765" endtime="20210226 00:38:43.766"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210226 00:38:46.780" level="INFO">GET Request : url=http://127.0.0.1:9999/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210226 00:38:46.780" level="INFO">GET Response : url=http://127.0.0.1:9999/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Fri, 26 Feb 2021 00:38:46 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"8416508c8d41b327551a8de85afe072fc663bff4"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-26T00:38:45.308774Z", "started": "2021-02-26T00:38:45.308774Z"} 
 </msg>
<status status="PASS" starttime="20210226 00:38:43.766" endtime="20210226 00:38:46.781"></status>
</kw>
<status status="PASS" starttime="20210226 00:38:43.765" endtime="20210226 00:38:46.781"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210226 00:38:46.782" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210226 00:38:46.883" level="INFO">Process completed.</msg>
<msg timestamp="20210226 00:38:46.883" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210226 00:38:46.782" endtime="20210226 00:38:46.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210226 00:38:46.884" level="INFO">[I 2021-02-26 00:38:44.690 ServerApp] Writing notebook server cookie secret to /home/runner/.local/share/jupyter/runtime/jupyter_cookie_secret
[I 2021-02-26 00:38:45.303 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-26 00:38:45.321 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-26 00:38:45.329 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-26 00:38:45.329 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-26 00:38:45.329 ServerApp] Jupyter Server 1.4.1 is running at:
[I 2021-02-26 00:38:45.329 ServerApp] http://localhost:9999/
[I 2021-02-26 00:38:45.329 ServerApp]  or http://127.0.0.1:9999/
[I 2021-02-26 00:38:45.329 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-02-26 00:38:46.782 ServerApp] received signal 15, stopping
[I 2021-02-26 00:38:46.783 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210226 00:38:46.884" endtime="20210226 00:38:46.884"></status>
</kw>
<status status="PASS" starttime="20210226 00:38:46.781" endtime="20210226 00:38:46.885"></status>
</kw>
<status status="PASS" starttime="20210226 00:38:43.758" endtime="20210226 00:38:46.885" critical="yes"></status>
</test>
<status status="PASS" starttime="20210226 00:38:43.686" endtime="20210226 00:38:46.886"></status>
</suite>
<suite id="s1-s1-s2" name="Nbclassic" source="/home/runner/work/robots/robots/atest/jupyter_server/Nbclassic.robot">
<test id="s1-s1-s2-t1" name="Test Entrypoint">
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210226 00:38:47.003" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210226 00:38:47.003" endtime="20210226 00:38:47.003"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210226 00:38:47.004" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210226 00:38:47.006" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210226 00:38:47.003" endtime="20210226 00:38:47.007"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210226 00:38:47.008" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210226 00:38:47.007" endtime="20210226 00:38:47.008"></status>
</kw>
<status status="PASS" starttime="20210226 00:38:47.002" endtime="20210226 00:38:47.008"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210226 00:38:47.009" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210226 00:38:47.008" endtime="20210226 00:38:47.010"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210226 00:38:47.618" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210226 00:38:47.618" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Fri, 26 Feb 2021 00:38:47 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"f1be4175c0b4f4a9db507f6877d3d6e657c4d1c8"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-26T00:38:47.553057Z", "started": "2021-02-26T00:38:47.553057Z"} 
 </msg>
<status status="PASS" starttime="20210226 00:38:47.010" endtime="20210226 00:38:47.618"></status>
</kw>
<status status="PASS" starttime="20210226 00:38:47.008" endtime="20210226 00:38:47.618"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210226 00:38:47.619" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210226 00:38:47.720" level="INFO">Process completed.</msg>
<msg timestamp="20210226 00:38:47.720" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210226 00:38:47.619" endtime="20210226 00:38:47.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210226 00:38:47.721" level="INFO">[I 2021-02-26 00:38:47.546 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-26 00:38:47.566 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-26 00:38:47.573 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-26 00:38:47.573 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-26 00:38:47.573 ServerApp] Jupyter Server 1.4.1 is running at:
[I 2021-02-26 00:38:47.573 ServerApp] http://localhost:8888/tree
[I 2021-02-26 00:38:47.573 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-26 00:38:47.573 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-02-26 00:38:47.619 ServerApp] received signal 15, stopping
[I 2021-02-26 00:38:47.619 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210226 00:38:47.720" endtime="20210226 00:38:47.721"></status>
</kw>
<status status="PASS" starttime="20210226 00:38:47.619" endtime="20210226 00:38:47.721"></status>
</kw>
<status status="PASS" starttime="20210226 00:38:47.002" endtime="20210226 00:38:47.721" critical="yes"></status>
</test>
<test id="s1-s1-s2-t2" name="Test Landing Page">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210226 00:38:47.723" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210226 00:38:47.722" endtime="20210226 00:38:47.723"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210226 00:38:47.724" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210226 00:38:47.724" endtime="20210226 00:38:47.724"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210226 00:38:47.725" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210226 00:38:47.725" endtime="20210226 00:38:47.725"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210226 00:38:47.726" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210226 00:38:47.729" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210226 00:38:47.725" endtime="20210226 00:38:47.729"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210226 00:38:47.730" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210226 00:38:47.730" endtime="20210226 00:38:47.730"></status>
</kw>
<status status="PASS" starttime="20210226 00:38:47.725" endtime="20210226 00:38:47.730"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210226 00:38:47.732" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210226 00:38:47.731" endtime="20210226 00:38:47.732"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210226 00:38:48.340" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210226 00:38:48.341" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Fri, 26 Feb 2021 00:38:48 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"2e50ee81acebbee75dafbdc7df86767ef98f47bc"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-26T00:38:48.291878Z", "started": "2021-02-26T00:38:48.291878Z"} 
 </msg>
<status status="PASS" starttime="20210226 00:38:47.732" endtime="20210226 00:38:48.341"></status>
</kw>
<status status="PASS" starttime="20210226 00:38:47.731" endtime="20210226 00:38:48.341"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210226 00:38:48.342" level="INFO">http://127.0.0.1:8888</msg>
<msg timestamp="20210226 00:38:52.323" level="INFO">0%|          | 0/108773488 [00:00&lt;?, ?it/s] 21%|##1       | 23265280/108773488 [00:00&lt;00:00, 232598675.09it/s] 44%|####3     | 47656960/108773488 [00:00&lt;00:00, 239249852.85it/s] 70%|######9   | 76113920/108773488 [00:00&lt;00:00, 259938598.06it/s] 95%|#########5| 103464960/108773488 [00:00&lt;00:00, 265292937.13it/s]100%|##########| 108773488/108773488 [00:00&lt;00:00, 260707990.12it/s]</msg>
<status status="PASS" starttime="20210226 00:38:48.341" endtime="20210226 00:38:52.323"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210226 00:38:52.325" endtime="20210226 00:38:52.462"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210226 00:38:52.610" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-1.png"&gt;&lt;img src="puppeteer-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210226 00:38:52.464" endtime="20210226 00:38:52.611"></status>
</kw>
<status status="PASS" starttime="20210226 00:38:52.324" endtime="20210226 00:38:52.611"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210226 00:38:52.611" endtime="20210226 00:38:52.640"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210226 00:38:52.641" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210226 00:38:52.742" level="INFO">Process completed.</msg>
<msg timestamp="20210226 00:38:52.742" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210226 00:38:52.640" endtime="20210226 00:38:52.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210226 00:38:52.743" level="INFO">[I 2021-02-26 00:38:48.284 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-26 00:38:48.305 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-26 00:38:48.312 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-26 00:38:48.312 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-26 00:38:48.312 ServerApp] Jupyter Server 1.4.1 is running at:
[I 2021-02-26 00:38:48.312 ServerApp] http://localhost:8888/tree
[I 2021-02-26 00:38:48.312 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-26 00:38:48.312 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-02-26 00:38:52.076 ServerApp] 302 GET / (127.0.0.1) 0.60ms
[C 2021-02-26 00:38:52.640 ServerApp] received signal 15, stopping
[I 2021-02-26 00:38:52.641 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210226 00:38:52.743" endtime="20210226 00:38:52.743"></status>
</kw>
<status status="PASS" starttime="20210226 00:38:52.640" endtime="20210226 00:38:52.743"></status>
</kw>
<status status="PASS" starttime="20210226 00:38:47.722" endtime="20210226 00:38:52.743" critical="yes"></status>
</test>
<test id="s1-s1-s2-t3" name="Test file_to_run">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210226 00:38:52.746" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210226 00:38:52.745" endtime="20210226 00:38:52.746"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210226 00:38:52.747" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210226 00:38:52.746" endtime="20210226 00:38:52.747"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210226 00:38:52.747" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210226 00:38:52.747" endtime="20210226 00:38:52.748"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210226 00:38:52.748" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210226 00:38:52.752" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210226 00:38:52.748" endtime="20210226 00:38:52.752"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210226 00:38:52.753" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210226 00:38:52.752" endtime="20210226 00:38:52.753"></status>
</kw>
<status status="PASS" starttime="20210226 00:38:52.747" endtime="20210226 00:38:52.753"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210226 00:38:52.754" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210226 00:38:52.754" endtime="20210226 00:38:52.755"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210226 00:38:53.363" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210226 00:38:53.363" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Fri, 26 Feb 2021 00:38:53 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"8106e7af94330c0253b327bd4dc4011d62aa1ffe"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-26T00:38:53.283978Z", "started": "2021-02-26T00:38:53.283978Z"} 
 </msg>
<status status="PASS" starttime="20210226 00:38:52.755" endtime="20210226 00:38:53.363"></status>
</kw>
<status status="PASS" starttime="20210226 00:38:52.753" endtime="20210226 00:38:53.363"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210226 00:38:53.364" level="INFO">http://127.0.0.1:8888</msg>
<status status="PASS" starttime="20210226 00:38:53.364" endtime="20210226 00:38:53.778"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210226 00:38:53.779" endtime="20210226 00:38:53.906"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210226 00:38:54.046" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-2.png"&gt;&lt;img src="puppeteer-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210226 00:38:53.906" endtime="20210226 00:38:54.046"></status>
</kw>
<status status="PASS" starttime="20210226 00:38:53.779" endtime="20210226 00:38:54.047"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210226 00:38:54.047" endtime="20210226 00:38:54.072"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210226 00:38:54.073" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210226 00:38:54.173" level="INFO">Process completed.</msg>
<msg timestamp="20210226 00:38:54.174" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210226 00:38:54.072" endtime="20210226 00:38:54.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210226 00:38:54.175" level="INFO">[I 2021-02-26 00:38:53.277 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-26 00:38:53.298 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-26 00:38:53.306 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-26 00:38:53.306 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-26 00:38:53.306 ServerApp] Jupyter Server 1.4.1 is running at:
[I 2021-02-26 00:38:53.306 ServerApp] http://localhost:8888/tree
[I 2021-02-26 00:38:53.306 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-26 00:38:53.306 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-02-26 00:38:53.541 ServerApp] 302 GET / (127.0.0.1) 0.52ms
[C 2021-02-26 00:38:54.072 ServerApp] received signal 15, stopping
[I 2021-02-26 00:38:54.073 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210226 00:38:54.174" endtime="20210226 00:38:54.175"></status>
</kw>
<status status="PASS" starttime="20210226 00:38:54.072" endtime="20210226 00:38:54.175"></status>
</kw>
<status status="PASS" starttime="20210226 00:38:52.744" endtime="20210226 00:38:54.175" critical="yes"></status>
</test>
<status status="PASS" starttime="20210226 00:38:46.887" endtime="20210226 00:38:54.176"></status>
</suite>
<status status="PASS" starttime="20210226 00:38:43.684" endtime="20210226 00:38:54.178"></status>
</suite>
<status status="PASS" starttime="20210226 00:38:43.660" endtime="20210226 00:38:54.180"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="Atest">Atest</stat>
<stat pass="4" fail="0" id="s1-s1" name="Jupyter Server">Atest.Jupyter Server</stat>
<stat pass="1" fail="0" id="s1-s1-s1" name="JupyterServerCLI">Atest.Jupyter Server.JupyterServerCLI</stat>
<stat pass="3" fail="0" id="s1-s1-s2" name="Nbclassic">Atest.Jupyter Server.Nbclassic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
