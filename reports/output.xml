<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.8.7 on linux)" generated="20210222 00:38:47.861" rpa="false">
<suite id="s1" name="Atest" source="/home/runner/work/robots/robots/atest">
<suite id="s1-s1" name="Jupyter Server" source="/home/runner/work/robots/robots/atest/jupyter_server">
<suite id="s1-s1-s1" name="JupyterServerCLI" source="/home/runner/work/robots/robots/atest/jupyter_server/JupyterServerCLI.robot">
<test id="s1-s1-s1-t1" name="Test &quot;port&quot; trait">
<kw name="Start Unauthenticated Jupyter Server" library="Variables">
<arguments>
<arg>--ServerApp.port=9999</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210222 00:38:47.961" level="INFO">${extra_args} = ['--ServerApp.token=', '']</msg>
<status status="PASS" starttime="20210222 00:38:47.961" endtime="20210222 00:38:47.961"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210222 00:38:47.962" level="INFO">Starting process:
jupyter-server --ServerApp.port=9999 --ServerApp.token= ""</msg>
<msg timestamp="20210222 00:38:47.965" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210222 00:38:47.961" endtime="20210222 00:38:47.965"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210222 00:38:47.966" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210222 00:38:47.966" endtime="20210222 00:38:47.966"></status>
</kw>
<status status="PASS" starttime="20210222 00:38:47.959" endtime="20210222 00:38:47.967"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<arguments>
<arg>http://127.0.0.1:9999</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210222 00:38:47.968" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:9999, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210222 00:38:47.967" endtime="20210222 00:38:47.968"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210222 00:38:50.983" level="INFO">GET Request : url=http://127.0.0.1:9999/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210222 00:38:50.983" level="INFO">GET Response : url=http://127.0.0.1:9999/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Mon, 22 Feb 2021 00:38:50 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"e6d70a8e143a10e2364770448a186603c1b347e4"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-22T00:38:49.778235Z", "started": "2021-02-22T00:38:49.778235Z"} 
 </msg>
<status status="PASS" starttime="20210222 00:38:47.968" endtime="20210222 00:38:50.983"></status>
</kw>
<status status="PASS" starttime="20210222 00:38:47.967" endtime="20210222 00:38:50.983"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210222 00:38:50.984" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210222 00:38:51.085" level="INFO">Process completed.</msg>
<msg timestamp="20210222 00:38:51.085" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210222 00:38:50.984" endtime="20210222 00:38:51.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210222 00:38:51.086" level="INFO">[I 2021-02-22 00:38:49.032 ServerApp] Writing notebook server cookie secret to /home/runner/.local/share/jupyter/runtime/jupyter_cookie_secret
[I 2021-02-22 00:38:49.772 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-22 00:38:49.791 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-22 00:38:49.800 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-22 00:38:49.800 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-22 00:38:49.800 ServerApp] Jupyter Server 1.4.0 is running at:
[I 2021-02-22 00:38:49.800 ServerApp] http://localhost:9999/
[I 2021-02-22 00:38:49.800 ServerApp]  or http://127.0.0.1:9999/
[I 2021-02-22 00:38:49.800 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-02-22 00:38:50.984 ServerApp] received signal 15, stopping
[I 2021-02-22 00:38:50.984 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210222 00:38:51.086" endtime="20210222 00:38:51.086"></status>
</kw>
<status status="PASS" starttime="20210222 00:38:50.984" endtime="20210222 00:38:51.087"></status>
</kw>
<status status="PASS" starttime="20210222 00:38:47.958" endtime="20210222 00:38:51.087" critical="yes"></status>
</test>
<status status="PASS" starttime="20210222 00:38:47.885" endtime="20210222 00:38:51.088"></status>
</suite>
<suite id="s1-s1-s2" name="Nbclassic" source="/home/runner/work/robots/robots/atest/jupyter_server/Nbclassic.robot">
<test id="s1-s1-s2-t1" name="Test Entrypoint">
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210222 00:38:51.212" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210222 00:38:51.212" endtime="20210222 00:38:51.212"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210222 00:38:51.213" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210222 00:38:51.216" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210222 00:38:51.212" endtime="20210222 00:38:51.216"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210222 00:38:51.217" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210222 00:38:51.217" endtime="20210222 00:38:51.217"></status>
</kw>
<status status="PASS" starttime="20210222 00:38:51.211" endtime="20210222 00:38:51.218"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210222 00:38:51.219" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210222 00:38:51.218" endtime="20210222 00:38:51.219"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210222 00:38:51.829" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210222 00:38:51.829" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Mon, 22 Feb 2021 00:38:51 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"ecc4e8883e0cca7425c3bf8c6dd50a3fc4bf50f8"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-22T00:38:51.785790Z", "started": "2021-02-22T00:38:51.785790Z"} 
 </msg>
<status status="PASS" starttime="20210222 00:38:51.219" endtime="20210222 00:38:51.829"></status>
</kw>
<status status="PASS" starttime="20210222 00:38:51.218" endtime="20210222 00:38:51.830"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210222 00:38:51.831" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210222 00:38:51.932" level="INFO">Process completed.</msg>
<msg timestamp="20210222 00:38:51.932" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210222 00:38:51.831" endtime="20210222 00:38:51.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210222 00:38:51.933" level="INFO">[I 2021-02-22 00:38:51.778 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-22 00:38:51.799 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-22 00:38:51.806 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-22 00:38:51.807 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-22 00:38:51.807 ServerApp] Jupyter Server 1.4.0 is running at:
[I 2021-02-22 00:38:51.807 ServerApp] http://localhost:8888/tree
[I 2021-02-22 00:38:51.807 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-22 00:38:51.807 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-02-22 00:38:51.831 ServerApp] received signal 15, stopping
[I 2021-02-22 00:38:51.831 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210222 00:38:51.932" endtime="20210222 00:38:51.933"></status>
</kw>
<status status="PASS" starttime="20210222 00:38:51.830" endtime="20210222 00:38:51.933"></status>
</kw>
<status status="PASS" starttime="20210222 00:38:51.211" endtime="20210222 00:38:51.934" critical="yes"></status>
</test>
<test id="s1-s1-s2-t2" name="Test Landing Page">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210222 00:38:51.937" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210222 00:38:51.936" endtime="20210222 00:38:51.938"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210222 00:38:51.938" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210222 00:38:51.938" endtime="20210222 00:38:51.938"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210222 00:38:51.939" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210222 00:38:51.939" endtime="20210222 00:38:51.939"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210222 00:38:51.940" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210222 00:38:51.943" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210222 00:38:51.939" endtime="20210222 00:38:51.943"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210222 00:38:51.944" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210222 00:38:51.944" endtime="20210222 00:38:51.944"></status>
</kw>
<status status="PASS" starttime="20210222 00:38:51.938" endtime="20210222 00:38:51.945"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210222 00:38:51.946" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210222 00:38:51.945" endtime="20210222 00:38:51.946"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210222 00:38:52.555" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210222 00:38:52.556" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Mon, 22 Feb 2021 00:38:52 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"9162140f74d2b50a37f33ad0895051ca9009d3c7"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-22T00:38:52.520684Z", "started": "2021-02-22T00:38:52.520684Z"} 
 </msg>
<status status="PASS" starttime="20210222 00:38:51.946" endtime="20210222 00:38:52.556"></status>
</kw>
<status status="PASS" starttime="20210222 00:38:51.945" endtime="20210222 00:38:52.556"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210222 00:38:52.557" level="INFO">http://127.0.0.1:8888</msg>
<msg timestamp="20210222 00:38:56.868" level="INFO">0%|          | 0/108773488 [00:00&lt;?, ?it/s] 17%|#7        | 18892800/108773488 [00:00&lt;00:00, 188727047.71it/s] 41%|####      | 44165120/108773488 [00:00&lt;00:00, 226337386.86it/s] 62%|######2   | 67880960/108773488 [00:00&lt;00:00, 231274179.02it/s] 85%|########4 | 91934720/108773488 [00:00&lt;00:00, 234876557.22it/s]100%|##########| 108773488/108773488 [00:00&lt;00:00, 233946112.66it/s]</msg>
<status status="PASS" starttime="20210222 00:38:52.556" endtime="20210222 00:38:56.869"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210222 00:38:56.870" endtime="20210222 00:38:56.991"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210222 00:38:57.133" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-1.png"&gt;&lt;img src="puppeteer-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210222 00:38:56.991" endtime="20210222 00:38:57.133"></status>
</kw>
<status status="PASS" starttime="20210222 00:38:56.869" endtime="20210222 00:38:57.133"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210222 00:38:57.133" endtime="20210222 00:38:57.158"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210222 00:38:57.159" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210222 00:38:57.260" level="INFO">Process completed.</msg>
<msg timestamp="20210222 00:38:57.260" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210222 00:38:57.159" endtime="20210222 00:38:57.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210222 00:38:57.261" level="INFO">[I 2021-02-22 00:38:52.513 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-22 00:38:52.534 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-22 00:38:52.542 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-22 00:38:52.542 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-22 00:38:52.542 ServerApp] Jupyter Server 1.4.0 is running at:
[I 2021-02-22 00:38:52.542 ServerApp] http://localhost:8888/tree
[I 2021-02-22 00:38:52.542 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-22 00:38:52.542 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-02-22 00:38:56.612 ServerApp] 302 GET / (127.0.0.1) 0.50ms
[C 2021-02-22 00:38:57.159 ServerApp] received signal 15, stopping
[I 2021-02-22 00:38:57.159 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210222 00:38:57.260" endtime="20210222 00:38:57.261"></status>
</kw>
<status status="PASS" starttime="20210222 00:38:57.158" endtime="20210222 00:38:57.261"></status>
</kw>
<status status="PASS" starttime="20210222 00:38:51.935" endtime="20210222 00:38:57.262" critical="yes"></status>
</test>
<test id="s1-s1-s2-t3" name="Test file_to_run">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210222 00:38:57.265" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210222 00:38:57.263" endtime="20210222 00:38:57.265"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210222 00:38:57.266" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210222 00:38:57.266" endtime="20210222 00:38:57.266"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210222 00:38:57.268" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210222 00:38:57.267" endtime="20210222 00:38:57.268"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210222 00:38:57.269" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210222 00:38:57.273" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210222 00:38:57.268" endtime="20210222 00:38:57.273"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210222 00:38:57.274" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210222 00:38:57.274" endtime="20210222 00:38:57.275"></status>
</kw>
<status status="PASS" starttime="20210222 00:38:57.267" endtime="20210222 00:38:57.275"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210222 00:38:57.276" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210222 00:38:57.275" endtime="20210222 00:38:57.276"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210222 00:38:57.885" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210222 00:38:57.886" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Mon, 22 Feb 2021 00:38:57 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"743a6888088104c0584221f21aa5bc55fa943caa"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-22T00:38:57.853279Z", "started": "2021-02-22T00:38:57.853279Z"} 
 </msg>
<status status="PASS" starttime="20210222 00:38:57.276" endtime="20210222 00:38:57.886"></status>
</kw>
<status status="PASS" starttime="20210222 00:38:57.275" endtime="20210222 00:38:57.886"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210222 00:38:57.887" level="INFO">http://127.0.0.1:8888</msg>
<status status="PASS" starttime="20210222 00:38:57.886" endtime="20210222 00:38:58.311"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210222 00:38:58.314" endtime="20210222 00:38:58.433"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210222 00:38:58.584" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-2.png"&gt;&lt;img src="puppeteer-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210222 00:38:58.433" endtime="20210222 00:38:58.584"></status>
</kw>
<status status="PASS" starttime="20210222 00:38:58.312" endtime="20210222 00:38:58.584"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210222 00:38:58.584" endtime="20210222 00:38:58.597"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210222 00:38:58.598" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210222 00:38:58.699" level="INFO">Process completed.</msg>
<msg timestamp="20210222 00:38:58.699" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210222 00:38:58.598" endtime="20210222 00:38:58.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210222 00:38:58.700" level="INFO">[I 2021-02-22 00:38:57.846 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-22 00:38:57.867 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-22 00:38:57.874 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-22 00:38:57.874 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-22 00:38:57.874 ServerApp] Jupyter Server 1.4.0 is running at:
[I 2021-02-22 00:38:57.874 ServerApp] http://localhost:8888/tree
[I 2021-02-22 00:38:57.874 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-22 00:38:57.874 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-02-22 00:38:58.057 ServerApp] 302 GET / (127.0.0.1) 0.49ms
[C 2021-02-22 00:38:58.598 ServerApp] received signal 15, stopping
[I 2021-02-22 00:38:58.598 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210222 00:38:58.700" endtime="20210222 00:38:58.700"></status>
</kw>
<status status="PASS" starttime="20210222 00:38:58.598" endtime="20210222 00:38:58.701"></status>
</kw>
<status status="PASS" starttime="20210222 00:38:57.262" endtime="20210222 00:38:58.701" critical="yes"></status>
</test>
<status status="PASS" starttime="20210222 00:38:51.090" endtime="20210222 00:38:58.703"></status>
</suite>
<status status="PASS" starttime="20210222 00:38:47.883" endtime="20210222 00:38:58.706"></status>
</suite>
<status status="PASS" starttime="20210222 00:38:47.862" endtime="20210222 00:38:58.709"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="Atest">Atest</stat>
<stat pass="4" fail="0" id="s1-s1" name="Jupyter Server">Atest.Jupyter Server</stat>
<stat pass="1" fail="0" id="s1-s1-s1" name="JupyterServerCLI">Atest.Jupyter Server.JupyterServerCLI</stat>
<stat pass="3" fail="0" id="s1-s1-s2" name="Nbclassic">Atest.Jupyter Server.Nbclassic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
