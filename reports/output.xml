<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.8.8 on linux)" generated="20210310 00:40:05.966" rpa="false">
<suite id="s1" name="Atest" source="/home/runner/work/robots/robots/atest">
<suite id="s1-s1" name="Jupyter Server" source="/home/runner/work/robots/robots/atest/jupyter_server">
<suite id="s1-s1-s1" name="JupyterServerCLI" source="/home/runner/work/robots/robots/atest/jupyter_server/JupyterServerCLI.robot">
<test id="s1-s1-s1-t1" name="Test &quot;port&quot; trait">
<kw name="Start Unauthenticated Jupyter Server" library="Variables">
<arguments>
<arg>--ServerApp.port=9999</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210310 00:40:06.085" level="INFO">${extra_args} = ['--ServerApp.token=', '']</msg>
<status status="PASS" starttime="20210310 00:40:06.085" endtime="20210310 00:40:06.086"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210310 00:40:06.086" level="INFO">Starting process:
jupyter-server --ServerApp.port=9999 --ServerApp.token= ""</msg>
<msg timestamp="20210310 00:40:06.090" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210310 00:40:06.086" endtime="20210310 00:40:06.090"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210310 00:40:06.091" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210310 00:40:06.090" endtime="20210310 00:40:06.091"></status>
</kw>
<status status="PASS" starttime="20210310 00:40:06.084" endtime="20210310 00:40:06.091"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<arguments>
<arg>http://127.0.0.1:9999</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210310 00:40:06.092" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:9999, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210310 00:40:06.091" endtime="20210310 00:40:06.092"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210310 00:40:07.503" level="INFO">GET Request : url=http://127.0.0.1:9999/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210310 00:40:07.503" level="INFO">GET Response : url=http://127.0.0.1:9999/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Wed, 10 Mar 2021 00:40:07 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"b073316fe9522f36f9da6d4b1c7f4ea294c05510"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-03-10T00:40:07.456604Z", "started": "2021-03-10T00:40:07.456604Z"} 
 </msg>
<status status="PASS" starttime="20210310 00:40:06.092" endtime="20210310 00:40:07.503"></status>
</kw>
<status status="PASS" starttime="20210310 00:40:06.091" endtime="20210310 00:40:07.504"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210310 00:40:07.505" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210310 00:40:07.605" level="INFO">Process completed.</msg>
<msg timestamp="20210310 00:40:07.606" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210310 00:40:07.505" endtime="20210310 00:40:07.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210310 00:40:07.606" level="INFO">[I 2021-03-10 00:40:06.903 ServerApp] Writing notebook server cookie secret to /home/runner/.local/share/jupyter/runtime/jupyter_cookie_secret
[I 2021-03-10 00:40:07.449 ServerApp] nbclassic | extension was successfully linked.
[W 2021-03-10 00:40:07.472 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-03-10 00:40:07.482 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-03-10 00:40:07.482 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-03-10 00:40:07.482 ServerApp] Jupyter Server 1.4.1 is running at:
[I 2021-03-10 00:40:07.482 ServerApp] http://localhost:9999/
[I 2021-03-10 00:40:07.482 ServerApp]  or http://127.0.0.1:9999/
[I 2021-03-10 00:40:07.482 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-03-10 00:40:07.505 ServerApp] received signal 15, stopping
[I 2021-03-10 00:40:07.505 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210310 00:40:07.606" endtime="20210310 00:40:07.607"></status>
</kw>
<status status="PASS" starttime="20210310 00:40:07.504" endtime="20210310 00:40:07.607"></status>
</kw>
<status status="PASS" starttime="20210310 00:40:06.083" endtime="20210310 00:40:07.607" critical="yes"></status>
</test>
<status status="PASS" starttime="20210310 00:40:05.998" endtime="20210310 00:40:07.608"></status>
</suite>
<suite id="s1-s1-s2" name="Nbclassic" source="/home/runner/work/robots/robots/atest/jupyter_server/Nbclassic.robot">
<test id="s1-s1-s2-t1" name="Test Entrypoint">
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210310 00:40:07.755" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210310 00:40:07.754" endtime="20210310 00:40:07.755"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210310 00:40:07.755" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210310 00:40:07.759" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210310 00:40:07.755" endtime="20210310 00:40:07.760"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210310 00:40:07.761" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210310 00:40:07.760" endtime="20210310 00:40:07.761"></status>
</kw>
<status status="PASS" starttime="20210310 00:40:07.754" endtime="20210310 00:40:07.761"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210310 00:40:07.762" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210310 00:40:07.762" endtime="20210310 00:40:07.764"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210310 00:40:09.175" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210310 00:40:09.175" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Wed, 10 Mar 2021 00:40:09 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"940a17a08c23eb0f0cee4cf3c2a9de2ad903b52b"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-03-10T00:40:08.397944Z", "started": "2021-03-10T00:40:08.397944Z"} 
 </msg>
<status status="PASS" starttime="20210310 00:40:07.765" endtime="20210310 00:40:09.176"></status>
</kw>
<status status="PASS" starttime="20210310 00:40:07.761" endtime="20210310 00:40:09.176"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210310 00:40:09.177" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210310 00:40:09.277" level="INFO">Process completed.</msg>
<msg timestamp="20210310 00:40:09.278" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210310 00:40:09.177" endtime="20210310 00:40:09.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210310 00:40:09.278" level="INFO">[I 2021-03-10 00:40:08.390 ServerApp] nbclassic | extension was successfully linked.
[W 2021-03-10 00:40:08.413 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-03-10 00:40:08.421 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-03-10 00:40:08.421 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-03-10 00:40:08.421 ServerApp] Jupyter Server 1.4.1 is running at:
[I 2021-03-10 00:40:08.421 ServerApp] http://localhost:8888/tree
[I 2021-03-10 00:40:08.421 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-03-10 00:40:08.421 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-03-10 00:40:09.177 ServerApp] received signal 15, stopping
[I 2021-03-10 00:40:09.177 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210310 00:40:09.278" endtime="20210310 00:40:09.278"></status>
</kw>
<status status="PASS" starttime="20210310 00:40:09.176" endtime="20210310 00:40:09.279"></status>
</kw>
<status status="PASS" starttime="20210310 00:40:07.753" endtime="20210310 00:40:09.279" critical="yes"></status>
</test>
<test id="s1-s1-s2-t2" name="Test Landing Page">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210310 00:40:09.281" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210310 00:40:09.280" endtime="20210310 00:40:09.281"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210310 00:40:09.282" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210310 00:40:09.282" endtime="20210310 00:40:09.282"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210310 00:40:09.283" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210310 00:40:09.283" endtime="20210310 00:40:09.283"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210310 00:40:09.284" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210310 00:40:09.288" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210310 00:40:09.283" endtime="20210310 00:40:09.288"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210310 00:40:09.289" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210310 00:40:09.288" endtime="20210310 00:40:09.289"></status>
</kw>
<status status="PASS" starttime="20210310 00:40:09.283" endtime="20210310 00:40:09.289"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210310 00:40:09.291" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210310 00:40:09.290" endtime="20210310 00:40:09.291"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210310 00:40:10.702" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210310 00:40:10.702" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Wed, 10 Mar 2021 00:40:10 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"d6e5d9a8a40c2e3b4b739898cf15928cdf7b12f5"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-03-10T00:40:09.884191Z", "started": "2021-03-10T00:40:09.884191Z"} 
 </msg>
<status status="PASS" starttime="20210310 00:40:09.291" endtime="20210310 00:40:10.702"></status>
</kw>
<status status="PASS" starttime="20210310 00:40:09.290" endtime="20210310 00:40:10.702"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210310 00:40:10.703" level="INFO">http://127.0.0.1:8888</msg>
<msg timestamp="20210310 00:40:14.501" level="INFO">0%|          | 0/108773488 [00:00&lt;?, ?it/s] 14%|#3        | 14745600/108773488 [00:00&lt;00:00, 147393588.93it/s] 35%|###5      | 38266880/108773488 [00:00&lt;00:00, 199042217.44it/s] 58%|#####7    | 62648320/108773488 [00:00&lt;00:00, 219475176.12it/s] 80%|#######9  | 86855680/108773488 [00:00&lt;00:00, 228359156.14it/s]100%|##########| 108773488/108773488 [00:00&lt;00:00, 221433877.81it/s]</msg>
<status status="PASS" starttime="20210310 00:40:10.703" endtime="20210310 00:40:14.501"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210310 00:40:14.502" endtime="20210310 00:40:14.644"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210310 00:40:14.803" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-1.png"&gt;&lt;img src="puppeteer-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210310 00:40:14.644" endtime="20210310 00:40:14.803"></status>
</kw>
<status status="PASS" starttime="20210310 00:40:14.501" endtime="20210310 00:40:14.803"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210310 00:40:14.804" endtime="20210310 00:40:14.825"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210310 00:40:14.826" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210310 00:40:14.927" level="INFO">Process completed.</msg>
<msg timestamp="20210310 00:40:14.927" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210310 00:40:14.826" endtime="20210310 00:40:14.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210310 00:40:14.928" level="INFO">[I 2021-03-10 00:40:09.876 ServerApp] nbclassic | extension was successfully linked.
[W 2021-03-10 00:40:09.899 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-03-10 00:40:09.906 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-03-10 00:40:09.906 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-03-10 00:40:09.906 ServerApp] Jupyter Server 1.4.1 is running at:
[I 2021-03-10 00:40:09.906 ServerApp] http://localhost:8888/tree
[I 2021-03-10 00:40:09.906 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-03-10 00:40:09.906 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-03-10 00:40:14.227 ServerApp] 302 GET / (127.0.0.1) 0.61ms
[C 2021-03-10 00:40:14.826 ServerApp] received signal 15, stopping
[I 2021-03-10 00:40:14.826 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210310 00:40:14.927" endtime="20210310 00:40:14.928"></status>
</kw>
<status status="PASS" starttime="20210310 00:40:14.826" endtime="20210310 00:40:14.928"></status>
</kw>
<status status="PASS" starttime="20210310 00:40:09.279" endtime="20210310 00:40:14.928" critical="yes"></status>
</test>
<test id="s1-s1-s2-t3" name="Test file_to_run">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210310 00:40:14.930" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210310 00:40:14.929" endtime="20210310 00:40:14.930"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210310 00:40:14.931" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210310 00:40:14.931" endtime="20210310 00:40:14.931"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210310 00:40:14.932" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210310 00:40:14.932" endtime="20210310 00:40:14.932"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210310 00:40:14.933" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210310 00:40:14.937" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210310 00:40:14.932" endtime="20210310 00:40:14.937"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210310 00:40:14.938" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210310 00:40:14.938" endtime="20210310 00:40:14.938"></status>
</kw>
<status status="PASS" starttime="20210310 00:40:14.931" endtime="20210310 00:40:14.939"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210310 00:40:14.939" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210310 00:40:14.939" endtime="20210310 00:40:14.940"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210310 00:40:16.352" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210310 00:40:16.352" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Wed, 10 Mar 2021 00:40:16 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"1a430029334205581d7a8b7ae98d7d4408364dc9"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-03-10T00:40:15.537029Z", "started": "2021-03-10T00:40:15.537029Z"} 
 </msg>
<status status="PASS" starttime="20210310 00:40:14.940" endtime="20210310 00:40:16.353"></status>
</kw>
<status status="PASS" starttime="20210310 00:40:14.939" endtime="20210310 00:40:16.353"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210310 00:40:16.354" level="INFO">http://127.0.0.1:8888</msg>
<status status="PASS" starttime="20210310 00:40:16.353" endtime="20210310 00:40:16.800"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210310 00:40:16.802" endtime="20210310 00:40:16.934"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210310 00:40:17.068" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-2.png"&gt;&lt;img src="puppeteer-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210310 00:40:16.934" endtime="20210310 00:40:17.068"></status>
</kw>
<status status="PASS" starttime="20210310 00:40:16.801" endtime="20210310 00:40:17.068"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210310 00:40:17.069" endtime="20210310 00:40:17.094"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210310 00:40:17.095" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210310 00:40:17.195" level="INFO">Process completed.</msg>
<msg timestamp="20210310 00:40:17.196" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210310 00:40:17.094" endtime="20210310 00:40:17.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210310 00:40:17.197" level="INFO">[I 2021-03-10 00:40:15.529 ServerApp] nbclassic | extension was successfully linked.
[W 2021-03-10 00:40:15.551 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-03-10 00:40:15.558 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-03-10 00:40:15.558 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-03-10 00:40:15.558 ServerApp] Jupyter Server 1.4.1 is running at:
[I 2021-03-10 00:40:15.558 ServerApp] http://localhost:8888/tree
[I 2021-03-10 00:40:15.558 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-03-10 00:40:15.558 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-03-10 00:40:16.556 ServerApp] 302 GET / (127.0.0.1) 0.58ms
[C 2021-03-10 00:40:17.094 ServerApp] received signal 15, stopping
[I 2021-03-10 00:40:17.095 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210310 00:40:17.196" endtime="20210310 00:40:17.197"></status>
</kw>
<status status="PASS" starttime="20210310 00:40:17.094" endtime="20210310 00:40:17.197"></status>
</kw>
<status status="PASS" starttime="20210310 00:40:14.929" endtime="20210310 00:40:17.197" critical="yes"></status>
</test>
<status status="PASS" starttime="20210310 00:40:07.609" endtime="20210310 00:40:17.198"></status>
</suite>
<status status="PASS" starttime="20210310 00:40:05.996" endtime="20210310 00:40:17.201"></status>
</suite>
<status status="PASS" starttime="20210310 00:40:05.967" endtime="20210310 00:40:17.204"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="Atest">Atest</stat>
<stat pass="4" fail="0" id="s1-s1" name="Jupyter Server">Atest.Jupyter Server</stat>
<stat pass="1" fail="0" id="s1-s1-s1" name="JupyterServerCLI">Atest.Jupyter Server.JupyterServerCLI</stat>
<stat pass="3" fail="0" id="s1-s1-s2" name="Nbclassic">Atest.Jupyter Server.Nbclassic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
