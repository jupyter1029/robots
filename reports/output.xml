<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.8.7 on linux)" generated="20210216 00:37:44.425" rpa="false">
<suite id="s1" name="Atest" source="/home/runner/work/robots/robots/atest">
<suite id="s1-s1" name="Jupyter Server" source="/home/runner/work/robots/robots/atest/jupyter_server">
<suite id="s1-s1-s1" name="JupyterServerCLI" source="/home/runner/work/robots/robots/atest/jupyter_server/JupyterServerCLI.robot">
<test id="s1-s1-s1-t1" name="Test &quot;port&quot; trait">
<kw name="Start Unauthenticated Jupyter Server" library="Variables">
<arguments>
<arg>--ServerApp.port=9999</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210216 00:37:44.526" level="INFO">${extra_args} = ['--ServerApp.token=', '']</msg>
<status status="PASS" starttime="20210216 00:37:44.526" endtime="20210216 00:37:44.526"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210216 00:37:44.527" level="INFO">Starting process:
jupyter-server --ServerApp.port=9999 --ServerApp.token= ""</msg>
<msg timestamp="20210216 00:37:44.532" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210216 00:37:44.527" endtime="20210216 00:37:44.532"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210216 00:37:44.533" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210216 00:37:44.532" endtime="20210216 00:37:44.533"></status>
</kw>
<status status="PASS" starttime="20210216 00:37:44.524" endtime="20210216 00:37:44.533"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<arguments>
<arg>http://127.0.0.1:9999</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210216 00:37:44.534" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:9999, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210216 00:37:44.534" endtime="20210216 00:37:44.535"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210216 00:37:47.550" level="INFO">GET Request : url=http://127.0.0.1:9999/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210216 00:37:47.550" level="INFO">GET Response : url=http://127.0.0.1:9999/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Tue, 16 Feb 2021 00:37:47 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"71fc4bf156a1b72833a07582d09e69fe859259e3"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-16T00:37:46.214503Z", "started": "2021-02-16T00:37:46.214503Z"} 
 </msg>
<status status="PASS" starttime="20210216 00:37:44.535" endtime="20210216 00:37:47.551"></status>
</kw>
<status status="PASS" starttime="20210216 00:37:44.533" endtime="20210216 00:37:47.551"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210216 00:37:47.552" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210216 00:37:47.753" level="INFO">Process completed.</msg>
<msg timestamp="20210216 00:37:47.753" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210216 00:37:47.552" endtime="20210216 00:37:47.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210216 00:37:47.755" level="INFO">[I 2021-02-16 00:37:45.496 ServerApp] Writing notebook server cookie secret to /home/runner/.local/share/jupyter/runtime/jupyter_cookie_secret
[I 2021-02-16 00:37:46.208 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-16 00:37:46.229 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-16 00:37:46.239 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-16 00:37:46.239 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-16 00:37:46.239 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-16 00:37:46.239 ServerApp] http://localhost:9999/
[I 2021-02-16 00:37:46.239 ServerApp]  or http://127.0.0.1:9999/
[I 2021-02-16 00:37:46.239 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-02-16 00:37:47.552 ServerApp] received signal 15, stopping
[I 2021-02-16 00:37:47.552 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210216 00:37:47.754" endtime="20210216 00:37:47.755"></status>
</kw>
<status status="PASS" starttime="20210216 00:37:47.551" endtime="20210216 00:37:47.755"></status>
</kw>
<status status="PASS" starttime="20210216 00:37:44.524" endtime="20210216 00:37:47.755" critical="yes"></status>
</test>
<status status="PASS" starttime="20210216 00:37:44.449" endtime="20210216 00:37:47.757"></status>
</suite>
<suite id="s1-s1-s2" name="Nbclassic" source="/home/runner/work/robots/robots/atest/jupyter_server/Nbclassic.robot">
<test id="s1-s1-s2-t1" name="Test Entrypoint">
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210216 00:37:47.888" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210216 00:37:47.888" endtime="20210216 00:37:47.888"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210216 00:37:47.889" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210216 00:37:47.894" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210216 00:37:47.888" endtime="20210216 00:37:47.894"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210216 00:37:47.895" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210216 00:37:47.894" endtime="20210216 00:37:47.895"></status>
</kw>
<status status="PASS" starttime="20210216 00:37:47.887" endtime="20210216 00:37:47.895"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210216 00:37:47.896" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210216 00:37:47.896" endtime="20210216 00:37:47.897"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210216 00:37:49.312" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210216 00:37:49.312" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Tue, 16 Feb 2021 00:37:49 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"668c6de8be3a56f91c3955a329506e4ef50dd120"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-16T00:37:48.495408Z", "started": "2021-02-16T00:37:48.495408Z"} 
 </msg>
<status status="PASS" starttime="20210216 00:37:47.897" endtime="20210216 00:37:49.312"></status>
</kw>
<status status="PASS" starttime="20210216 00:37:47.895" endtime="20210216 00:37:49.313"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210216 00:37:49.314" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210216 00:37:49.515" level="INFO">Process completed.</msg>
<msg timestamp="20210216 00:37:49.515" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210216 00:37:49.314" endtime="20210216 00:37:49.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210216 00:37:49.517" level="INFO">[I 2021-02-16 00:37:48.488 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-16 00:37:48.509 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-16 00:37:48.516 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-16 00:37:48.517 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-16 00:37:48.517 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-16 00:37:48.517 ServerApp] http://localhost:8888/tree
[I 2021-02-16 00:37:48.517 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-16 00:37:48.517 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-02-16 00:37:49.314 ServerApp] received signal 15, stopping
[I 2021-02-16 00:37:49.314 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210216 00:37:49.516" endtime="20210216 00:37:49.517"></status>
</kw>
<status status="PASS" starttime="20210216 00:37:49.313" endtime="20210216 00:37:49.517"></status>
</kw>
<status status="PASS" starttime="20210216 00:37:47.886" endtime="20210216 00:37:49.517" critical="yes"></status>
</test>
<test id="s1-s1-s2-t2" name="Test Landing Page">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210216 00:37:49.520" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210216 00:37:49.519" endtime="20210216 00:37:49.520"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210216 00:37:49.521" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210216 00:37:49.520" endtime="20210216 00:37:49.521"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210216 00:37:49.522" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210216 00:37:49.521" endtime="20210216 00:37:49.522"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210216 00:37:49.522" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210216 00:37:49.527" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210216 00:37:49.522" endtime="20210216 00:37:49.527"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210216 00:37:49.528" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210216 00:37:49.527" endtime="20210216 00:37:49.528"></status>
</kw>
<status status="PASS" starttime="20210216 00:37:49.521" endtime="20210216 00:37:49.528"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210216 00:37:49.529" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210216 00:37:49.529" endtime="20210216 00:37:49.530"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210216 00:37:50.944" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210216 00:37:50.945" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Tue, 16 Feb 2021 00:37:50 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"a42eb909af64c586ff480d64d476435ae6101d01"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-16T00:37:50.126061Z", "started": "2021-02-16T00:37:50.126061Z"} 
 </msg>
<status status="PASS" starttime="20210216 00:37:49.530" endtime="20210216 00:37:50.945"></status>
</kw>
<status status="PASS" starttime="20210216 00:37:49.528" endtime="20210216 00:37:50.945"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210216 00:37:50.946" level="INFO">http://127.0.0.1:8888</msg>
<msg timestamp="20210216 00:37:55.463" level="INFO">0%|          | 0/108773488 [00:00&lt;?, ?it/s] 19%|#8        | 20172800/108773488 [00:00&lt;00:00, 201711841.14it/s] 38%|###8      | 41666560/108773488 [00:00&lt;00:00, 208782106.94it/s] 58%|#####8    | 63498240/108773488 [00:00&lt;00:00, 213102599.18it/s] 79%|#######9  | 85964800/108773488 [00:00&lt;00:00, 217603032.22it/s]100%|#########9| 108288000/108773488 [00:00&lt;00:00, 219383061.54it/s]100%|##########| 108773488/108773488 [00:00&lt;00:00, 216020111.89it/s]</msg>
<status status="PASS" starttime="20210216 00:37:50.945" endtime="20210216 00:37:55.464"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210216 00:37:55.468" endtime="20210216 00:37:55.590"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210216 00:37:55.750" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-1.png"&gt;&lt;img src="puppeteer-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210216 00:37:55.591" endtime="20210216 00:37:55.750"></status>
</kw>
<status status="PASS" starttime="20210216 00:37:55.464" endtime="20210216 00:37:55.750"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210216 00:37:55.751" endtime="20210216 00:37:55.776"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210216 00:37:55.777" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210216 00:37:55.978" level="INFO">Process completed.</msg>
<msg timestamp="20210216 00:37:55.979" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210216 00:37:55.777" endtime="20210216 00:37:55.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210216 00:37:55.980" level="INFO">[I 2021-02-16 00:37:50.119 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-16 00:37:50.140 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-16 00:37:50.147 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-16 00:37:50.148 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-16 00:37:50.148 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-16 00:37:50.148 ServerApp] http://localhost:8888/tree
[I 2021-02-16 00:37:50.148 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-16 00:37:50.148 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-02-16 00:37:55.187 ServerApp] 302 GET / (127.0.0.1) 0.66ms
[C 2021-02-16 00:37:55.777 ServerApp] received signal 15, stopping
[I 2021-02-16 00:37:55.777 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210216 00:37:55.979" endtime="20210216 00:37:55.980"></status>
</kw>
<status status="PASS" starttime="20210216 00:37:55.776" endtime="20210216 00:37:55.980"></status>
</kw>
<status status="PASS" starttime="20210216 00:37:49.518" endtime="20210216 00:37:55.980" critical="yes"></status>
</test>
<test id="s1-s1-s2-t3" name="Test file_to_run">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210216 00:37:55.983" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210216 00:37:55.981" endtime="20210216 00:37:55.983"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210216 00:37:55.984" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210216 00:37:55.984" endtime="20210216 00:37:55.984"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210216 00:37:55.985" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210216 00:37:55.985" endtime="20210216 00:37:55.985"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210216 00:37:55.986" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210216 00:37:55.991" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210216 00:37:55.985" endtime="20210216 00:37:55.991"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210216 00:37:55.992" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210216 00:37:55.991" endtime="20210216 00:37:55.992"></status>
</kw>
<status status="PASS" starttime="20210216 00:37:55.984" endtime="20210216 00:37:55.992"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210216 00:37:55.993" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210216 00:37:55.993" endtime="20210216 00:37:55.994"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210216 00:37:57.407" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210216 00:37:57.407" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Tue, 16 Feb 2021 00:37:57 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"0f45414d3af1998a88e8258f4849758d95d6a380"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-16T00:37:56.586156Z", "started": "2021-02-16T00:37:56.586156Z"} 
 </msg>
<status status="PASS" starttime="20210216 00:37:55.994" endtime="20210216 00:37:57.407"></status>
</kw>
<status status="PASS" starttime="20210216 00:37:55.992" endtime="20210216 00:37:57.407"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210216 00:37:57.408" level="INFO">http://127.0.0.1:8888</msg>
<status status="PASS" starttime="20210216 00:37:57.408" endtime="20210216 00:37:57.870"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210216 00:37:57.873" endtime="20210216 00:37:58.008"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210216 00:37:58.162" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-2.png"&gt;&lt;img src="puppeteer-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210216 00:37:58.009" endtime="20210216 00:37:58.163"></status>
</kw>
<status status="PASS" starttime="20210216 00:37:57.871" endtime="20210216 00:37:58.163"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210216 00:37:58.163" endtime="20210216 00:37:58.189"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210216 00:37:58.190" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210216 00:37:58.396" level="INFO">Process completed.</msg>
<msg timestamp="20210216 00:37:58.396" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210216 00:37:58.190" endtime="20210216 00:37:58.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210216 00:37:58.397" level="INFO">[I 2021-02-16 00:37:56.579 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-16 00:37:56.600 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-16 00:37:56.607 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-16 00:37:56.608 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-16 00:37:56.608 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-16 00:37:56.608 ServerApp] http://localhost:8888/tree
[I 2021-02-16 00:37:56.608 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-16 00:37:56.608 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-02-16 00:37:57.613 ServerApp] 302 GET / (127.0.0.1) 0.56ms
[C 2021-02-16 00:37:58.190 ServerApp] received signal 15, stopping
[I 2021-02-16 00:37:58.191 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210216 00:37:58.397" endtime="20210216 00:37:58.398"></status>
</kw>
<status status="PASS" starttime="20210216 00:37:58.189" endtime="20210216 00:37:58.398"></status>
</kw>
<status status="PASS" starttime="20210216 00:37:55.981" endtime="20210216 00:37:58.398" critical="yes"></status>
</test>
<status status="PASS" starttime="20210216 00:37:47.759" endtime="20210216 00:37:58.400"></status>
</suite>
<status status="PASS" starttime="20210216 00:37:44.447" endtime="20210216 00:37:58.403"></status>
</suite>
<status status="PASS" starttime="20210216 00:37:44.425" endtime="20210216 00:37:58.406"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="Atest">Atest</stat>
<stat pass="4" fail="0" id="s1-s1" name="Jupyter Server">Atest.Jupyter Server</stat>
<stat pass="1" fail="0" id="s1-s1-s1" name="JupyterServerCLI">Atest.Jupyter Server.JupyterServerCLI</stat>
<stat pass="3" fail="0" id="s1-s1-s2" name="Nbclassic">Atest.Jupyter Server.Nbclassic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
