<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0 (Python 3.8.8 on linux)" generated="20210331 00:52:36.243" rpa="false" schemaversion="2">
<suite id="s1" name="Atest" source="/home/runner/work/robots/robots/atest">
<suite id="s1-s1" name="Jupyter Server" source="/home/runner/work/robots/robots/atest/jupyter_server">
<suite id="s1-s1-s1" name="JupyterServerCLI" source="/home/runner/work/robots/robots/atest/jupyter_server/JupyterServerCLI.robot">
<test id="s1-s1-s1-t1" name="Test &quot;port&quot; trait">
<kw name="Start Unauthenticated Jupyter Server" library="Variables">
<arg>--ServerApp.port=9999</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${extra_args}</var>
<arg>--ServerApp.token=</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210331 00:52:36.337" level="INFO">${extra_args} = ['--ServerApp.token=', '']</msg>
<status status="PASS" starttime="20210331 00:52:36.337" endtime="20210331 00:52:36.338"/>
</kw>
<kw name="Start Process" library="Process">
<var>${jupyter_server_process}</var>
<arg>jupyter-server</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210331 00:52:36.338" level="INFO">Starting process:
jupyter-server --ServerApp.port=9999 --ServerApp.token= ""</msg>
<msg timestamp="20210331 00:52:36.342" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210331 00:52:36.338" endtime="20210331 00:52:36.342"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${jupyter_server_process}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20210331 00:52:36.343" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210331 00:52:36.342" endtime="20210331 00:52:36.343"/>
</kw>
<status status="PASS" starttime="20210331 00:52:36.337" endtime="20210331 00:52:36.343"/>
</kw>
<kw name="Check Server Status" library="Variables">
<arg>http://127.0.0.1:9999</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210331 00:52:36.344" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:9999, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210331 00:52:36.344" endtime="20210331 00:52:36.345"/>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20210331 00:52:37.757" level="INFO">GET Request : url=http://127.0.0.1:9999/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210331 00:52:37.757" level="INFO">GET Response : url=http://127.0.0.1:9999/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Wed, 31 Mar 2021 00:52:37 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"7793f2b1ba23a21896278062b113c67420152076"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-03-31T00:52:37.608838Z", "started": "2021-03-31T00:52:37.608838Z"} 
 </msg>
<status status="PASS" starttime="20210331 00:52:36.345" endtime="20210331 00:52:37.758"/>
</kw>
<status status="PASS" starttime="20210331 00:52:36.343" endtime="20210331 00:52:37.758"/>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="TEARDOWN">
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${jupyter_server_process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20210331 00:52:37.760" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210331 00:52:37.860" level="INFO">Process completed.</msg>
<msg timestamp="20210331 00:52:37.860" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210331 00:52:37.759" endtime="20210331 00:52:37.861"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 00:52:37.863" level="INFO">/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/jupyter_server/transutils.py:13: FutureWarning: The alias `_()` will be deprecated. Use `_i18n()` instead.
  warnings.warn(warn_msg, FutureWarning)
[I 2021-03-31 00:52:37.000 ServerApp] Writing notebook server cookie secret to /home/runner/.local/share/jupyter/runtime/jupyter_cookie_secret
[I 2021-03-31 00:52:37.603 ServerApp] nbclassic | extension was successfully linked.
[W 2021-03-31 00:52:37.618 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-03-31 00:52:37.623 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-03-31 00:52:37.624 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-03-31 00:52:37.624 ServerApp] Jupyter Server 1.5.1 is running at:
[I 2021-03-31 00:52:37.624 ServerApp] http://localhost:9999/
[I 2021-03-31 00:52:37.624 ServerApp]  or http://127.0.0.1:9999/
[I 2021-03-31 00:52:37.624 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-03-31 00:52:37.759 ServerApp] received signal 15, stopping
[I 2021-03-31 00:52:37.760 ServerApp] Shutting down 0 kernels
[I 2021-03-31 00:52:37.760 ServerApp] Shutting down 0 terminals</msg>
<status status="PASS" starttime="20210331 00:52:37.861" endtime="20210331 00:52:37.863"/>
</kw>
<status status="PASS" starttime="20210331 00:52:37.758" endtime="20210331 00:52:37.863"/>
</kw>
<status status="PASS" starttime="20210331 00:52:36.336" endtime="20210331 00:52:37.863"/>
</test>
<status status="PASS" starttime="20210331 00:52:36.268" endtime="20210331 00:52:37.864"/>
</suite>
<suite id="s1-s1-s2" name="Nbclassic" source="/home/runner/work/robots/robots/atest/jupyter_server/Nbclassic.robot">
<test id="s1-s1-s2-t1" name="Test Entrypoint">
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<var>${extra_args}</var>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210331 00:52:37.990" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210331 00:52:37.990" endtime="20210331 00:52:37.990"/>
</kw>
<kw name="Start Process" library="Process">
<var>${jupyter_server_process}</var>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210331 00:52:37.991" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210331 00:52:37.996" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210331 00:52:37.990" endtime="20210331 00:52:37.996"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${jupyter_server_process}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20210331 00:52:37.997" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210331 00:52:37.996" endtime="20210331 00:52:37.997"/>
</kw>
<status status="PASS" starttime="20210331 00:52:37.989" endtime="20210331 00:52:37.997"/>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210331 00:52:37.999" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210331 00:52:37.998" endtime="20210331 00:52:37.999"/>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20210331 00:52:38.609" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210331 00:52:38.609" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Wed, 31 Mar 2021 00:52:38 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"95f1f362f3fbb0ee6f12cab02380b03d399eb9be"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-03-31T00:52:38.549547Z", "started": "2021-03-31T00:52:38.549547Z"} 
 </msg>
<status status="PASS" starttime="20210331 00:52:37.999" endtime="20210331 00:52:38.609"/>
</kw>
<status status="PASS" starttime="20210331 00:52:37.997" endtime="20210331 00:52:38.609"/>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="TEARDOWN">
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${jupyter_server_process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20210331 00:52:38.611" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210331 00:52:38.712" level="INFO">Process completed.</msg>
<msg timestamp="20210331 00:52:38.712" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210331 00:52:38.611" endtime="20210331 00:52:38.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 00:52:38.714" level="INFO">/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/jupyter_server/transutils.py:13: FutureWarning: The alias `_()` will be deprecated. Use `_i18n()` instead.
  warnings.warn(warn_msg, FutureWarning)
[I 2021-03-31 00:52:38.543 ServerApp] nbclassic | extension was successfully linked.
[W 2021-03-31 00:52:38.562 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-03-31 00:52:38.569 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-03-31 00:52:38.569 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-03-31 00:52:38.569 ServerApp] Jupyter Server 1.5.1 is running at:
[I 2021-03-31 00:52:38.569 ServerApp] http://localhost:8888/tree
[I 2021-03-31 00:52:38.569 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-03-31 00:52:38.569 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-03-31 00:52:38.611 ServerApp] received signal 15, stopping
[I 2021-03-31 00:52:38.611 ServerApp] Shutting down 0 kernels
[I 2021-03-31 00:52:38.612 ServerApp] Shutting down 0 terminals</msg>
<status status="PASS" starttime="20210331 00:52:38.712" endtime="20210331 00:52:38.714"/>
</kw>
<status status="PASS" starttime="20210331 00:52:38.610" endtime="20210331 00:52:38.714"/>
</kw>
<status status="PASS" starttime="20210331 00:52:37.988" endtime="20210331 00:52:38.714"/>
</test>
<test id="s1-s1-s2-t2" name="Test Landing Page">
<kw name="Get Variable Value" library="BuiltIn">
<var>${HEADLESS}</var>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20210331 00:52:38.717" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210331 00:52:38.716" endtime="20210331 00:52:38.717"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{options}</var>
<arg>headless=${HEADLESS}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210331 00:52:38.718" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210331 00:52:38.717" endtime="20210331 00:52:38.718"/>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<var>${extra_args}</var>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210331 00:52:38.719" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210331 00:52:38.719" endtime="20210331 00:52:38.719"/>
</kw>
<kw name="Start Process" library="Process">
<var>${jupyter_server_process}</var>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210331 00:52:38.720" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210331 00:52:38.723" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210331 00:52:38.719" endtime="20210331 00:52:38.723"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${jupyter_server_process}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20210331 00:52:38.724" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210331 00:52:38.724" endtime="20210331 00:52:38.724"/>
</kw>
<status status="PASS" starttime="20210331 00:52:38.718" endtime="20210331 00:52:38.725"/>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210331 00:52:38.726" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210331 00:52:38.725" endtime="20210331 00:52:38.726"/>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20210331 00:52:39.335" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210331 00:52:39.335" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Wed, 31 Mar 2021 00:52:39 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"58a8f2253f630dab401c903bf265b7368a8ff0cf"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-03-31T00:52:39.250137Z", "started": "2021-03-31T00:52:39.250137Z"} 
 </msg>
<status status="PASS" starttime="20210331 00:52:38.726" endtime="20210331 00:52:39.336"/>
</kw>
<status status="PASS" starttime="20210331 00:52:38.725" endtime="20210331 00:52:39.336"/>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
<doc>Opens a new browser instance to the specific ``url``.</doc>
<msg timestamp="20210331 00:52:39.337" level="INFO">http://127.0.0.1:8888</msg>
<msg timestamp="20210331 00:52:42.806" level="INFO">0%|          | 0/108773488 [00:00&lt;?, ?it/s]  5%|4         | 5068800/108773488 [00:00&lt;00:02, 50682006.57it/s] 27%|##7       | 29624320/108773488 [00:00&lt;00:00, 165003516.95it/s] 51%|#####     | 55367680/108773488 [00:00&lt;00:00, 207162615.97it/s] 70%|######9   | 76083200/108773488 [00:00&lt;00:00, 166436700.95it/s] 91%|######### | 98785280/108773488 [00:00&lt;00:00, 185275537.31it/s]100%|##########| 108773488/108773488 [00:00&lt;00:00, 166771056.73it/s]</msg>
<status status="PASS" starttime="20210331 00:52:39.336" endtime="20210331 00:52:42.806"/>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<arg>id:ipython_notebook</arg>
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<status status="PASS" starttime="20210331 00:52:42.807" endtime="20210331 00:52:42.916"/>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210331 00:52:43.060" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-1.png"&gt;&lt;img src="puppeteer-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210331 00:52:42.916" endtime="20210331 00:52:43.060"/>
</kw>
<status status="PASS" starttime="20210331 00:52:42.807" endtime="20210331 00:52:43.060"/>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210331 00:52:43.060" endtime="20210331 00:52:43.083"/>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="TEARDOWN">
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${jupyter_server_process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20210331 00:52:43.085" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210331 00:52:43.185" level="INFO">Process completed.</msg>
<msg timestamp="20210331 00:52:43.185" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210331 00:52:43.084" endtime="20210331 00:52:43.185"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 00:52:43.187" level="INFO">/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/jupyter_server/transutils.py:13: FutureWarning: The alias `_()` will be deprecated. Use `_i18n()` instead.
  warnings.warn(warn_msg, FutureWarning)
[I 2021-03-31 00:52:39.244 ServerApp] nbclassic | extension was successfully linked.
[W 2021-03-31 00:52:39.258 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-03-31 00:52:39.264 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-03-31 00:52:39.264 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-03-31 00:52:39.264 ServerApp] Jupyter Server 1.5.1 is running at:
[I 2021-03-31 00:52:39.264 ServerApp] http://localhost:8888/tree
[I 2021-03-31 00:52:39.264 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-03-31 00:52:39.264 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-03-31 00:52:42.571 ServerApp] 302 GET / (127.0.0.1) 0.50ms
[C 2021-03-31 00:52:43.084 ServerApp] received signal 15, stopping
[I 2021-03-31 00:52:43.085 ServerApp] Shutting down 0 kernels
[I 2021-03-31 00:52:43.085 ServerApp] Shutting down 0 terminals</msg>
<status status="PASS" starttime="20210331 00:52:43.186" endtime="20210331 00:52:43.187"/>
</kw>
<status status="PASS" starttime="20210331 00:52:43.084" endtime="20210331 00:52:43.187"/>
</kw>
<status status="PASS" starttime="20210331 00:52:38.715" endtime="20210331 00:52:43.187"/>
</test>
<test id="s1-s1-s2-t3" name="Test file_to_run">
<kw name="Get Variable Value" library="BuiltIn">
<var>${HEADLESS}</var>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20210331 00:52:43.190" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210331 00:52:43.188" endtime="20210331 00:52:43.190"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{options}</var>
<arg>headless=${HEADLESS}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210331 00:52:43.190" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210331 00:52:43.190" endtime="20210331 00:52:43.190"/>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<var>${extra_args}</var>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210331 00:52:43.191" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210331 00:52:43.191" endtime="20210331 00:52:43.191"/>
</kw>
<kw name="Start Process" library="Process">
<var>${jupyter_server_process}</var>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210331 00:52:43.192" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210331 00:52:43.196" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210331 00:52:43.191" endtime="20210331 00:52:43.196"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${jupyter_server_process}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20210331 00:52:43.197" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210331 00:52:43.196" endtime="20210331 00:52:43.197"/>
</kw>
<status status="PASS" starttime="20210331 00:52:43.191" endtime="20210331 00:52:43.197"/>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210331 00:52:43.198" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210331 00:52:43.198" endtime="20210331 00:52:43.199"/>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20210331 00:52:43.808" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210331 00:52:43.808" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Wed, 31 Mar 2021 00:52:43 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"5d9ff6f0a030afdf3d9c2da6892fdeec734d3e00"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-03-31T00:52:43.725192Z", "started": "2021-03-31T00:52:43.725192Z"} 
 </msg>
<status status="PASS" starttime="20210331 00:52:43.199" endtime="20210331 00:52:43.808"/>
</kw>
<status status="PASS" starttime="20210331 00:52:43.197" endtime="20210331 00:52:43.808"/>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
<doc>Opens a new browser instance to the specific ``url``.</doc>
<msg timestamp="20210331 00:52:43.809" level="INFO">http://127.0.0.1:8888</msg>
<status status="PASS" starttime="20210331 00:52:43.808" endtime="20210331 00:52:44.188"/>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<arg>id:ipython_notebook</arg>
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<status status="PASS" starttime="20210331 00:52:44.189" endtime="20210331 00:52:44.303"/>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210331 00:52:44.430" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-2.png"&gt;&lt;img src="puppeteer-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210331 00:52:44.304" endtime="20210331 00:52:44.430"/>
</kw>
<status status="PASS" starttime="20210331 00:52:44.189" endtime="20210331 00:52:44.430"/>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210331 00:52:44.430" endtime="20210331 00:52:44.456"/>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="TEARDOWN">
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${jupyter_server_process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20210331 00:52:44.457" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210331 00:52:44.558" level="INFO">Process completed.</msg>
<msg timestamp="20210331 00:52:44.558" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210331 00:52:44.457" endtime="20210331 00:52:44.558"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 00:52:44.560" level="INFO">/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/jupyter_server/transutils.py:13: FutureWarning: The alias `_()` will be deprecated. Use `_i18n()` instead.
  warnings.warn(warn_msg, FutureWarning)
[I 2021-03-31 00:52:43.719 ServerApp] nbclassic | extension was successfully linked.
[W 2021-03-31 00:52:43.733 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-03-31 00:52:43.739 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-03-31 00:52:43.739 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-03-31 00:52:43.739 ServerApp] Jupyter Server 1.5.1 is running at:
[I 2021-03-31 00:52:43.739 ServerApp] http://localhost:8888/tree
[I 2021-03-31 00:52:43.739 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-03-31 00:52:43.739 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-03-31 00:52:43.968 ServerApp] 302 GET / (127.0.0.1) 0.48ms
[C 2021-03-31 00:52:44.457 ServerApp] received signal 15, stopping
[I 2021-03-31 00:52:44.457 ServerApp] Shutting down 0 kernels
[I 2021-03-31 00:52:44.457 ServerApp] Shutting down 0 terminals</msg>
<status status="PASS" starttime="20210331 00:52:44.559" endtime="20210331 00:52:44.560"/>
</kw>
<status status="PASS" starttime="20210331 00:52:44.456" endtime="20210331 00:52:44.560"/>
</kw>
<status status="PASS" starttime="20210331 00:52:43.187" endtime="20210331 00:52:44.560"/>
</test>
<status status="PASS" starttime="20210331 00:52:37.865" endtime="20210331 00:52:44.561"/>
</suite>
<status status="PASS" starttime="20210331 00:52:36.266" endtime="20210331 00:52:44.563"/>
</suite>
<status status="PASS" starttime="20210331 00:52:36.244" endtime="20210331 00:52:44.565"/>
</suite>
<statistics>
<total>
<stat pass="4" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" skip="0" id="s1" name="Atest">Atest</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1" name="Jupyter Server">Atest.Jupyter Server</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="JupyterServerCLI">Atest.Jupyter Server.JupyterServerCLI</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s2" name="Nbclassic">Atest.Jupyter Server.Nbclassic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
