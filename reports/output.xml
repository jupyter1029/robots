<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.8.7 on linux)" generated="20210223 00:38:07.397" rpa="false">
<suite id="s1" name="Atest" source="/home/runner/work/robots/robots/atest">
<suite id="s1-s1" name="Jupyter Server" source="/home/runner/work/robots/robots/atest/jupyter_server">
<suite id="s1-s1-s1" name="JupyterServerCLI" source="/home/runner/work/robots/robots/atest/jupyter_server/JupyterServerCLI.robot">
<test id="s1-s1-s1-t1" name="Test &quot;port&quot; trait">
<kw name="Start Unauthenticated Jupyter Server" library="Variables">
<arguments>
<arg>--ServerApp.port=9999</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210223 00:38:07.495" level="INFO">${extra_args} = ['--ServerApp.token=', '']</msg>
<status status="PASS" starttime="20210223 00:38:07.495" endtime="20210223 00:38:07.495"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210223 00:38:07.496" level="INFO">Starting process:
jupyter-server --ServerApp.port=9999 --ServerApp.token= ""</msg>
<msg timestamp="20210223 00:38:07.499" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210223 00:38:07.495" endtime="20210223 00:38:07.499"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210223 00:38:07.500" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210223 00:38:07.500" endtime="20210223 00:38:07.500"></status>
</kw>
<status status="PASS" starttime="20210223 00:38:07.493" endtime="20210223 00:38:07.501"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<arguments>
<arg>http://127.0.0.1:9999</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210223 00:38:07.502" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:9999, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210223 00:38:07.501" endtime="20210223 00:38:07.502"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210223 00:38:08.912" level="INFO">GET Request : url=http://127.0.0.1:9999/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210223 00:38:08.912" level="INFO">GET Response : url=http://127.0.0.1:9999/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Tue, 23 Feb 2021 00:38:08 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"bb2f5ad0339689f91e609465f69e9463fe795f11"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-23T00:38:08.299357Z", "started": "2021-02-23T00:38:08.299357Z"} 
 </msg>
<status status="PASS" starttime="20210223 00:38:07.502" endtime="20210223 00:38:08.912"></status>
</kw>
<status status="PASS" starttime="20210223 00:38:07.501" endtime="20210223 00:38:08.913"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210223 00:38:08.914" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210223 00:38:09.014" level="INFO">Process completed.</msg>
<msg timestamp="20210223 00:38:09.015" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210223 00:38:08.913" endtime="20210223 00:38:09.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210223 00:38:09.015" level="INFO">[I 2021-02-23 00:38:07.967 ServerApp] Writing notebook server cookie secret to /home/runner/.local/share/jupyter/runtime/jupyter_cookie_secret
[I 2021-02-23 00:38:08.293 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-23 00:38:08.312 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-23 00:38:08.320 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-23 00:38:08.320 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-23 00:38:08.320 ServerApp] Jupyter Server 1.4.1 is running at:
[I 2021-02-23 00:38:08.320 ServerApp] http://localhost:9999/
[I 2021-02-23 00:38:08.320 ServerApp]  or http://127.0.0.1:9999/
[I 2021-02-23 00:38:08.320 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-02-23 00:38:08.913 ServerApp] received signal 15, stopping
[I 2021-02-23 00:38:08.914 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210223 00:38:09.015" endtime="20210223 00:38:09.015"></status>
</kw>
<status status="PASS" starttime="20210223 00:38:08.913" endtime="20210223 00:38:09.016"></status>
</kw>
<status status="PASS" starttime="20210223 00:38:07.493" endtime="20210223 00:38:09.016" critical="yes"></status>
</test>
<status status="PASS" starttime="20210223 00:38:07.421" endtime="20210223 00:38:09.017"></status>
</suite>
<suite id="s1-s1-s2" name="Nbclassic" source="/home/runner/work/robots/robots/atest/jupyter_server/Nbclassic.robot">
<test id="s1-s1-s2-t1" name="Test Entrypoint">
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210223 00:38:09.141" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210223 00:38:09.141" endtime="20210223 00:38:09.141"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210223 00:38:09.142" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210223 00:38:09.146" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210223 00:38:09.141" endtime="20210223 00:38:09.146"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210223 00:38:09.147" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210223 00:38:09.147" endtime="20210223 00:38:09.147"></status>
</kw>
<status status="PASS" starttime="20210223 00:38:09.140" endtime="20210223 00:38:09.148"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210223 00:38:09.150" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210223 00:38:09.149" endtime="20210223 00:38:09.150"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210223 00:38:09.760" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210223 00:38:09.761" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Tue, 23 Feb 2021 00:38:09 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"c543bb54a5f3599bccbb6eb42167111ed11b7cb9"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-23T00:38:09.693234Z", "started": "2021-02-23T00:38:09.693234Z"} 
 </msg>
<status status="PASS" starttime="20210223 00:38:09.150" endtime="20210223 00:38:09.761"></status>
</kw>
<status status="PASS" starttime="20210223 00:38:09.148" endtime="20210223 00:38:09.761"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210223 00:38:09.762" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210223 00:38:09.863" level="INFO">Process completed.</msg>
<msg timestamp="20210223 00:38:09.863" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210223 00:38:09.762" endtime="20210223 00:38:09.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210223 00:38:09.864" level="INFO">[I 2021-02-23 00:38:09.686 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-23 00:38:09.706 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-23 00:38:09.713 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-23 00:38:09.713 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-23 00:38:09.713 ServerApp] Jupyter Server 1.4.1 is running at:
[I 2021-02-23 00:38:09.713 ServerApp] http://localhost:8888/tree
[I 2021-02-23 00:38:09.713 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-23 00:38:09.713 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-02-23 00:38:09.762 ServerApp] received signal 15, stopping
[I 2021-02-23 00:38:09.762 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210223 00:38:09.863" endtime="20210223 00:38:09.864"></status>
</kw>
<status status="PASS" starttime="20210223 00:38:09.761" endtime="20210223 00:38:09.864"></status>
</kw>
<status status="PASS" starttime="20210223 00:38:09.140" endtime="20210223 00:38:09.864" critical="yes"></status>
</test>
<test id="s1-s1-s2-t2" name="Test Landing Page">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210223 00:38:09.866" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210223 00:38:09.865" endtime="20210223 00:38:09.866"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210223 00:38:09.867" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210223 00:38:09.867" endtime="20210223 00:38:09.867"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210223 00:38:09.868" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210223 00:38:09.868" endtime="20210223 00:38:09.868"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210223 00:38:09.868" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210223 00:38:09.872" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210223 00:38:09.868" endtime="20210223 00:38:09.872"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210223 00:38:09.873" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210223 00:38:09.873" endtime="20210223 00:38:09.873"></status>
</kw>
<status status="PASS" starttime="20210223 00:38:09.867" endtime="20210223 00:38:09.874"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210223 00:38:09.875" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210223 00:38:09.874" endtime="20210223 00:38:09.875"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210223 00:38:10.485" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210223 00:38:10.486" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Tue, 23 Feb 2021 00:38:10 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"db69c1bf64948981fa21546b045b1acbcda23f7f"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-23T00:38:10.414290Z", "started": "2021-02-23T00:38:10.414290Z"} 
 </msg>
<status status="PASS" starttime="20210223 00:38:09.875" endtime="20210223 00:38:10.486"></status>
</kw>
<status status="PASS" starttime="20210223 00:38:09.874" endtime="20210223 00:38:10.486"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210223 00:38:10.487" level="INFO">http://127.0.0.1:8888</msg>
<msg timestamp="20210223 00:38:14.068" level="INFO">0%|          | 0/108773488 [00:00&lt;?, ?it/s] 20%|##        | 22097920/108773488 [00:00&lt;00:00, 220978883.89it/s] 44%|####3     | 47800320/108773488 [00:00&lt;00:00, 241870956.70it/s] 67%|######6   | 72499200/108773488 [00:00&lt;00:00, 244091097.47it/s] 89%|########9 | 97034240/108773488 [00:00&lt;00:00, 244566602.67it/s]100%|##########| 108773488/108773488 [00:00&lt;00:00, 240021778.31it/s]</msg>
<status status="PASS" starttime="20210223 00:38:10.486" endtime="20210223 00:38:14.069"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210223 00:38:14.070" endtime="20210223 00:38:14.168"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210223 00:38:14.296" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-1.png"&gt;&lt;img src="puppeteer-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210223 00:38:14.168" endtime="20210223 00:38:14.296"></status>
</kw>
<status status="PASS" starttime="20210223 00:38:14.069" endtime="20210223 00:38:14.296"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210223 00:38:14.296" endtime="20210223 00:38:14.308"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210223 00:38:14.309" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210223 00:38:14.412" level="INFO">Process completed.</msg>
<msg timestamp="20210223 00:38:14.412" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210223 00:38:14.309" endtime="20210223 00:38:14.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210223 00:38:14.413" level="INFO">[I 2021-02-23 00:38:10.407 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-23 00:38:10.427 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-23 00:38:10.434 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-23 00:38:10.434 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-23 00:38:10.434 ServerApp] Jupyter Server 1.4.1 is running at:
[I 2021-02-23 00:38:10.434 ServerApp] http://localhost:8888/tree
[I 2021-02-23 00:38:10.434 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-23 00:38:10.434 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-02-23 00:38:13.802 ServerApp] 302 GET / (127.0.0.1) 0.51ms
[C 2021-02-23 00:38:14.309 ServerApp] received signal 15, stopping
[I 2021-02-23 00:38:14.309 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210223 00:38:14.413" endtime="20210223 00:38:14.413"></status>
</kw>
<status status="PASS" starttime="20210223 00:38:14.308" endtime="20210223 00:38:14.414"></status>
</kw>
<status status="PASS" starttime="20210223 00:38:09.865" endtime="20210223 00:38:14.414" critical="yes"></status>
</test>
<test id="s1-s1-s2-t3" name="Test file_to_run">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210223 00:38:14.416" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210223 00:38:14.415" endtime="20210223 00:38:14.416"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210223 00:38:14.417" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210223 00:38:14.417" endtime="20210223 00:38:14.417"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210223 00:38:14.418" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210223 00:38:14.418" endtime="20210223 00:38:14.418"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210223 00:38:14.418" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210223 00:38:14.422" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210223 00:38:14.418" endtime="20210223 00:38:14.423"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210223 00:38:14.424" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210223 00:38:14.423" endtime="20210223 00:38:14.424"></status>
</kw>
<status status="PASS" starttime="20210223 00:38:14.417" endtime="20210223 00:38:14.424"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210223 00:38:14.425" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210223 00:38:14.424" endtime="20210223 00:38:14.426"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210223 00:38:15.036" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210223 00:38:15.036" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Tue, 23 Feb 2021 00:38:15 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"fe42df2906f61b9fc01a18d6ca1bd9a6646bb307"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-23T00:38:14.966769Z", "started": "2021-02-23T00:38:14.966769Z"} 
 </msg>
<status status="PASS" starttime="20210223 00:38:14.426" endtime="20210223 00:38:15.036"></status>
</kw>
<status status="PASS" starttime="20210223 00:38:14.424" endtime="20210223 00:38:15.036"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210223 00:38:15.037" level="INFO">http://127.0.0.1:8888</msg>
<status status="PASS" starttime="20210223 00:38:15.036" endtime="20210223 00:38:15.450"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210223 00:38:15.453" endtime="20210223 00:38:15.565"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210223 00:38:15.715" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-2.png"&gt;&lt;img src="puppeteer-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210223 00:38:15.566" endtime="20210223 00:38:15.715"></status>
</kw>
<status status="PASS" starttime="20210223 00:38:15.453" endtime="20210223 00:38:15.715"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210223 00:38:15.715" endtime="20210223 00:38:15.736"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210223 00:38:15.737" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210223 00:38:15.837" level="INFO">Process completed.</msg>
<msg timestamp="20210223 00:38:15.838" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210223 00:38:15.736" endtime="20210223 00:38:15.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210223 00:38:15.839" level="INFO">[I 2021-02-23 00:38:14.960 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-23 00:38:14.980 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-23 00:38:14.986 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-23 00:38:14.987 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-23 00:38:14.987 ServerApp] Jupyter Server 1.4.1 is running at:
[I 2021-02-23 00:38:14.987 ServerApp] http://localhost:8888/tree
[I 2021-02-23 00:38:14.987 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-23 00:38:14.987 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-02-23 00:38:15.204 ServerApp] 302 GET / (127.0.0.1) 0.42ms
[C 2021-02-23 00:38:15.736 ServerApp] received signal 15, stopping
[I 2021-02-23 00:38:15.737 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210223 00:38:15.838" endtime="20210223 00:38:15.839"></status>
</kw>
<status status="PASS" starttime="20210223 00:38:15.736" endtime="20210223 00:38:15.839"></status>
</kw>
<status status="PASS" starttime="20210223 00:38:14.415" endtime="20210223 00:38:15.839" critical="yes"></status>
</test>
<status status="PASS" starttime="20210223 00:38:09.019" endtime="20210223 00:38:15.841"></status>
</suite>
<status status="PASS" starttime="20210223 00:38:07.420" endtime="20210223 00:38:15.844"></status>
</suite>
<status status="PASS" starttime="20210223 00:38:07.398" endtime="20210223 00:38:15.846"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="Atest">Atest</stat>
<stat pass="4" fail="0" id="s1-s1" name="Jupyter Server">Atest.Jupyter Server</stat>
<stat pass="1" fail="0" id="s1-s1-s1" name="JupyterServerCLI">Atest.Jupyter Server.JupyterServerCLI</stat>
<stat pass="3" fail="0" id="s1-s1-s2" name="Nbclassic">Atest.Jupyter Server.Nbclassic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
