<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.8.7 on linux)" generated="20210213 00:37:01.781" rpa="false">
<suite id="s1" name="Atest" source="/home/runner/work/robots/robots/atest">
<suite id="s1-s1" name="Jupyter Server" source="/home/runner/work/robots/robots/atest/jupyter_server">
<suite id="s1-s1-s1" name="JupyterServerCLI" source="/home/runner/work/robots/robots/atest/jupyter_server/JupyterServerCLI.robot">
<test id="s1-s1-s1-t1" name="Test &quot;port&quot; trait">
<kw name="Start Unauthenticated Jupyter Server" library="Variables">
<arguments>
<arg>--ServerApp.port=9999</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210213 00:37:01.898" level="INFO">${extra_args} = ['--ServerApp.token=', '']</msg>
<status status="PASS" starttime="20210213 00:37:01.897" endtime="20210213 00:37:01.898"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210213 00:37:01.898" level="INFO">Starting process:
jupyter-server --ServerApp.port=9999 --ServerApp.token= ""</msg>
<msg timestamp="20210213 00:37:01.902" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210213 00:37:01.898" endtime="20210213 00:37:01.902"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210213 00:37:01.903" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210213 00:37:01.902" endtime="20210213 00:37:01.903"></status>
</kw>
<status status="PASS" starttime="20210213 00:37:01.896" endtime="20210213 00:37:01.903"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<arguments>
<arg>http://127.0.0.1:9999</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210213 00:37:01.905" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:9999, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210213 00:37:01.904" endtime="20210213 00:37:01.905"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210213 00:37:04.920" level="INFO">GET Request : url=http://127.0.0.1:9999/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210213 00:37:04.920" level="INFO">GET Response : url=http://127.0.0.1:9999/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Sat, 13 Feb 2021 00:37:04 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"e287eeb3b129ffe627415fc24f44eb7b9a965711"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-13T00:37:03.943699Z", "started": "2021-02-13T00:37:03.943699Z"} 
 </msg>
<status status="PASS" starttime="20210213 00:37:01.905" endtime="20210213 00:37:04.920"></status>
</kw>
<status status="PASS" starttime="20210213 00:37:01.904" endtime="20210213 00:37:04.921"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210213 00:37:04.922" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210213 00:37:05.023" level="INFO">Process completed.</msg>
<msg timestamp="20210213 00:37:05.023" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210213 00:37:04.922" endtime="20210213 00:37:05.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210213 00:37:05.024" level="INFO">[I 2021-02-13 00:37:03.137 ServerApp] Writing notebook server cookie secret to /home/runner/.local/share/jupyter/runtime/jupyter_cookie_secret
[I 2021-02-13 00:37:03.937 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-13 00:37:03.958 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-13 00:37:03.967 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-13 00:37:03.967 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-13 00:37:03.968 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-13 00:37:03.968 ServerApp] http://localhost:9999/
[I 2021-02-13 00:37:03.968 ServerApp]  or http://127.0.0.1:9999/
[I 2021-02-13 00:37:03.968 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-02-13 00:37:04.922 ServerApp] received signal 15, stopping
[I 2021-02-13 00:37:04.923 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210213 00:37:05.024" endtime="20210213 00:37:05.024"></status>
</kw>
<status status="PASS" starttime="20210213 00:37:04.921" endtime="20210213 00:37:05.024"></status>
</kw>
<status status="PASS" starttime="20210213 00:37:01.895" endtime="20210213 00:37:05.024" critical="yes"></status>
</test>
<status status="PASS" starttime="20210213 00:37:01.811" endtime="20210213 00:37:05.025"></status>
</suite>
<suite id="s1-s1-s2" name="Nbclassic" source="/home/runner/work/robots/robots/atest/jupyter_server/Nbclassic.robot">
<test id="s1-s1-s2-t1" name="Test Entrypoint">
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210213 00:37:05.164" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210213 00:37:05.164" endtime="20210213 00:37:05.164"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210213 00:37:05.165" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210213 00:37:05.169" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210213 00:37:05.164" endtime="20210213 00:37:05.169"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210213 00:37:05.170" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210213 00:37:05.169" endtime="20210213 00:37:05.170"></status>
</kw>
<status status="PASS" starttime="20210213 00:37:05.163" endtime="20210213 00:37:05.170"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210213 00:37:05.171" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210213 00:37:05.171" endtime="20210213 00:37:05.172"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210213 00:37:06.583" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210213 00:37:06.583" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Sat, 13 Feb 2021 00:37:06 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"5e1a1fc20df0efabe6cd28ef322a2fa0eea61638"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-13T00:37:05.771573Z", "started": "2021-02-13T00:37:05.771573Z"} 
 </msg>
<status status="PASS" starttime="20210213 00:37:05.172" endtime="20210213 00:37:06.584"></status>
</kw>
<status status="PASS" starttime="20210213 00:37:05.170" endtime="20210213 00:37:06.584"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210213 00:37:06.585" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210213 00:37:06.686" level="INFO">Process completed.</msg>
<msg timestamp="20210213 00:37:06.686" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210213 00:37:06.585" endtime="20210213 00:37:06.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210213 00:37:06.687" level="INFO">[I 2021-02-13 00:37:05.764 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-13 00:37:05.786 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-13 00:37:05.793 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-13 00:37:05.794 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-13 00:37:05.794 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-13 00:37:05.794 ServerApp] http://localhost:8888/tree
[I 2021-02-13 00:37:05.794 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-13 00:37:05.794 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-02-13 00:37:06.585 ServerApp] received signal 15, stopping
[I 2021-02-13 00:37:06.585 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210213 00:37:06.686" endtime="20210213 00:37:06.687"></status>
</kw>
<status status="PASS" starttime="20210213 00:37:06.584" endtime="20210213 00:37:06.687"></status>
</kw>
<status status="PASS" starttime="20210213 00:37:05.163" endtime="20210213 00:37:06.687" critical="yes"></status>
</test>
<test id="s1-s1-s2-t2" name="Test Landing Page">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210213 00:37:06.690" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210213 00:37:06.689" endtime="20210213 00:37:06.690"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210213 00:37:06.691" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210213 00:37:06.690" endtime="20210213 00:37:06.691"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210213 00:37:06.692" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210213 00:37:06.692" endtime="20210213 00:37:06.692"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210213 00:37:06.693" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210213 00:37:06.696" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210213 00:37:06.692" endtime="20210213 00:37:06.696"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210213 00:37:06.697" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210213 00:37:06.697" endtime="20210213 00:37:06.698"></status>
</kw>
<status status="PASS" starttime="20210213 00:37:06.691" endtime="20210213 00:37:06.698"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210213 00:37:06.699" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210213 00:37:06.698" endtime="20210213 00:37:06.700"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210213 00:37:08.110" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210213 00:37:08.111" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Sat, 13 Feb 2021 00:37:08 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"6159b5f16260e30c1150979c2fd4796ceed0f2d3"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-13T00:37:07.306806Z", "started": "2021-02-13T00:37:07.306806Z"} 
 </msg>
<status status="PASS" starttime="20210213 00:37:06.700" endtime="20210213 00:37:08.111"></status>
</kw>
<status status="PASS" starttime="20210213 00:37:06.698" endtime="20210213 00:37:08.111"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210213 00:37:08.112" level="INFO">http://127.0.0.1:8888</msg>
<msg timestamp="20210213 00:37:13.800" level="INFO">0%|          | 0/108773488 [00:00&lt;?, ?it/s] 15%|#5        | 16537600/108773488 [00:00&lt;00:00, 165348562.17it/s] 38%|###8      | 41379840/108773488 [00:00&lt;00:00, 214170859.24it/s] 60%|#####9    | 65218560/108773488 [00:00&lt;00:00, 225224870.86it/s] 83%|########3 | 90644480/108773488 [00:00&lt;00:00, 236628879.42it/s]100%|##########| 108773488/108773488 [00:00&lt;00:00, 231950535.87it/s]</msg>
<status status="PASS" starttime="20210213 00:37:08.111" endtime="20210213 00:37:13.800"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210213 00:37:13.801" endtime="20210213 00:37:13.921"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210213 00:37:14.044" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-1.png"&gt;&lt;img src="puppeteer-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210213 00:37:13.921" endtime="20210213 00:37:14.044"></status>
</kw>
<status status="PASS" starttime="20210213 00:37:13.800" endtime="20210213 00:37:14.045"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210213 00:37:14.045" endtime="20210213 00:37:14.065"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210213 00:37:14.066" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210213 00:37:14.167" level="INFO">Process completed.</msg>
<msg timestamp="20210213 00:37:14.167" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210213 00:37:14.066" endtime="20210213 00:37:14.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210213 00:37:14.168" level="INFO">[I 2021-02-13 00:37:07.300 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-13 00:37:07.321 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-13 00:37:07.328 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-13 00:37:07.329 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-13 00:37:07.329 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-13 00:37:07.329 ServerApp] http://localhost:8888/tree
[I 2021-02-13 00:37:07.329 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-13 00:37:07.329 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-02-13 00:37:13.511 ServerApp] 302 GET / (127.0.0.1) 0.55ms
[C 2021-02-13 00:37:14.066 ServerApp] received signal 15, stopping
[I 2021-02-13 00:37:14.066 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210213 00:37:14.167" endtime="20210213 00:37:14.168"></status>
</kw>
<status status="PASS" starttime="20210213 00:37:14.066" endtime="20210213 00:37:14.168"></status>
</kw>
<status status="PASS" starttime="20210213 00:37:06.688" endtime="20210213 00:37:14.168" critical="yes"></status>
</test>
<test id="s1-s1-s2-t3" name="Test file_to_run">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210213 00:37:14.171" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210213 00:37:14.169" endtime="20210213 00:37:14.171"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210213 00:37:14.171" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210213 00:37:14.171" endtime="20210213 00:37:14.172"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210213 00:37:14.172" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210213 00:37:14.172" endtime="20210213 00:37:14.172"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210213 00:37:14.173" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210213 00:37:14.177" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210213 00:37:14.173" endtime="20210213 00:37:14.177"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210213 00:37:14.178" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210213 00:37:14.177" endtime="20210213 00:37:14.178"></status>
</kw>
<status status="PASS" starttime="20210213 00:37:14.172" endtime="20210213 00:37:14.178"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210213 00:37:14.179" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210213 00:37:14.179" endtime="20210213 00:37:14.181"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210213 00:37:15.592" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210213 00:37:15.592" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Sat, 13 Feb 2021 00:37:15 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"189bfadaaf65330c0cff327db153c39c9d840119"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-13T00:37:14.786759Z", "started": "2021-02-13T00:37:14.786759Z"} 
 </msg>
<status status="PASS" starttime="20210213 00:37:14.181" endtime="20210213 00:37:15.592"></status>
</kw>
<status status="PASS" starttime="20210213 00:37:14.178" endtime="20210213 00:37:15.593"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210213 00:37:15.593" level="INFO">http://127.0.0.1:8888</msg>
<status status="PASS" starttime="20210213 00:37:15.593" endtime="20210213 00:37:16.034"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210213 00:37:16.036" endtime="20210213 00:37:16.175"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210213 00:37:16.327" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-2.png"&gt;&lt;img src="puppeteer-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210213 00:37:16.175" endtime="20210213 00:37:16.327"></status>
</kw>
<status status="PASS" starttime="20210213 00:37:16.035" endtime="20210213 00:37:16.327"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210213 00:37:16.327" endtime="20210213 00:37:16.354"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210213 00:37:16.355" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210213 00:37:16.456" level="INFO">Process completed.</msg>
<msg timestamp="20210213 00:37:16.456" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210213 00:37:16.355" endtime="20210213 00:37:16.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210213 00:37:16.457" level="INFO">[I 2021-02-13 00:37:14.779 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-13 00:37:14.801 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-13 00:37:14.809 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-13 00:37:14.809 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-13 00:37:14.809 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-13 00:37:14.809 ServerApp] http://localhost:8888/tree
[I 2021-02-13 00:37:14.809 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-13 00:37:14.809 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-02-13 00:37:15.787 ServerApp] 302 GET / (127.0.0.1) 0.63ms
[C 2021-02-13 00:37:16.355 ServerApp] received signal 15, stopping
[I 2021-02-13 00:37:16.355 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210213 00:37:16.456" endtime="20210213 00:37:16.457"></status>
</kw>
<status status="PASS" starttime="20210213 00:37:16.354" endtime="20210213 00:37:16.457"></status>
</kw>
<status status="PASS" starttime="20210213 00:37:14.169" endtime="20210213 00:37:16.457" critical="yes"></status>
</test>
<status status="PASS" starttime="20210213 00:37:05.027" endtime="20210213 00:37:16.458"></status>
</suite>
<status status="PASS" starttime="20210213 00:37:01.809" endtime="20210213 00:37:16.461"></status>
</suite>
<status status="PASS" starttime="20210213 00:37:01.782" endtime="20210213 00:37:16.464"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="Atest">Atest</stat>
<stat pass="4" fail="0" id="s1-s1" name="Jupyter Server">Atest.Jupyter Server</stat>
<stat pass="1" fail="0" id="s1-s1-s1" name="JupyterServerCLI">Atest.Jupyter Server.JupyterServerCLI</stat>
<stat pass="3" fail="0" id="s1-s1-s2" name="Nbclassic">Atest.Jupyter Server.Nbclassic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
