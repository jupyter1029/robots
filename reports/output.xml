<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.8.7 on linux)" generated="20210227 00:38:57.553" rpa="false">
<suite id="s1" name="Atest" source="/home/runner/work/robots/robots/atest">
<suite id="s1-s1" name="Jupyter Server" source="/home/runner/work/robots/robots/atest/jupyter_server">
<suite id="s1-s1-s1" name="JupyterServerCLI" source="/home/runner/work/robots/robots/atest/jupyter_server/JupyterServerCLI.robot">
<test id="s1-s1-s1-t1" name="Test &quot;port&quot; trait">
<kw name="Start Unauthenticated Jupyter Server" library="Variables">
<arguments>
<arg>--ServerApp.port=9999</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210227 00:38:57.655" level="INFO">${extra_args} = ['--ServerApp.token=', '']</msg>
<status status="PASS" starttime="20210227 00:38:57.654" endtime="20210227 00:38:57.655"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210227 00:38:57.656" level="INFO">Starting process:
jupyter-server --ServerApp.port=9999 --ServerApp.token= ""</msg>
<msg timestamp="20210227 00:38:57.659" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210227 00:38:57.655" endtime="20210227 00:38:57.659"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210227 00:38:57.659" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210227 00:38:57.659" endtime="20210227 00:38:57.660"></status>
</kw>
<status status="PASS" starttime="20210227 00:38:57.653" endtime="20210227 00:38:57.660"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<arguments>
<arg>http://127.0.0.1:9999</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210227 00:38:57.661" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:9999, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210227 00:38:57.660" endtime="20210227 00:38:57.661"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210227 00:38:59.072" level="INFO">GET Request : url=http://127.0.0.1:9999/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210227 00:38:59.072" level="INFO">GET Response : url=http://127.0.0.1:9999/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Sat, 27 Feb 2021 00:38:59 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"3a506cce211f545b0a64f9fd34346d7725247f5c"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-27T00:38:58.904034Z", "started": "2021-02-27T00:38:58.904034Z"} 
 </msg>
<status status="PASS" starttime="20210227 00:38:57.661" endtime="20210227 00:38:59.072"></status>
</kw>
<status status="PASS" starttime="20210227 00:38:57.660" endtime="20210227 00:38:59.072"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210227 00:38:59.074" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210227 00:38:59.174" level="INFO">Process completed.</msg>
<msg timestamp="20210227 00:38:59.174" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210227 00:38:59.073" endtime="20210227 00:38:59.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210227 00:38:59.175" level="INFO">[I 2021-02-27 00:38:58.423 ServerApp] Writing notebook server cookie secret to /home/runner/.local/share/jupyter/runtime/jupyter_cookie_secret
[I 2021-02-27 00:38:58.898 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-27 00:38:58.917 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-27 00:38:58.924 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-27 00:38:58.924 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-27 00:38:58.925 ServerApp] Jupyter Server 1.4.1 is running at:
[I 2021-02-27 00:38:58.925 ServerApp] http://localhost:9999/
[I 2021-02-27 00:38:58.925 ServerApp]  or http://127.0.0.1:9999/
[I 2021-02-27 00:38:58.925 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-02-27 00:38:59.073 ServerApp] received signal 15, stopping
[I 2021-02-27 00:38:59.073 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210227 00:38:59.175" endtime="20210227 00:38:59.175"></status>
</kw>
<status status="PASS" starttime="20210227 00:38:59.073" endtime="20210227 00:38:59.175"></status>
</kw>
<status status="PASS" starttime="20210227 00:38:57.652" endtime="20210227 00:38:59.175" critical="yes"></status>
</test>
<status status="PASS" starttime="20210227 00:38:57.581" endtime="20210227 00:38:59.176"></status>
</suite>
<suite id="s1-s1-s2" name="Nbclassic" source="/home/runner/work/robots/robots/atest/jupyter_server/Nbclassic.robot">
<test id="s1-s1-s2-t1" name="Test Entrypoint">
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210227 00:38:59.299" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210227 00:38:59.298" endtime="20210227 00:38:59.299"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210227 00:38:59.299" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210227 00:38:59.302" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210227 00:38:59.299" endtime="20210227 00:38:59.302"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210227 00:38:59.303" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210227 00:38:59.303" endtime="20210227 00:38:59.304"></status>
</kw>
<status status="PASS" starttime="20210227 00:38:59.298" endtime="20210227 00:38:59.304"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210227 00:38:59.305" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210227 00:38:59.304" endtime="20210227 00:38:59.306"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210227 00:38:59.914" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210227 00:38:59.914" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Sat, 27 Feb 2021 00:38:59 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"516c1baddb6ac76d864ffa0065dab29faf61c1da"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-27T00:38:59.816196Z", "started": "2021-02-27T00:38:59.816196Z"} 
 </msg>
<status status="PASS" starttime="20210227 00:38:59.307" endtime="20210227 00:38:59.914"></status>
</kw>
<status status="PASS" starttime="20210227 00:38:59.304" endtime="20210227 00:38:59.914"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210227 00:38:59.916" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210227 00:39:00.016" level="INFO">Process completed.</msg>
<msg timestamp="20210227 00:39:00.016" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210227 00:38:59.915" endtime="20210227 00:39:00.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210227 00:39:00.017" level="INFO">[I 2021-02-27 00:38:59.810 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-27 00:38:59.829 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-27 00:38:59.836 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-27 00:38:59.836 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-27 00:38:59.836 ServerApp] Jupyter Server 1.4.1 is running at:
[I 2021-02-27 00:38:59.837 ServerApp] http://localhost:8888/tree
[I 2021-02-27 00:38:59.837 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-27 00:38:59.837 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-02-27 00:38:59.915 ServerApp] received signal 15, stopping
[I 2021-02-27 00:38:59.915 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210227 00:39:00.017" endtime="20210227 00:39:00.017"></status>
</kw>
<status status="PASS" starttime="20210227 00:38:59.915" endtime="20210227 00:39:00.017"></status>
</kw>
<status status="PASS" starttime="20210227 00:38:59.297" endtime="20210227 00:39:00.018" critical="yes"></status>
</test>
<test id="s1-s1-s2-t2" name="Test Landing Page">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210227 00:39:00.020" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210227 00:39:00.019" endtime="20210227 00:39:00.020"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210227 00:39:00.021" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210227 00:39:00.020" endtime="20210227 00:39:00.021"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210227 00:39:00.022" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210227 00:39:00.022" endtime="20210227 00:39:00.023"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210227 00:39:00.023" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210227 00:39:00.026" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210227 00:39:00.023" endtime="20210227 00:39:00.027"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210227 00:39:00.027" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210227 00:39:00.027" endtime="20210227 00:39:00.028"></status>
</kw>
<status status="PASS" starttime="20210227 00:39:00.022" endtime="20210227 00:39:00.028"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210227 00:39:00.029" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210227 00:39:00.028" endtime="20210227 00:39:00.030"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210227 00:39:00.638" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210227 00:39:00.638" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Sat, 27 Feb 2021 00:39:00 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"f509c42988c6cdcf28d5196eda03dabf9efe0d57"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-27T00:39:00.536359Z", "started": "2021-02-27T00:39:00.536359Z"} 
 </msg>
<status status="PASS" starttime="20210227 00:39:00.030" endtime="20210227 00:39:00.638"></status>
</kw>
<status status="PASS" starttime="20210227 00:39:00.028" endtime="20210227 00:39:00.639"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210227 00:39:00.639" level="INFO">http://127.0.0.1:8888</msg>
<msg timestamp="20210227 00:39:05.850" level="INFO">0%|          | 0/108773488 [00:00&lt;?, ?it/s] 14%|#3        | 14704640/108773488 [00:00&lt;00:00, 147043034.45it/s] 35%|###5      | 38133760/108773488 [00:00&lt;00:00, 198334793.52it/s] 56%|#####6    | 61399040/108773488 [00:00&lt;00:00, 213972387.43it/s] 78%|#######8  | 85002240/108773488 [00:00&lt;00:00, 222618318.21it/s]100%|##########| 108773488/108773488 [00:00&lt;00:00, 219007126.55it/s]</msg>
<status status="PASS" starttime="20210227 00:39:00.639" endtime="20210227 00:39:05.850"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210227 00:39:05.854" endtime="20210227 00:39:05.948"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210227 00:39:06.080" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-1.png"&gt;&lt;img src="puppeteer-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210227 00:39:05.949" endtime="20210227 00:39:06.080"></status>
</kw>
<status status="PASS" starttime="20210227 00:39:05.850" endtime="20210227 00:39:06.081"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210227 00:39:06.081" endtime="20210227 00:39:06.107"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210227 00:39:06.108" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210227 00:39:06.211" level="INFO">Process completed.</msg>
<msg timestamp="20210227 00:39:06.211" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210227 00:39:06.108" endtime="20210227 00:39:06.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210227 00:39:06.212" level="INFO">[I 2021-02-27 00:39:00.530 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-27 00:39:00.549 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-27 00:39:00.555 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-27 00:39:00.555 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-27 00:39:00.555 ServerApp] Jupyter Server 1.4.1 is running at:
[I 2021-02-27 00:39:00.555 ServerApp] http://localhost:8888/tree
[I 2021-02-27 00:39:00.555 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-27 00:39:00.555 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-02-27 00:39:05.620 ServerApp] 302 GET / (127.0.0.1) 0.56ms
[C 2021-02-27 00:39:06.108 ServerApp] received signal 15, stopping
[I 2021-02-27 00:39:06.108 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210227 00:39:06.211" endtime="20210227 00:39:06.212"></status>
</kw>
<status status="PASS" starttime="20210227 00:39:06.108" endtime="20210227 00:39:06.212"></status>
</kw>
<status status="PASS" starttime="20210227 00:39:00.018" endtime="20210227 00:39:06.212" critical="yes"></status>
</test>
<test id="s1-s1-s2-t3" name="Test file_to_run">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210227 00:39:06.215" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210227 00:39:06.213" endtime="20210227 00:39:06.215"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210227 00:39:06.215" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210227 00:39:06.215" endtime="20210227 00:39:06.215"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210227 00:39:06.216" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210227 00:39:06.216" endtime="20210227 00:39:06.216"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210227 00:39:06.217" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210227 00:39:06.220" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210227 00:39:06.216" endtime="20210227 00:39:06.220"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210227 00:39:06.221" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210227 00:39:06.221" endtime="20210227 00:39:06.221"></status>
</kw>
<status status="PASS" starttime="20210227 00:39:06.215" endtime="20210227 00:39:06.221"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210227 00:39:06.222" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210227 00:39:06.222" endtime="20210227 00:39:06.223"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210227 00:39:06.831" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210227 00:39:06.831" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Sat, 27 Feb 2021 00:39:06 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"f40c67aa5cbbeab439c15be80a71749466ee8b33"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-27T00:39:06.729577Z", "started": "2021-02-27T00:39:06.729577Z"} 
 </msg>
<status status="PASS" starttime="20210227 00:39:06.223" endtime="20210227 00:39:06.831"></status>
</kw>
<status status="PASS" starttime="20210227 00:39:06.222" endtime="20210227 00:39:06.832"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210227 00:39:06.832" level="INFO">http://127.0.0.1:8888</msg>
<status status="PASS" starttime="20210227 00:39:06.832" endtime="20210227 00:39:07.283"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210227 00:39:07.284" endtime="20210227 00:39:07.399"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210227 00:39:07.530" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-2.png"&gt;&lt;img src="puppeteer-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210227 00:39:07.399" endtime="20210227 00:39:07.531"></status>
</kw>
<status status="PASS" starttime="20210227 00:39:07.283" endtime="20210227 00:39:07.531"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210227 00:39:07.531" endtime="20210227 00:39:07.564"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210227 00:39:07.565" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210227 00:39:07.665" level="INFO">Process completed.</msg>
<msg timestamp="20210227 00:39:07.665" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210227 00:39:07.564" endtime="20210227 00:39:07.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210227 00:39:07.666" level="INFO">[I 2021-02-27 00:39:06.723 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-27 00:39:06.742 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-27 00:39:06.749 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-27 00:39:06.749 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-27 00:39:06.749 ServerApp] Jupyter Server 1.4.1 is running at:
[I 2021-02-27 00:39:06.749 ServerApp] http://localhost:8888/tree
[I 2021-02-27 00:39:06.749 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-27 00:39:06.749 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-02-27 00:39:07.057 ServerApp] 302 GET / (127.0.0.1) 0.51ms
[C 2021-02-27 00:39:07.564 ServerApp] received signal 15, stopping
[I 2021-02-27 00:39:07.565 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210227 00:39:07.666" endtime="20210227 00:39:07.666"></status>
</kw>
<status status="PASS" starttime="20210227 00:39:07.564" endtime="20210227 00:39:07.666"></status>
</kw>
<status status="PASS" starttime="20210227 00:39:06.213" endtime="20210227 00:39:07.666" critical="yes"></status>
</test>
<status status="PASS" starttime="20210227 00:38:59.177" endtime="20210227 00:39:07.667"></status>
</suite>
<status status="PASS" starttime="20210227 00:38:57.579" endtime="20210227 00:39:07.670"></status>
</suite>
<status status="PASS" starttime="20210227 00:38:57.554" endtime="20210227 00:39:07.673"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="Atest">Atest</stat>
<stat pass="4" fail="0" id="s1-s1" name="Jupyter Server">Atest.Jupyter Server</stat>
<stat pass="1" fail="0" id="s1-s1-s1" name="JupyterServerCLI">Atest.Jupyter Server.JupyterServerCLI</stat>
<stat pass="3" fail="0" id="s1-s1-s2" name="Nbclassic">Atest.Jupyter Server.Nbclassic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
