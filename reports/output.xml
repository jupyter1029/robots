<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.8.7 on linux)" generated="20210209 23:01:51.741" rpa="false">
<suite id="s1" name="Atest" source="/home/runner/work/robots/robots/atest">
<suite id="s1-s1" name="Jupyter Server" source="/home/runner/work/robots/robots/atest/jupyter_server">
<suite id="s1-s1-s1" name="JupyterServerCLI" source="/home/runner/work/robots/robots/atest/jupyter_server/JupyterServerCLI.robot">
<test id="s1-s1-s1-t1" name="Test &quot;port&quot; trait">
<kw name="Start Unauthenticated Jupyter Server" library="Variables">
<arguments>
<arg>--ServerApp.port=9999</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210209 23:01:51.845" level="INFO">${extra_args} = ['--ServerApp.token=', '']</msg>
<status status="PASS" starttime="20210209 23:01:51.845" endtime="20210209 23:01:51.845"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210209 23:01:51.846" level="INFO">Starting process:
jupyter-server --ServerApp.port=9999 --ServerApp.token= ""</msg>
<msg timestamp="20210209 23:01:51.849" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210209 23:01:51.846" endtime="20210209 23:01:51.849"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210209 23:01:51.850" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210209 23:01:51.849" endtime="20210209 23:01:51.850"></status>
</kw>
<status status="PASS" starttime="20210209 23:01:51.844" endtime="20210209 23:01:51.850"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<arguments>
<arg>http://127.0.0.1:9999</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210209 23:01:51.852" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:9999, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210209 23:01:51.851" endtime="20210209 23:01:51.852"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210209 23:01:54.864" level="INFO">GET Request : url=http://127.0.0.1:9999/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210209 23:01:54.864" level="INFO">GET Response : url=http://127.0.0.1:9999/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Tue, 09 Feb 2021 23:01:54 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"3187cff9e32dd6f46da8c0fc4c825348ed328df6"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-09T23:01:53.375834Z", "started": "2021-02-09T23:01:53.375834Z"} 
 </msg>
<status status="PASS" starttime="20210209 23:01:51.852" endtime="20210209 23:01:54.864"></status>
</kw>
<status status="PASS" starttime="20210209 23:01:51.851" endtime="20210209 23:01:54.864"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 23:01:54.865" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210209 23:01:54.966" level="INFO">Process completed.</msg>
<msg timestamp="20210209 23:01:54.966" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210209 23:01:54.865" endtime="20210209 23:01:54.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210209 23:01:54.967" level="INFO">[I 2021-02-09 23:01:52.556 ServerApp] Writing notebook server cookie secret to /home/runner/.local/share/jupyter/runtime/jupyter_cookie_secret
[I 2021-02-09 23:01:53.369 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-09 23:01:53.390 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-09 23:01:53.398 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-09 23:01:53.398 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-09 23:01:53.398 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-09 23:01:53.398 ServerApp] http://localhost:9999/
[I 2021-02-09 23:01:53.398 ServerApp]  or http://127.0.0.1:9999/
[I 2021-02-09 23:01:53.398 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-02-09 23:01:54.865 ServerApp] received signal 15, stopping
[I 2021-02-09 23:01:54.865 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210209 23:01:54.966" endtime="20210209 23:01:54.967"></status>
</kw>
<status status="PASS" starttime="20210209 23:01:54.865" endtime="20210209 23:01:54.967"></status>
</kw>
<status status="PASS" starttime="20210209 23:01:51.843" endtime="20210209 23:01:54.967" critical="yes"></status>
</test>
<status status="PASS" starttime="20210209 23:01:51.769" endtime="20210209 23:01:54.968"></status>
</suite>
<suite id="s1-s1-s2" name="Nbclassic" source="/home/runner/work/robots/robots/atest/jupyter_server/Nbclassic.robot">
<test id="s1-s1-s2-t1" name="Test Entrypoint">
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210209 23:01:55.103" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210209 23:01:55.103" endtime="20210209 23:01:55.103"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210209 23:01:55.104" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210209 23:01:55.107" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210209 23:01:55.103" endtime="20210209 23:01:55.107"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210209 23:01:55.108" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210209 23:01:55.107" endtime="20210209 23:01:55.108"></status>
</kw>
<status status="PASS" starttime="20210209 23:01:55.102" endtime="20210209 23:01:55.108"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210209 23:01:55.109" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210209 23:01:55.109" endtime="20210209 23:01:55.110"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210209 23:01:55.717" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210209 23:01:55.717" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Tue, 09 Feb 2021 23:01:55 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"a51529d434f67480869a26fa9349830ef16764f6"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-09T23:01:55.660880Z", "started": "2021-02-09T23:01:55.660880Z"} 
 </msg>
<status status="PASS" starttime="20210209 23:01:55.110" endtime="20210209 23:01:55.717"></status>
</kw>
<status status="PASS" starttime="20210209 23:01:55.108" endtime="20210209 23:01:55.718"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 23:01:55.719" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210209 23:01:55.819" level="INFO">Process completed.</msg>
<msg timestamp="20210209 23:01:55.819" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210209 23:01:55.718" endtime="20210209 23:01:55.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210209 23:01:55.820" level="INFO">[I 2021-02-09 23:01:55.654 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-09 23:01:55.674 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-09 23:01:55.681 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-09 23:01:55.682 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-09 23:01:55.682 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-09 23:01:55.682 ServerApp] http://localhost:8888/tree
[I 2021-02-09 23:01:55.682 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-09 23:01:55.682 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-02-09 23:01:55.718 ServerApp] received signal 15, stopping
[I 2021-02-09 23:01:55.719 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210209 23:01:55.820" endtime="20210209 23:01:55.820"></status>
</kw>
<status status="PASS" starttime="20210209 23:01:55.718" endtime="20210209 23:01:55.820"></status>
</kw>
<status status="PASS" starttime="20210209 23:01:55.102" endtime="20210209 23:01:55.820" critical="yes"></status>
</test>
<test id="s1-s1-s2-t2" name="Test Landing Page">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210209 23:01:55.823" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210209 23:01:55.822" endtime="20210209 23:01:55.823"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210209 23:01:55.824" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210209 23:01:55.823" endtime="20210209 23:01:55.824"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210209 23:01:55.825" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210209 23:01:55.824" endtime="20210209 23:01:55.825"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210209 23:01:55.825" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210209 23:01:55.828" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210209 23:01:55.825" endtime="20210209 23:01:55.828"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210209 23:01:55.829" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210209 23:01:55.829" endtime="20210209 23:01:55.829"></status>
</kw>
<status status="PASS" starttime="20210209 23:01:55.824" endtime="20210209 23:01:55.830"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210209 23:01:55.831" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210209 23:01:55.830" endtime="20210209 23:01:55.831"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210209 23:01:56.438" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210209 23:01:56.439" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Tue, 09 Feb 2021 23:01:56 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"b27d5e642a59d5ee2783f8620e3190605fc7c919"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-09T23:01:56.378833Z", "started": "2021-02-09T23:01:56.378833Z"} 
 </msg>
<status status="PASS" starttime="20210209 23:01:55.832" endtime="20210209 23:01:56.439"></status>
</kw>
<status status="PASS" starttime="20210209 23:01:55.830" endtime="20210209 23:01:56.439"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210209 23:01:56.440" level="INFO">http://127.0.0.1:8888</msg>
<msg timestamp="20210209 23:02:01.105" level="INFO">0%|          | 0/108773488 [00:00&lt;?, ?it/s]  0%|          | 337920/108773488 [00:00&lt;00:32, 3329627.55it/s]  3%|2         | 3031040/108773488 [00:00&lt;00:06, 17124885.19it/s] 12%|#1        | 12912640/108773488 [00:00&lt;00:01, 54291582.83it/s] 21%|##1       | 22876160/108773488 [00:00&lt;00:01, 72094051.44it/s] 30%|###       | 32849920/108773488 [00:00&lt;00:00, 82040654.47it/s] 39%|###9      | 42711040/108773488 [00:00&lt;00:00, 87663247.76it/s] 49%|####8     | 52879360/108773488 [00:00&lt;00:00, 92228823.71it/s] 58%|#####7    | 63016960/108773488 [00:00&lt;00:00, 95088746.44it/s] 67%|######7   | 72980480/108773488 [00:00&lt;00:00, 96482341.49it/s] 76%|#######6  | 82851840/108773488 [00:01&lt;00:00, 97039562.12it/s] 85%|########5 | 92723200/108773488 [00:01&lt;00:00, 97532557.46it/s] 95%|#########4| 103014400/108773488 [00:01&lt;00:00, 97907114.87it/s]100%|##########| 108773488/108773488 [00:01&lt;00:00, 86239133.29it/s]</msg>
<status status="PASS" starttime="20210209 23:01:56.439" endtime="20210209 23:02:01.105"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210209 23:02:01.106" endtime="20210209 23:02:01.231"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210209 23:02:01.383" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-1.png"&gt;&lt;img src="puppeteer-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210209 23:02:01.231" endtime="20210209 23:02:01.384"></status>
</kw>
<status status="PASS" starttime="20210209 23:02:01.106" endtime="20210209 23:02:01.384"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210209 23:02:01.384" endtime="20210209 23:02:01.406"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 23:02:01.408" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210209 23:02:01.508" level="INFO">Process completed.</msg>
<msg timestamp="20210209 23:02:01.508" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210209 23:02:01.407" endtime="20210209 23:02:01.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210209 23:02:01.509" level="INFO">[I 2021-02-09 23:01:56.372 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-09 23:01:56.392 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-09 23:01:56.400 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-09 23:01:56.400 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-09 23:01:56.400 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-09 23:01:56.400 ServerApp] http://localhost:8888/tree
[I 2021-02-09 23:01:56.400 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-09 23:01:56.400 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-02-09 23:02:00.858 ServerApp] 302 GET / (127.0.0.1) 0.47ms
[C 2021-02-09 23:02:01.407 ServerApp] received signal 15, stopping
[I 2021-02-09 23:02:01.407 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210209 23:02:01.509" endtime="20210209 23:02:01.509"></status>
</kw>
<status status="PASS" starttime="20210209 23:02:01.407" endtime="20210209 23:02:01.509"></status>
</kw>
<status status="PASS" starttime="20210209 23:01:55.821" endtime="20210209 23:02:01.509" critical="yes"></status>
</test>
<test id="s1-s1-s2-t3" name="Test file_to_run">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210209 23:02:01.512" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210209 23:02:01.510" endtime="20210209 23:02:01.512"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210209 23:02:01.513" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210209 23:02:01.512" endtime="20210209 23:02:01.513"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210209 23:02:01.513" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210209 23:02:01.513" endtime="20210209 23:02:01.514"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210209 23:02:01.514" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210209 23:02:01.517" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210209 23:02:01.514" endtime="20210209 23:02:01.518"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210209 23:02:01.519" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210209 23:02:01.518" endtime="20210209 23:02:01.519"></status>
</kw>
<status status="PASS" starttime="20210209 23:02:01.513" endtime="20210209 23:02:01.519"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210209 23:02:01.520" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210209 23:02:01.519" endtime="20210209 23:02:01.521"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210209 23:02:02.128" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210209 23:02:02.128" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Tue, 09 Feb 2021 23:02:02 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"2f9ed475ae59e399f2b1adb9cab8993635f7a220"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-09T23:02:02.067348Z", "started": "2021-02-09T23:02:02.067348Z"} 
 </msg>
<status status="PASS" starttime="20210209 23:02:01.521" endtime="20210209 23:02:02.128"></status>
</kw>
<status status="PASS" starttime="20210209 23:02:01.519" endtime="20210209 23:02:02.128"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210209 23:02:02.129" level="INFO">http://127.0.0.1:8888</msg>
<status status="PASS" starttime="20210209 23:02:02.128" endtime="20210209 23:02:02.537"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210209 23:02:02.538" endtime="20210209 23:02:02.668"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210209 23:02:02.818" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-2.png"&gt;&lt;img src="puppeteer-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210209 23:02:02.668" endtime="20210209 23:02:02.818"></status>
</kw>
<status status="PASS" starttime="20210209 23:02:02.537" endtime="20210209 23:02:02.818"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210209 23:02:02.818" endtime="20210209 23:02:02.833"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 23:02:02.834" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210209 23:02:02.934" level="INFO">Process completed.</msg>
<msg timestamp="20210209 23:02:02.935" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210209 23:02:02.833" endtime="20210209 23:02:02.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210209 23:02:02.935" level="INFO">[I 2021-02-09 23:02:02.060 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-09 23:02:02.081 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-09 23:02:02.088 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-09 23:02:02.088 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-09 23:02:02.088 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-09 23:02:02.088 ServerApp] http://localhost:8888/tree
[I 2021-02-09 23:02:02.088 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-09 23:02:02.088 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-02-09 23:02:02.308 ServerApp] 302 GET / (127.0.0.1) 0.48ms
[C 2021-02-09 23:02:02.833 ServerApp] received signal 15, stopping
[I 2021-02-09 23:02:02.834 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210209 23:02:02.935" endtime="20210209 23:02:02.935"></status>
</kw>
<status status="PASS" starttime="20210209 23:02:02.833" endtime="20210209 23:02:02.936"></status>
</kw>
<status status="PASS" starttime="20210209 23:02:01.510" endtime="20210209 23:02:02.936" critical="yes"></status>
</test>
<status status="PASS" starttime="20210209 23:01:54.970" endtime="20210209 23:02:02.937"></status>
</suite>
<status status="PASS" starttime="20210209 23:01:51.767" endtime="20210209 23:02:02.939"></status>
</suite>
<status status="PASS" starttime="20210209 23:01:51.742" endtime="20210209 23:02:02.943"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="Atest">Atest</stat>
<stat pass="4" fail="0" id="s1-s1" name="Jupyter Server">Atest.Jupyter Server</stat>
<stat pass="1" fail="0" id="s1-s1-s1" name="JupyterServerCLI">Atest.Jupyter Server.JupyterServerCLI</stat>
<stat pass="3" fail="0" id="s1-s1-s2" name="Nbclassic">Atest.Jupyter Server.Nbclassic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
