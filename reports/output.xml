<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.8.7 on linux)" generated="20210220 00:37:40.006" rpa="false">
<suite id="s1" name="Atest" source="/home/runner/work/robots/robots/atest">
<suite id="s1-s1" name="Jupyter Server" source="/home/runner/work/robots/robots/atest/jupyter_server">
<suite id="s1-s1-s1" name="JupyterServerCLI" source="/home/runner/work/robots/robots/atest/jupyter_server/JupyterServerCLI.robot">
<test id="s1-s1-s1-t1" name="Test &quot;port&quot; trait">
<kw name="Start Unauthenticated Jupyter Server" library="Variables">
<arguments>
<arg>--ServerApp.port=9999</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210220 00:37:40.092" level="INFO">${extra_args} = ['--ServerApp.token=', '']</msg>
<status status="PASS" starttime="20210220 00:37:40.092" endtime="20210220 00:37:40.092"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210220 00:37:40.093" level="INFO">Starting process:
jupyter-server --ServerApp.port=9999 --ServerApp.token= ""</msg>
<msg timestamp="20210220 00:37:40.096" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210220 00:37:40.092" endtime="20210220 00:37:40.096"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210220 00:37:40.097" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210220 00:37:40.096" endtime="20210220 00:37:40.097"></status>
</kw>
<status status="PASS" starttime="20210220 00:37:40.090" endtime="20210220 00:37:40.097"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<arguments>
<arg>http://127.0.0.1:9999</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210220 00:37:40.098" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:9999, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210220 00:37:40.098" endtime="20210220 00:37:40.099"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210220 00:37:43.111" level="INFO">GET Request : url=http://127.0.0.1:9999/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210220 00:37:43.111" level="INFO">GET Response : url=http://127.0.0.1:9999/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Sat, 20 Feb 2021 00:37:43 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"efb653ba9e509dca50e9039764b2f28bcd41e22a"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-20T00:37:41.542188Z", "started": "2021-02-20T00:37:41.542188Z"} 
 </msg>
<status status="PASS" starttime="20210220 00:37:40.099" endtime="20210220 00:37:43.111"></status>
</kw>
<status status="PASS" starttime="20210220 00:37:40.097" endtime="20210220 00:37:43.111"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 00:37:43.112" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210220 00:37:43.213" level="INFO">Process completed.</msg>
<msg timestamp="20210220 00:37:43.213" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210220 00:37:43.112" endtime="20210220 00:37:43.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210220 00:37:43.214" level="INFO">[I 2021-02-20 00:37:41.006 ServerApp] Writing notebook server cookie secret to /home/runner/.local/share/jupyter/runtime/jupyter_cookie_secret
[I 2021-02-20 00:37:41.537 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-20 00:37:41.553 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-20 00:37:41.561 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-20 00:37:41.561 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-20 00:37:41.561 ServerApp] Jupyter Server 1.4.0 is running at:
[I 2021-02-20 00:37:41.561 ServerApp] http://localhost:9999/
[I 2021-02-20 00:37:41.561 ServerApp]  or http://127.0.0.1:9999/
[I 2021-02-20 00:37:41.561 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-02-20 00:37:43.112 ServerApp] received signal 15, stopping
[I 2021-02-20 00:37:43.113 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210220 00:37:43.214" endtime="20210220 00:37:43.214"></status>
</kw>
<status status="PASS" starttime="20210220 00:37:43.112" endtime="20210220 00:37:43.214"></status>
</kw>
<status status="PASS" starttime="20210220 00:37:40.090" endtime="20210220 00:37:43.214" critical="yes"></status>
</test>
<status status="PASS" starttime="20210220 00:37:40.027" endtime="20210220 00:37:43.215"></status>
</suite>
<suite id="s1-s1-s2" name="Nbclassic" source="/home/runner/work/robots/robots/atest/jupyter_server/Nbclassic.robot">
<test id="s1-s1-s2-t1" name="Test Entrypoint">
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210220 00:37:43.321" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210220 00:37:43.321" endtime="20210220 00:37:43.321"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210220 00:37:43.321" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210220 00:37:43.325" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210220 00:37:43.321" endtime="20210220 00:37:43.325"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210220 00:37:43.326" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210220 00:37:43.325" endtime="20210220 00:37:43.326"></status>
</kw>
<status status="PASS" starttime="20210220 00:37:43.320" endtime="20210220 00:37:43.326"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210220 00:37:43.327" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210220 00:37:43.327" endtime="20210220 00:37:43.328"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210220 00:37:43.937" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210220 00:37:43.937" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Sat, 20 Feb 2021 00:37:43 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"d8fbaafc0532b3194607098646767ef170115abe"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-20T00:37:43.797165Z", "started": "2021-02-20T00:37:43.797165Z"} 
 </msg>
<status status="PASS" starttime="20210220 00:37:43.328" endtime="20210220 00:37:43.937"></status>
</kw>
<status status="PASS" starttime="20210220 00:37:43.326" endtime="20210220 00:37:43.937"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 00:37:43.938" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210220 00:37:44.039" level="INFO">Process completed.</msg>
<msg timestamp="20210220 00:37:44.039" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210220 00:37:43.938" endtime="20210220 00:37:44.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210220 00:37:44.040" level="INFO">[I 2021-02-20 00:37:43.791 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-20 00:37:43.808 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-20 00:37:43.814 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-20 00:37:43.814 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-20 00:37:43.814 ServerApp] Jupyter Server 1.4.0 is running at:
[I 2021-02-20 00:37:43.815 ServerApp] http://localhost:8888/tree
[I 2021-02-20 00:37:43.815 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-20 00:37:43.815 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-02-20 00:37:43.938 ServerApp] received signal 15, stopping
[I 2021-02-20 00:37:43.938 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210220 00:37:44.039" endtime="20210220 00:37:44.040"></status>
</kw>
<status status="PASS" starttime="20210220 00:37:43.937" endtime="20210220 00:37:44.040"></status>
</kw>
<status status="PASS" starttime="20210220 00:37:43.320" endtime="20210220 00:37:44.040" critical="yes"></status>
</test>
<test id="s1-s1-s2-t2" name="Test Landing Page">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210220 00:37:44.042" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210220 00:37:44.041" endtime="20210220 00:37:44.042"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210220 00:37:44.043" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210220 00:37:44.043" endtime="20210220 00:37:44.043"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210220 00:37:44.044" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210220 00:37:44.044" endtime="20210220 00:37:44.044"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210220 00:37:44.044" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210220 00:37:44.048" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210220 00:37:44.044" endtime="20210220 00:37:44.048"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210220 00:37:44.049" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210220 00:37:44.048" endtime="20210220 00:37:44.049"></status>
</kw>
<status status="PASS" starttime="20210220 00:37:44.043" endtime="20210220 00:37:44.049"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210220 00:37:44.050" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210220 00:37:44.049" endtime="20210220 00:37:44.050"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210220 00:37:44.659" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210220 00:37:44.659" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Sat, 20 Feb 2021 00:37:44 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"1a15af2f029225a4de714f48c05c75bb3fe4ae08"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-20T00:37:44.519685Z", "started": "2021-02-20T00:37:44.519685Z"} 
 </msg>
<status status="PASS" starttime="20210220 00:37:44.050" endtime="20210220 00:37:44.659"></status>
</kw>
<status status="PASS" starttime="20210220 00:37:44.049" endtime="20210220 00:37:44.660"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210220 00:37:44.660" level="INFO">http://127.0.0.1:8888</msg>
<msg timestamp="20210220 00:37:49.421" level="INFO">0%|          | 0/108773488 [00:00&lt;?, ?it/s] 18%|#8        | 19660800/108773488 [00:00&lt;00:00, 196566946.07it/s] 46%|####5     | 49551360/108773488 [00:00&lt;00:00, 256724040.12it/s] 71%|#######1  | 77424640/108773488 [00:00&lt;00:00, 266769368.83it/s] 98%|#########7| 106383360/108773488 [00:00&lt;00:00, 275748664.22it/s]100%|##########| 108773488/108773488 [00:00&lt;00:00, 265727153.59it/s]</msg>
<status status="PASS" starttime="20210220 00:37:44.660" endtime="20210220 00:37:49.422"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210220 00:37:49.423" endtime="20210220 00:37:49.515"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210220 00:37:49.622" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-1.png"&gt;&lt;img src="puppeteer-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210220 00:37:49.515" endtime="20210220 00:37:49.623"></status>
</kw>
<status status="PASS" starttime="20210220 00:37:49.422" endtime="20210220 00:37:49.623"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210220 00:37:49.623" endtime="20210220 00:37:49.643"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 00:37:49.644" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210220 00:37:49.745" level="INFO">Process completed.</msg>
<msg timestamp="20210220 00:37:49.745" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210220 00:37:49.644" endtime="20210220 00:37:49.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210220 00:37:49.746" level="INFO">[I 2021-02-20 00:37:44.513 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-20 00:37:44.531 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-20 00:37:44.537 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-20 00:37:44.537 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-20 00:37:44.537 ServerApp] Jupyter Server 1.4.0 is running at:
[I 2021-02-20 00:37:44.537 ServerApp] http://localhost:8888/tree
[I 2021-02-20 00:37:44.537 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-20 00:37:44.537 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-02-20 00:37:49.208 ServerApp] 302 GET / (127.0.0.1) 0.53ms
[C 2021-02-20 00:37:49.644 ServerApp] received signal 15, stopping
[I 2021-02-20 00:37:49.644 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210220 00:37:49.745" endtime="20210220 00:37:49.746"></status>
</kw>
<status status="PASS" starttime="20210220 00:37:49.644" endtime="20210220 00:37:49.746"></status>
</kw>
<status status="PASS" starttime="20210220 00:37:44.041" endtime="20210220 00:37:49.746" critical="yes"></status>
</test>
<test id="s1-s1-s2-t3" name="Test file_to_run">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210220 00:37:49.748" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210220 00:37:49.747" endtime="20210220 00:37:49.748"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210220 00:37:49.749" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210220 00:37:49.749" endtime="20210220 00:37:49.749"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210220 00:37:49.750" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210220 00:37:49.749" endtime="20210220 00:37:49.750"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210220 00:37:49.750" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210220 00:37:49.754" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210220 00:37:49.750" endtime="20210220 00:37:49.754"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210220 00:37:49.755" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210220 00:37:49.754" endtime="20210220 00:37:49.755"></status>
</kw>
<status status="PASS" starttime="20210220 00:37:49.749" endtime="20210220 00:37:49.755"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210220 00:37:49.756" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210220 00:37:49.756" endtime="20210220 00:37:49.757"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210220 00:37:50.366" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210220 00:37:50.366" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Sat, 20 Feb 2021 00:37:50 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"5b2da4a3662b1656dd177833740855cf7c025e33"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-20T00:37:50.227614Z", "started": "2021-02-20T00:37:50.227614Z"} 
 </msg>
<status status="PASS" starttime="20210220 00:37:49.757" endtime="20210220 00:37:50.366"></status>
</kw>
<status status="PASS" starttime="20210220 00:37:49.755" endtime="20210220 00:37:50.366"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210220 00:37:50.367" level="INFO">http://127.0.0.1:8888</msg>
<status status="PASS" starttime="20210220 00:37:50.366" endtime="20210220 00:37:50.781"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210220 00:37:50.783" endtime="20210220 00:37:50.883"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210220 00:37:51.012" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-2.png"&gt;&lt;img src="puppeteer-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210220 00:37:50.883" endtime="20210220 00:37:51.012"></status>
</kw>
<status status="PASS" starttime="20210220 00:37:50.782" endtime="20210220 00:37:51.012"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210220 00:37:51.012" endtime="20210220 00:37:51.032"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 00:37:51.033" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210220 00:37:51.134" level="INFO">Process completed.</msg>
<msg timestamp="20210220 00:37:51.134" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210220 00:37:51.033" endtime="20210220 00:37:51.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210220 00:37:51.134" level="INFO">[I 2021-02-20 00:37:50.221 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-20 00:37:50.239 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-20 00:37:50.245 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-20 00:37:50.245 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-20 00:37:50.245 ServerApp] Jupyter Server 1.4.0 is running at:
[I 2021-02-20 00:37:50.245 ServerApp] http://localhost:8888/tree
[I 2021-02-20 00:37:50.245 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-20 00:37:50.245 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-02-20 00:37:50.573 ServerApp] 302 GET / (127.0.0.1) 0.48ms
[C 2021-02-20 00:37:51.033 ServerApp] received signal 15, stopping
[I 2021-02-20 00:37:51.033 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210220 00:37:51.134" endtime="20210220 00:37:51.135"></status>
</kw>
<status status="PASS" starttime="20210220 00:37:51.032" endtime="20210220 00:37:51.135"></status>
</kw>
<status status="PASS" starttime="20210220 00:37:49.747" endtime="20210220 00:37:51.135" critical="yes"></status>
</test>
<status status="PASS" starttime="20210220 00:37:43.216" endtime="20210220 00:37:51.136"></status>
</suite>
<status status="PASS" starttime="20210220 00:37:40.025" endtime="20210220 00:37:51.137"></status>
</suite>
<status status="PASS" starttime="20210220 00:37:40.007" endtime="20210220 00:37:51.139"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="Atest">Atest</stat>
<stat pass="4" fail="0" id="s1-s1" name="Jupyter Server">Atest.Jupyter Server</stat>
<stat pass="1" fail="0" id="s1-s1-s1" name="JupyterServerCLI">Atest.Jupyter Server.JupyterServerCLI</stat>
<stat pass="3" fail="0" id="s1-s1-s2" name="Nbclassic">Atest.Jupyter Server.Nbclassic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
