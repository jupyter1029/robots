<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.8.8 on linux)" generated="20210311 00:40:12.706" rpa="false">
<suite id="s1" name="Atest" source="/home/runner/work/robots/robots/atest">
<suite id="s1-s1" name="Jupyter Server" source="/home/runner/work/robots/robots/atest/jupyter_server">
<suite id="s1-s1-s1" name="JupyterServerCLI" source="/home/runner/work/robots/robots/atest/jupyter_server/JupyterServerCLI.robot">
<test id="s1-s1-s1-t1" name="Test &quot;port&quot; trait">
<kw name="Start Unauthenticated Jupyter Server" library="Variables">
<arguments>
<arg>--ServerApp.port=9999</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210311 00:40:12.806" level="INFO">${extra_args} = ['--ServerApp.token=', '']</msg>
<status status="PASS" starttime="20210311 00:40:12.806" endtime="20210311 00:40:12.806"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210311 00:40:12.807" level="INFO">Starting process:
jupyter-server --ServerApp.port=9999 --ServerApp.token= ""</msg>
<msg timestamp="20210311 00:40:12.810" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210311 00:40:12.806" endtime="20210311 00:40:12.810"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210311 00:40:12.811" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210311 00:40:12.810" endtime="20210311 00:40:12.811"></status>
</kw>
<status status="PASS" starttime="20210311 00:40:12.805" endtime="20210311 00:40:12.811"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<arguments>
<arg>http://127.0.0.1:9999</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210311 00:40:12.812" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:9999, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210311 00:40:12.812" endtime="20210311 00:40:12.813"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210311 00:40:14.223" level="INFO">GET Request : url=http://127.0.0.1:9999/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210311 00:40:14.223" level="INFO">GET Response : url=http://127.0.0.1:9999/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Thu, 11 Mar 2021 00:40:14 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"e8a396a8e0b063752864641da9a2d18c6ac889d3"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-03-11T00:40:13.629392Z", "started": "2021-03-11T00:40:13.629392Z"} 
 </msg>
<status status="PASS" starttime="20210311 00:40:12.813" endtime="20210311 00:40:14.223"></status>
</kw>
<status status="PASS" starttime="20210311 00:40:12.811" endtime="20210311 00:40:14.223"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210311 00:40:14.225" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210311 00:40:14.325" level="INFO">Process completed.</msg>
<msg timestamp="20210311 00:40:14.325" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210311 00:40:14.224" endtime="20210311 00:40:14.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210311 00:40:14.326" level="INFO">[I 2021-03-11 00:40:13.297 ServerApp] Writing notebook server cookie secret to /home/runner/.local/share/jupyter/runtime/jupyter_cookie_secret
[I 2021-03-11 00:40:13.623 ServerApp] nbclassic | extension was successfully linked.
[W 2021-03-11 00:40:13.642 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-03-11 00:40:13.651 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-03-11 00:40:13.651 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-03-11 00:40:13.651 ServerApp] Jupyter Server 1.4.1 is running at:
[I 2021-03-11 00:40:13.651 ServerApp] http://localhost:9999/
[I 2021-03-11 00:40:13.651 ServerApp]  or http://127.0.0.1:9999/
[I 2021-03-11 00:40:13.651 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-03-11 00:40:14.224 ServerApp] received signal 15, stopping
[I 2021-03-11 00:40:14.224 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210311 00:40:14.325" endtime="20210311 00:40:14.326"></status>
</kw>
<status status="PASS" starttime="20210311 00:40:14.224" endtime="20210311 00:40:14.326"></status>
</kw>
<status status="PASS" starttime="20210311 00:40:12.804" endtime="20210311 00:40:14.326" critical="yes"></status>
</test>
<status status="PASS" starttime="20210311 00:40:12.733" endtime="20210311 00:40:14.327"></status>
</suite>
<suite id="s1-s1-s2" name="Nbclassic" source="/home/runner/work/robots/robots/atest/jupyter_server/Nbclassic.robot">
<test id="s1-s1-s2-t1" name="Test Entrypoint">
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210311 00:40:14.456" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210311 00:40:14.456" endtime="20210311 00:40:14.456"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210311 00:40:14.457" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210311 00:40:14.460" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210311 00:40:14.456" endtime="20210311 00:40:14.461"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210311 00:40:14.462" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210311 00:40:14.461" endtime="20210311 00:40:14.462"></status>
</kw>
<status status="PASS" starttime="20210311 00:40:14.455" endtime="20210311 00:40:14.462"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210311 00:40:14.464" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210311 00:40:14.463" endtime="20210311 00:40:14.466"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210311 00:40:15.074" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210311 00:40:15.074" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Thu, 11 Mar 2021 00:40:15 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"443f62f82fa44e02b1f18b189d5d9b3bfb024719"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-03-11T00:40:15.016057Z", "started": "2021-03-11T00:40:15.016057Z"} 
 </msg>
<status status="PASS" starttime="20210311 00:40:14.466" endtime="20210311 00:40:15.074"></status>
</kw>
<status status="PASS" starttime="20210311 00:40:14.463" endtime="20210311 00:40:15.075"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210311 00:40:15.076" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210311 00:40:15.176" level="INFO">Process completed.</msg>
<msg timestamp="20210311 00:40:15.176" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210311 00:40:15.075" endtime="20210311 00:40:15.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210311 00:40:15.177" level="INFO">[I 2021-03-11 00:40:15.009 ServerApp] nbclassic | extension was successfully linked.
[W 2021-03-11 00:40:15.030 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-03-11 00:40:15.037 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-03-11 00:40:15.037 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-03-11 00:40:15.037 ServerApp] Jupyter Server 1.4.1 is running at:
[I 2021-03-11 00:40:15.037 ServerApp] http://localhost:8888/tree
[I 2021-03-11 00:40:15.037 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-03-11 00:40:15.037 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-03-11 00:40:15.075 ServerApp] received signal 15, stopping
[I 2021-03-11 00:40:15.076 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210311 00:40:15.177" endtime="20210311 00:40:15.177"></status>
</kw>
<status status="PASS" starttime="20210311 00:40:15.075" endtime="20210311 00:40:15.177"></status>
</kw>
<status status="PASS" starttime="20210311 00:40:14.455" endtime="20210311 00:40:15.177" critical="yes"></status>
</test>
<test id="s1-s1-s2-t2" name="Test Landing Page">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210311 00:40:15.180" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210311 00:40:15.178" endtime="20210311 00:40:15.180"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210311 00:40:15.181" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210311 00:40:15.180" endtime="20210311 00:40:15.181"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210311 00:40:15.182" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210311 00:40:15.181" endtime="20210311 00:40:15.182"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210311 00:40:15.182" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210311 00:40:15.185" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210311 00:40:15.182" endtime="20210311 00:40:15.185"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210311 00:40:15.186" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210311 00:40:15.186" endtime="20210311 00:40:15.186"></status>
</kw>
<status status="PASS" starttime="20210311 00:40:15.181" endtime="20210311 00:40:15.186"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210311 00:40:15.188" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210311 00:40:15.187" endtime="20210311 00:40:15.188"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210311 00:40:15.796" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210311 00:40:15.796" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Thu, 11 Mar 2021 00:40:15 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"d1ebb8327a5af96501af05733d667874b0ca5c36"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-03-11T00:40:15.753653Z", "started": "2021-03-11T00:40:15.753653Z"} 
 </msg>
<status status="PASS" starttime="20210311 00:40:15.188" endtime="20210311 00:40:15.796"></status>
</kw>
<status status="PASS" starttime="20210311 00:40:15.187" endtime="20210311 00:40:15.797"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210311 00:40:15.797" level="INFO">http://127.0.0.1:8888</msg>
<msg timestamp="20210311 00:40:19.314" level="INFO">0%|          | 0/108773488 [00:00&lt;?, ?it/s] 14%|#3        | 15134720/108773488 [00:00&lt;00:00, 151326057.74it/s] 28%|##7       | 30269440/108773488 [00:00&lt;00:00, 129286496.68it/s] 49%|####9     | 53411840/108773488 [00:00&lt;00:00, 171958461.63it/s] 71%|#######   | 77189120/108773488 [00:00&lt;00:00, 196514248.20it/s] 94%|#########3| 102010880/108773488 [00:00&lt;00:00, 214478711.89it/s]100%|##########| 108773488/108773488 [00:00&lt;00:00, 196428888.54it/s]</msg>
<status status="PASS" starttime="20210311 00:40:15.797" endtime="20210311 00:40:19.315"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210311 00:40:19.316" endtime="20210311 00:40:19.439"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210311 00:40:19.577" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-1.png"&gt;&lt;img src="puppeteer-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210311 00:40:19.439" endtime="20210311 00:40:19.577"></status>
</kw>
<status status="PASS" starttime="20210311 00:40:19.315" endtime="20210311 00:40:19.577"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210311 00:40:19.578" endtime="20210311 00:40:19.592"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210311 00:40:19.594" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210311 00:40:19.695" level="INFO">Process completed.</msg>
<msg timestamp="20210311 00:40:19.695" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210311 00:40:19.593" endtime="20210311 00:40:19.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210311 00:40:19.696" level="INFO">[I 2021-03-11 00:40:15.747 ServerApp] nbclassic | extension was successfully linked.
[W 2021-03-11 00:40:15.767 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-03-11 00:40:15.774 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-03-11 00:40:15.774 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-03-11 00:40:15.774 ServerApp] Jupyter Server 1.4.1 is running at:
[I 2021-03-11 00:40:15.774 ServerApp] http://localhost:8888/tree
[I 2021-03-11 00:40:15.775 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-03-11 00:40:15.775 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-03-11 00:40:19.079 ServerApp] 302 GET / (127.0.0.1) 1.05ms
[C 2021-03-11 00:40:19.593 ServerApp] received signal 15, stopping
[I 2021-03-11 00:40:19.594 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210311 00:40:19.695" endtime="20210311 00:40:19.696"></status>
</kw>
<status status="PASS" starttime="20210311 00:40:19.593" endtime="20210311 00:40:19.696"></status>
</kw>
<status status="PASS" starttime="20210311 00:40:15.178" endtime="20210311 00:40:19.696" critical="yes"></status>
</test>
<test id="s1-s1-s2-t3" name="Test file_to_run">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210311 00:40:19.698" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210311 00:40:19.697" endtime="20210311 00:40:19.698"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210311 00:40:19.699" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210311 00:40:19.699" endtime="20210311 00:40:19.699"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210311 00:40:19.700" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210311 00:40:19.700" endtime="20210311 00:40:19.700"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210311 00:40:19.700" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210311 00:40:19.704" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210311 00:40:19.700" endtime="20210311 00:40:19.704"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210311 00:40:19.705" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210311 00:40:19.704" endtime="20210311 00:40:19.705"></status>
</kw>
<status status="PASS" starttime="20210311 00:40:19.699" endtime="20210311 00:40:19.705"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210311 00:40:19.706" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210311 00:40:19.706" endtime="20210311 00:40:19.707"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210311 00:40:20.315" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210311 00:40:20.315" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Thu, 11 Mar 2021 00:40:20 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"9fb0aaee8dfdfdaafead81ecb50b54ad276727fa"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-03-11T00:40:20.271772Z", "started": "2021-03-11T00:40:20.271772Z"} 
 </msg>
<status status="PASS" starttime="20210311 00:40:19.707" endtime="20210311 00:40:20.315"></status>
</kw>
<status status="PASS" starttime="20210311 00:40:19.705" endtime="20210311 00:40:20.315"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210311 00:40:20.316" level="INFO">http://127.0.0.1:8888</msg>
<status status="PASS" starttime="20210311 00:40:20.315" endtime="20210311 00:40:20.750"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210311 00:40:20.754" endtime="20210311 00:40:20.873"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210311 00:40:21.029" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-2.png"&gt;&lt;img src="puppeteer-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210311 00:40:20.873" endtime="20210311 00:40:21.029"></status>
</kw>
<status status="PASS" starttime="20210311 00:40:20.751" endtime="20210311 00:40:21.030"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210311 00:40:21.030" endtime="20210311 00:40:21.056"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210311 00:40:21.058" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210311 00:40:21.159" level="INFO">Process completed.</msg>
<msg timestamp="20210311 00:40:21.159" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210311 00:40:21.058" endtime="20210311 00:40:21.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210311 00:40:21.160" level="INFO">[I 2021-03-11 00:40:20.264 ServerApp] nbclassic | extension was successfully linked.
[W 2021-03-11 00:40:20.286 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-03-11 00:40:20.293 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-03-11 00:40:20.294 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-03-11 00:40:20.294 ServerApp] Jupyter Server 1.4.1 is running at:
[I 2021-03-11 00:40:20.294 ServerApp] http://localhost:8888/tree
[I 2021-03-11 00:40:20.294 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-03-11 00:40:20.294 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-03-11 00:40:20.501 ServerApp] 302 GET / (127.0.0.1) 0.49ms
[C 2021-03-11 00:40:21.058 ServerApp] received signal 15, stopping
[I 2021-03-11 00:40:21.058 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210311 00:40:21.159" endtime="20210311 00:40:21.160"></status>
</kw>
<status status="PASS" starttime="20210311 00:40:21.057" endtime="20210311 00:40:21.160"></status>
</kw>
<status status="PASS" starttime="20210311 00:40:19.697" endtime="20210311 00:40:21.160" critical="yes"></status>
</test>
<status status="PASS" starttime="20210311 00:40:14.328" endtime="20210311 00:40:21.161"></status>
</suite>
<status status="PASS" starttime="20210311 00:40:12.731" endtime="20210311 00:40:21.163"></status>
</suite>
<status status="PASS" starttime="20210311 00:40:12.707" endtime="20210311 00:40:21.166"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="Atest">Atest</stat>
<stat pass="4" fail="0" id="s1-s1" name="Jupyter Server">Atest.Jupyter Server</stat>
<stat pass="1" fail="0" id="s1-s1-s1" name="JupyterServerCLI">Atest.Jupyter Server.JupyterServerCLI</stat>
<stat pass="3" fail="0" id="s1-s1-s2" name="Nbclassic">Atest.Jupyter Server.Nbclassic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
