<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.8.7 on linux)" generated="20210214 00:38:56.336" rpa="false">
<suite id="s1" name="Atest" source="/home/runner/work/robots/robots/atest">
<suite id="s1-s1" name="Jupyter Server" source="/home/runner/work/robots/robots/atest/jupyter_server">
<suite id="s1-s1-s1" name="JupyterServerCLI" source="/home/runner/work/robots/robots/atest/jupyter_server/JupyterServerCLI.robot">
<test id="s1-s1-s1-t1" name="Test &quot;port&quot; trait">
<kw name="Start Unauthenticated Jupyter Server" library="Variables">
<arguments>
<arg>--ServerApp.port=9999</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210214 00:38:56.451" level="INFO">${extra_args} = ['--ServerApp.token=', '']</msg>
<status status="PASS" starttime="20210214 00:38:56.450" endtime="20210214 00:38:56.451"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210214 00:38:56.451" level="INFO">Starting process:
jupyter-server --ServerApp.port=9999 --ServerApp.token= ""</msg>
<msg timestamp="20210214 00:38:56.454" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210214 00:38:56.451" endtime="20210214 00:38:56.455"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210214 00:38:56.455" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210214 00:38:56.455" endtime="20210214 00:38:56.456"></status>
</kw>
<status status="PASS" starttime="20210214 00:38:56.449" endtime="20210214 00:38:56.456"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<arguments>
<arg>http://127.0.0.1:9999</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210214 00:38:56.457" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:9999, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210214 00:38:56.456" endtime="20210214 00:38:56.457"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210214 00:38:57.867" level="INFO">GET Request : url=http://127.0.0.1:9999/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210214 00:38:57.867" level="INFO">GET Response : url=http://127.0.0.1:9999/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Sun, 14 Feb 2021 00:38:57 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"435ac03c729dc863b8537b6998de20b3d8dc53b8"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-14T00:38:57.415710Z", "started": "2021-02-14T00:38:57.415710Z"} 
 </msg>
<status status="PASS" starttime="20210214 00:38:56.457" endtime="20210214 00:38:57.868"></status>
</kw>
<status status="PASS" starttime="20210214 00:38:56.456" endtime="20210214 00:38:57.868"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210214 00:38:57.869" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210214 00:38:57.969" level="INFO">Process completed.</msg>
<msg timestamp="20210214 00:38:57.970" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210214 00:38:57.869" endtime="20210214 00:38:57.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210214 00:38:57.970" level="INFO">[I 2021-02-14 00:38:57.068 ServerApp] Writing notebook server cookie secret to /home/runner/.local/share/jupyter/runtime/jupyter_cookie_secret
[I 2021-02-14 00:38:57.409 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-14 00:38:57.429 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-14 00:38:57.438 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-14 00:38:57.438 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-14 00:38:57.438 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-14 00:38:57.438 ServerApp] http://localhost:9999/
[I 2021-02-14 00:38:57.438 ServerApp]  or http://127.0.0.1:9999/
[I 2021-02-14 00:38:57.438 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-02-14 00:38:57.869 ServerApp] received signal 15, stopping
[I 2021-02-14 00:38:57.869 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210214 00:38:57.970" endtime="20210214 00:38:57.970"></status>
</kw>
<status status="PASS" starttime="20210214 00:38:57.868" endtime="20210214 00:38:57.971"></status>
</kw>
<status status="PASS" starttime="20210214 00:38:56.448" endtime="20210214 00:38:57.971" critical="yes"></status>
</test>
<status status="PASS" starttime="20210214 00:38:56.366" endtime="20210214 00:38:57.971"></status>
</suite>
<suite id="s1-s1-s2" name="Nbclassic" source="/home/runner/work/robots/robots/atest/jupyter_server/Nbclassic.robot">
<test id="s1-s1-s2-t1" name="Test Entrypoint">
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210214 00:38:58.105" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210214 00:38:58.105" endtime="20210214 00:38:58.105"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210214 00:38:58.106" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210214 00:38:58.109" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210214 00:38:58.105" endtime="20210214 00:38:58.109"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210214 00:38:58.110" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210214 00:38:58.110" endtime="20210214 00:38:58.110"></status>
</kw>
<status status="PASS" starttime="20210214 00:38:58.105" endtime="20210214 00:38:58.111"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210214 00:38:58.112" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210214 00:38:58.111" endtime="20210214 00:38:58.113"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210214 00:38:58.723" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210214 00:38:58.723" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Sun, 14 Feb 2021 00:38:58 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"9e7cdbd042c12586f2dc6d5f802e2628756d02b9"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-14T00:38:58.693809Z", "started": "2021-02-14T00:38:58.693809Z"} 
 </msg>
<status status="PASS" starttime="20210214 00:38:58.113" endtime="20210214 00:38:58.723"></status>
</kw>
<status status="PASS" starttime="20210214 00:38:58.111" endtime="20210214 00:38:58.723"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210214 00:38:58.724" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210214 00:38:58.825" level="INFO">Process completed.</msg>
<msg timestamp="20210214 00:38:58.825" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210214 00:38:58.724" endtime="20210214 00:38:58.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210214 00:38:58.826" level="INFO">[I 2021-02-14 00:38:58.686 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-14 00:38:58.708 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-14 00:38:58.715 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-14 00:38:58.715 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-14 00:38:58.715 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-14 00:38:58.715 ServerApp] http://localhost:8888/tree
[I 2021-02-14 00:38:58.716 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-14 00:38:58.716 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-02-14 00:38:58.724 ServerApp] received signal 15, stopping
[I 2021-02-14 00:38:58.724 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210214 00:38:58.825" endtime="20210214 00:38:58.826"></status>
</kw>
<status status="PASS" starttime="20210214 00:38:58.723" endtime="20210214 00:38:58.826"></status>
</kw>
<status status="PASS" starttime="20210214 00:38:58.104" endtime="20210214 00:38:58.826" critical="yes"></status>
</test>
<test id="s1-s1-s2-t2" name="Test Landing Page">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210214 00:38:58.828" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210214 00:38:58.827" endtime="20210214 00:38:58.828"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210214 00:38:58.829" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210214 00:38:58.829" endtime="20210214 00:38:58.829"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210214 00:38:58.830" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210214 00:38:58.830" endtime="20210214 00:38:58.830"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210214 00:38:58.831" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210214 00:38:58.834" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210214 00:38:58.830" endtime="20210214 00:38:58.834"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210214 00:38:58.835" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210214 00:38:58.835" endtime="20210214 00:38:58.835"></status>
</kw>
<status status="PASS" starttime="20210214 00:38:58.829" endtime="20210214 00:38:58.835"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210214 00:38:58.836" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210214 00:38:58.836" endtime="20210214 00:38:58.837"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210214 00:38:59.445" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210214 00:38:59.445" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Sun, 14 Feb 2021 00:38:59 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"75a303c4fdb09dbac46718c4753c7b17b6fde76d"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-14T00:38:59.409112Z", "started": "2021-02-14T00:38:59.409112Z"} 
 </msg>
<status status="PASS" starttime="20210214 00:38:58.837" endtime="20210214 00:38:59.445"></status>
</kw>
<status status="PASS" starttime="20210214 00:38:58.836" endtime="20210214 00:38:59.446"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210214 00:38:59.446" level="INFO">http://127.0.0.1:8888</msg>
<msg timestamp="20210214 00:39:03.650" level="INFO">0%|          | 0/108773488 [00:00&lt;?, ?it/s] 15%|#5        | 16609280/108773488 [00:00&lt;00:00, 166004302.45it/s] 38%|###7      | 41000960/108773488 [00:00&lt;00:00, 211780701.47it/s] 59%|#####9    | 64276480/108773488 [00:00&lt;00:00, 221355237.91it/s] 82%|########2 | 89262080/108773488 [00:00&lt;00:00, 232566539.94it/s]100%|##########| 108773488/108773488 [00:00&lt;00:00, 230013993.46it/s]</msg>
<status status="PASS" starttime="20210214 00:38:59.446" endtime="20210214 00:39:03.650"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210214 00:39:03.652" endtime="20210214 00:39:03.794"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210214 00:39:03.950" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-1.png"&gt;&lt;img src="puppeteer-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210214 00:39:03.794" endtime="20210214 00:39:03.951"></status>
</kw>
<status status="PASS" starttime="20210214 00:39:03.651" endtime="20210214 00:39:03.951"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210214 00:39:03.951" endtime="20210214 00:39:03.970"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210214 00:39:03.971" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210214 00:39:04.071" level="INFO">Process completed.</msg>
<msg timestamp="20210214 00:39:04.072" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210214 00:39:03.971" endtime="20210214 00:39:04.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210214 00:39:04.072" level="INFO">[I 2021-02-14 00:38:59.401 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-14 00:38:59.423 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-14 00:38:59.430 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-14 00:38:59.430 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-14 00:38:59.430 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-14 00:38:59.431 ServerApp] http://localhost:8888/tree
[I 2021-02-14 00:38:59.431 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-14 00:38:59.431 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-02-14 00:39:03.391 ServerApp] 302 GET / (127.0.0.1) 0.48ms
[C 2021-02-14 00:39:03.971 ServerApp] received signal 15, stopping
[I 2021-02-14 00:39:03.971 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210214 00:39:04.072" endtime="20210214 00:39:04.072"></status>
</kw>
<status status="PASS" starttime="20210214 00:39:03.970" endtime="20210214 00:39:04.073"></status>
</kw>
<status status="PASS" starttime="20210214 00:38:58.827" endtime="20210214 00:39:04.073" critical="yes"></status>
</test>
<test id="s1-s1-s2-t3" name="Test file_to_run">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210214 00:39:04.075" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210214 00:39:04.074" endtime="20210214 00:39:04.075"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210214 00:39:04.076" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210214 00:39:04.075" endtime="20210214 00:39:04.076"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210214 00:39:04.076" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210214 00:39:04.076" endtime="20210214 00:39:04.077"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210214 00:39:04.077" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210214 00:39:04.081" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210214 00:39:04.077" endtime="20210214 00:39:04.081"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210214 00:39:04.082" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210214 00:39:04.081" endtime="20210214 00:39:04.082"></status>
</kw>
<status status="PASS" starttime="20210214 00:39:04.076" endtime="20210214 00:39:04.082"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210214 00:39:04.083" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210214 00:39:04.083" endtime="20210214 00:39:04.084"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210214 00:39:04.700" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210214 00:39:04.700" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Sun, 14 Feb 2021 00:39:04 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"b66fbbda2734c8739d8fcafd528038c3e8e95421"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-14T00:39:04.668465Z", "started": "2021-02-14T00:39:04.668465Z"} 
 </msg>
<status status="PASS" starttime="20210214 00:39:04.084" endtime="20210214 00:39:04.700"></status>
</kw>
<status status="PASS" starttime="20210214 00:39:04.082" endtime="20210214 00:39:04.700"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210214 00:39:04.701" level="INFO">http://127.0.0.1:8888</msg>
<status status="PASS" starttime="20210214 00:39:04.700" endtime="20210214 00:39:05.113"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210214 00:39:05.117" endtime="20210214 00:39:05.252"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210214 00:39:05.383" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-2.png"&gt;&lt;img src="puppeteer-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210214 00:39:05.252" endtime="20210214 00:39:05.383"></status>
</kw>
<status status="PASS" starttime="20210214 00:39:05.114" endtime="20210214 00:39:05.383"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210214 00:39:05.383" endtime="20210214 00:39:05.409"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210214 00:39:05.410" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210214 00:39:05.510" level="INFO">Process completed.</msg>
<msg timestamp="20210214 00:39:05.511" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210214 00:39:05.410" endtime="20210214 00:39:05.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210214 00:39:05.511" level="INFO">[I 2021-02-14 00:39:04.661 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-14 00:39:04.683 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-14 00:39:04.692 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-14 00:39:04.692 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-14 00:39:04.692 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-14 00:39:04.692 ServerApp] http://localhost:8888/tree
[I 2021-02-14 00:39:04.692 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-14 00:39:04.692 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-02-14 00:39:04.868 ServerApp] 302 GET / (127.0.0.1) 0.48ms
[C 2021-02-14 00:39:05.410 ServerApp] received signal 15, stopping
[I 2021-02-14 00:39:05.410 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210214 00:39:05.511" endtime="20210214 00:39:05.512"></status>
</kw>
<status status="PASS" starttime="20210214 00:39:05.409" endtime="20210214 00:39:05.512"></status>
</kw>
<status status="PASS" starttime="20210214 00:39:04.073" endtime="20210214 00:39:05.512" critical="yes"></status>
</test>
<status status="PASS" starttime="20210214 00:38:57.973" endtime="20210214 00:39:05.513"></status>
</suite>
<status status="PASS" starttime="20210214 00:38:56.364" endtime="20210214 00:39:05.516"></status>
</suite>
<status status="PASS" starttime="20210214 00:38:56.337" endtime="20210214 00:39:05.519"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="Atest">Atest</stat>
<stat pass="4" fail="0" id="s1-s1" name="Jupyter Server">Atest.Jupyter Server</stat>
<stat pass="1" fail="0" id="s1-s1-s1" name="JupyterServerCLI">Atest.Jupyter Server.JupyterServerCLI</stat>
<stat pass="3" fail="0" id="s1-s1-s2" name="Nbclassic">Atest.Jupyter Server.Nbclassic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
