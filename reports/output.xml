<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0 (Python 3.8.8 on linux)" generated="20210330 00:55:10.719" rpa="false" schemaversion="2">
<suite id="s1" name="Atest" source="/home/runner/work/robots/robots/atest">
<suite id="s1-s1" name="Jupyter Server" source="/home/runner/work/robots/robots/atest/jupyter_server">
<suite id="s1-s1-s1" name="JupyterServerCLI" source="/home/runner/work/robots/robots/atest/jupyter_server/JupyterServerCLI.robot">
<test id="s1-s1-s1-t1" name="Test &quot;port&quot; trait">
<kw name="Start Unauthenticated Jupyter Server" library="Variables">
<arg>--ServerApp.port=9999</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${extra_args}</var>
<arg>--ServerApp.token=</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210330 00:55:10.832" level="INFO">${extra_args} = ['--ServerApp.token=', '']</msg>
<status status="PASS" starttime="20210330 00:55:10.831" endtime="20210330 00:55:10.832"/>
</kw>
<kw name="Start Process" library="Process">
<var>${jupyter_server_process}</var>
<arg>jupyter-server</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210330 00:55:10.833" level="INFO">Starting process:
jupyter-server --ServerApp.port=9999 --ServerApp.token= ""</msg>
<msg timestamp="20210330 00:55:10.836" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210330 00:55:10.832" endtime="20210330 00:55:10.836"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${jupyter_server_process}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20210330 00:55:10.837" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210330 00:55:10.836" endtime="20210330 00:55:10.837"/>
</kw>
<status status="PASS" starttime="20210330 00:55:10.831" endtime="20210330 00:55:10.837"/>
</kw>
<kw name="Check Server Status" library="Variables">
<arg>http://127.0.0.1:9999</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210330 00:55:10.838" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:9999, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210330 00:55:10.838" endtime="20210330 00:55:10.839"/>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20210330 00:55:13.851" level="INFO">GET Request : url=http://127.0.0.1:9999/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210330 00:55:13.851" level="INFO">GET Response : url=http://127.0.0.1:9999/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Tue, 30 Mar 2021 00:55:13 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"5de6f2741628da6766ef03a20b76ead7ea79f229"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-03-30T00:55:12.645481Z", "started": "2021-03-30T00:55:12.645481Z"} 
 </msg>
<status status="PASS" starttime="20210330 00:55:10.839" endtime="20210330 00:55:13.852"/>
</kw>
<status status="PASS" starttime="20210330 00:55:10.837" endtime="20210330 00:55:13.852"/>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="TEARDOWN">
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${jupyter_server_process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20210330 00:55:13.853" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210330 00:55:13.954" level="INFO">Process completed.</msg>
<msg timestamp="20210330 00:55:13.954" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210330 00:55:13.853" endtime="20210330 00:55:13.954"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210330 00:55:13.955" level="INFO">/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/jupyter_server/transutils.py:13: FutureWarning: The alias `_()` will be deprecated. Use `_i18n()` instead.
  warnings.warn(warn_msg, FutureWarning)
[I 2021-03-30 00:55:11.852 ServerApp] Writing notebook server cookie secret to /home/runner/.local/share/jupyter/runtime/jupyter_cookie_secret
[I 2021-03-30 00:55:12.639 ServerApp] nbclassic | extension was successfully linked.
[W 2021-03-30 00:55:12.656 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-03-30 00:55:12.662 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-03-30 00:55:12.662 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-03-30 00:55:12.662 ServerApp] Jupyter Server 1.5.1 is running at:
[I 2021-03-30 00:55:12.662 ServerApp] http://localhost:9999/
[I 2021-03-30 00:55:12.663 ServerApp]  or http://127.0.0.1:9999/
[I 2021-03-30 00:55:12.663 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-03-30 00:55:13.853 ServerApp] received signal 15, stopping
[I 2021-03-30 00:55:13.853 ServerApp] Shutting down 0 kernels
[I 2021-03-30 00:55:13.853 ServerApp] Shutting down 0 terminals</msg>
<status status="PASS" starttime="20210330 00:55:13.954" endtime="20210330 00:55:13.955"/>
</kw>
<status status="PASS" starttime="20210330 00:55:13.852" endtime="20210330 00:55:13.955"/>
</kw>
<status status="PASS" starttime="20210330 00:55:10.830" endtime="20210330 00:55:13.955"/>
</test>
<status status="PASS" starttime="20210330 00:55:10.749" endtime="20210330 00:55:13.956"/>
</suite>
<suite id="s1-s1-s2" name="Nbclassic" source="/home/runner/work/robots/robots/atest/jupyter_server/Nbclassic.robot">
<test id="s1-s1-s2-t1" name="Test Entrypoint">
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<var>${extra_args}</var>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210330 00:55:14.096" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210330 00:55:14.095" endtime="20210330 00:55:14.096"/>
</kw>
<kw name="Start Process" library="Process">
<var>${jupyter_server_process}</var>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210330 00:55:14.096" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210330 00:55:14.100" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210330 00:55:14.096" endtime="20210330 00:55:14.100"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${jupyter_server_process}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20210330 00:55:14.101" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210330 00:55:14.100" endtime="20210330 00:55:14.101"/>
</kw>
<status status="PASS" starttime="20210330 00:55:14.095" endtime="20210330 00:55:14.101"/>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210330 00:55:14.102" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210330 00:55:14.102" endtime="20210330 00:55:14.103"/>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20210330 00:55:15.512" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210330 00:55:15.513" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Tue, 30 Mar 2021 00:55:15 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"9f9b8051ffc6b0010418e1559ed0616d807cd839"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-03-30T00:55:14.707836Z", "started": "2021-03-30T00:55:14.707836Z"} 
 </msg>
<status status="PASS" starttime="20210330 00:55:14.103" endtime="20210330 00:55:15.513"/>
</kw>
<status status="PASS" starttime="20210330 00:55:14.101" endtime="20210330 00:55:15.513"/>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="TEARDOWN">
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${jupyter_server_process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20210330 00:55:15.514" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210330 00:55:15.615" level="INFO">Process completed.</msg>
<msg timestamp="20210330 00:55:15.615" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210330 00:55:15.514" endtime="20210330 00:55:15.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210330 00:55:15.616" level="INFO">/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/jupyter_server/transutils.py:13: FutureWarning: The alias `_()` will be deprecated. Use `_i18n()` instead.
  warnings.warn(warn_msg, FutureWarning)
[I 2021-03-30 00:55:14.701 ServerApp] nbclassic | extension was successfully linked.
[W 2021-03-30 00:55:14.717 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-03-30 00:55:14.725 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-03-30 00:55:14.725 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-03-30 00:55:14.725 ServerApp] Jupyter Server 1.5.1 is running at:
[I 2021-03-30 00:55:14.725 ServerApp] http://localhost:8888/tree
[I 2021-03-30 00:55:14.725 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-03-30 00:55:14.725 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-03-30 00:55:15.514 ServerApp] received signal 15, stopping
[I 2021-03-30 00:55:15.514 ServerApp] Shutting down 0 kernels
[I 2021-03-30 00:55:15.514 ServerApp] Shutting down 0 terminals</msg>
<status status="PASS" starttime="20210330 00:55:15.615" endtime="20210330 00:55:15.616"/>
</kw>
<status status="PASS" starttime="20210330 00:55:15.513" endtime="20210330 00:55:15.616"/>
</kw>
<status status="PASS" starttime="20210330 00:55:14.094" endtime="20210330 00:55:15.617"/>
</test>
<test id="s1-s1-s2-t2" name="Test Landing Page">
<kw name="Get Variable Value" library="BuiltIn">
<var>${HEADLESS}</var>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20210330 00:55:15.620" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210330 00:55:15.618" endtime="20210330 00:55:15.620"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{options}</var>
<arg>headless=${HEADLESS}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210330 00:55:15.621" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210330 00:55:15.620" endtime="20210330 00:55:15.621"/>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<var>${extra_args}</var>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210330 00:55:15.622" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210330 00:55:15.622" endtime="20210330 00:55:15.622"/>
</kw>
<kw name="Start Process" library="Process">
<var>${jupyter_server_process}</var>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210330 00:55:15.622" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210330 00:55:15.626" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210330 00:55:15.622" endtime="20210330 00:55:15.626"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${jupyter_server_process}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20210330 00:55:15.627" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210330 00:55:15.626" endtime="20210330 00:55:15.627"/>
</kw>
<status status="PASS" starttime="20210330 00:55:15.621" endtime="20210330 00:55:15.627"/>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210330 00:55:15.629" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210330 00:55:15.628" endtime="20210330 00:55:15.629"/>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20210330 00:55:16.240" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210330 00:55:16.240" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Tue, 30 Mar 2021 00:55:16 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"b2bf643972eb73387d11ab48f8bd27a693c08c92"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-03-30T00:55:16.216978Z", "started": "2021-03-30T00:55:16.216978Z"} 
 </msg>
<status status="PASS" starttime="20210330 00:55:15.629" endtime="20210330 00:55:16.240"/>
</kw>
<status status="PASS" starttime="20210330 00:55:15.628" endtime="20210330 00:55:16.240"/>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
<doc>Opens a new browser instance to the specific ``url``.</doc>
<msg timestamp="20210330 00:55:16.241" level="INFO">http://127.0.0.1:8888</msg>
<msg timestamp="20210330 00:55:20.849" level="INFO">0%|          | 0/108773488 [00:00&lt;?, ?it/s]  3%|3         | 3440640/108773488 [00:00&lt;00:03, 34354912.32it/s] 22%|##1       | 23572480/108773488 [00:00&lt;00:00, 132490775.71it/s] 40%|####      | 43919360/108773488 [00:00&lt;00:00, 164878040.95it/s] 59%|#####9    | 64389120/108773488 [00:00&lt;00:00, 180591622.41it/s] 78%|#######7  | 84428800/108773488 [00:00&lt;00:00, 187716905.28it/s] 96%|#########6| 104857600/108773488 [00:00&lt;00:00, 193341688.95it/s]100%|##########| 108773488/108773488 [00:00&lt;00:00, 175850258.44it/s]</msg>
<status status="PASS" starttime="20210330 00:55:16.240" endtime="20210330 00:55:20.849"/>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<arg>id:ipython_notebook</arg>
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<status status="PASS" starttime="20210330 00:55:20.850" endtime="20210330 00:55:21.125"/>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210330 00:55:21.291" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-1.png"&gt;&lt;img src="puppeteer-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210330 00:55:21.125" endtime="20210330 00:55:21.291"/>
</kw>
<status status="PASS" starttime="20210330 00:55:20.849" endtime="20210330 00:55:21.291"/>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210330 00:55:21.291" endtime="20210330 00:55:21.314"/>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="TEARDOWN">
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${jupyter_server_process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20210330 00:55:21.315" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210330 00:55:21.416" level="INFO">Process completed.</msg>
<msg timestamp="20210330 00:55:21.416" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210330 00:55:21.315" endtime="20210330 00:55:21.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210330 00:55:21.417" level="INFO">/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/jupyter_server/transutils.py:13: FutureWarning: The alias `_()` will be deprecated. Use `_i18n()` instead.
  warnings.warn(warn_msg, FutureWarning)
[I 2021-03-30 00:55:16.210 ServerApp] nbclassic | extension was successfully linked.
[W 2021-03-30 00:55:16.227 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-03-30 00:55:16.233 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-03-30 00:55:16.233 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-03-30 00:55:16.233 ServerApp] Jupyter Server 1.5.1 is running at:
[I 2021-03-30 00:55:16.233 ServerApp] http://localhost:8888/tree
[I 2021-03-30 00:55:16.233 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-03-30 00:55:16.233 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-03-30 00:55:20.574 ServerApp] 302 GET / (127.0.0.1) 0.52ms
[C 2021-03-30 00:55:21.315 ServerApp] received signal 15, stopping
[I 2021-03-30 00:55:21.315 ServerApp] Shutting down 0 kernels
[I 2021-03-30 00:55:21.316 ServerApp] Shutting down 0 terminals</msg>
<status status="PASS" starttime="20210330 00:55:21.416" endtime="20210330 00:55:21.417"/>
</kw>
<status status="PASS" starttime="20210330 00:55:21.314" endtime="20210330 00:55:21.418"/>
</kw>
<status status="PASS" starttime="20210330 00:55:15.617" endtime="20210330 00:55:21.418"/>
</test>
<test id="s1-s1-s2-t3" name="Test file_to_run">
<kw name="Get Variable Value" library="BuiltIn">
<var>${HEADLESS}</var>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20210330 00:55:21.421" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210330 00:55:21.419" endtime="20210330 00:55:21.421"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{options}</var>
<arg>headless=${HEADLESS}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210330 00:55:21.422" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210330 00:55:21.421" endtime="20210330 00:55:21.422"/>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<var>${extra_args}</var>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210330 00:55:21.423" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210330 00:55:21.422" endtime="20210330 00:55:21.423"/>
</kw>
<kw name="Start Process" library="Process">
<var>${jupyter_server_process}</var>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210330 00:55:21.424" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210330 00:55:21.427" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210330 00:55:21.423" endtime="20210330 00:55:21.427"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${jupyter_server_process}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20210330 00:55:21.428" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210330 00:55:21.428" endtime="20210330 00:55:21.428"/>
</kw>
<status status="PASS" starttime="20210330 00:55:21.422" endtime="20210330 00:55:21.429"/>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210330 00:55:21.430" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210330 00:55:21.430" endtime="20210330 00:55:21.431"/>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20210330 00:55:22.041" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210330 00:55:22.041" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Tue, 30 Mar 2021 00:55:22 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"f0826b329e1e0dc468b01428c6a5a47a00a0a121"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-03-30T00:55:22.017455Z", "started": "2021-03-30T00:55:22.017455Z"} 
 </msg>
<status status="PASS" starttime="20210330 00:55:21.431" endtime="20210330 00:55:22.041"/>
</kw>
<status status="PASS" starttime="20210330 00:55:21.429" endtime="20210330 00:55:22.041"/>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
<doc>Opens a new browser instance to the specific ``url``.</doc>
<msg timestamp="20210330 00:55:22.042" level="INFO">http://127.0.0.1:8888</msg>
<status status="PASS" starttime="20210330 00:55:22.042" endtime="20210330 00:55:22.478"/>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<arg>id:ipython_notebook</arg>
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<status status="PASS" starttime="20210330 00:55:22.479" endtime="20210330 00:55:22.594"/>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210330 00:55:22.742" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-2.png"&gt;&lt;img src="puppeteer-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210330 00:55:22.594" endtime="20210330 00:55:22.743"/>
</kw>
<status status="PASS" starttime="20210330 00:55:22.478" endtime="20210330 00:55:22.743"/>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210330 00:55:22.743" endtime="20210330 00:55:22.758"/>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="TEARDOWN">
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${jupyter_server_process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20210330 00:55:22.759" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210330 00:55:22.860" level="INFO">Process completed.</msg>
<msg timestamp="20210330 00:55:22.860" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210330 00:55:22.759" endtime="20210330 00:55:22.861"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210330 00:55:22.862" level="INFO">/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/jupyter_server/transutils.py:13: FutureWarning: The alias `_()` will be deprecated. Use `_i18n()` instead.
  warnings.warn(warn_msg, FutureWarning)
[I 2021-03-30 00:55:22.010 ServerApp] nbclassic | extension was successfully linked.
[W 2021-03-30 00:55:22.027 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-03-30 00:55:22.034 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-03-30 00:55:22.034 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-03-30 00:55:22.034 ServerApp] Jupyter Server 1.5.1 is running at:
[I 2021-03-30 00:55:22.034 ServerApp] http://localhost:8888/tree
[I 2021-03-30 00:55:22.034 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-03-30 00:55:22.034 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-03-30 00:55:22.227 ServerApp] 302 GET / (127.0.0.1) 0.53ms
[C 2021-03-30 00:55:22.759 ServerApp] received signal 15, stopping
[I 2021-03-30 00:55:22.759 ServerApp] Shutting down 0 kernels
[I 2021-03-30 00:55:22.759 ServerApp] Shutting down 0 terminals</msg>
<status status="PASS" starttime="20210330 00:55:22.861" endtime="20210330 00:55:22.862"/>
</kw>
<status status="PASS" starttime="20210330 00:55:22.758" endtime="20210330 00:55:22.862"/>
</kw>
<status status="PASS" starttime="20210330 00:55:21.418" endtime="20210330 00:55:22.862"/>
</test>
<status status="PASS" starttime="20210330 00:55:13.957" endtime="20210330 00:55:22.863"/>
</suite>
<status status="PASS" starttime="20210330 00:55:10.747" endtime="20210330 00:55:22.865"/>
</suite>
<status status="PASS" starttime="20210330 00:55:10.720" endtime="20210330 00:55:22.867"/>
</suite>
<statistics>
<total>
<stat pass="4" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" skip="0" id="s1" name="Atest">Atest</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1" name="Jupyter Server">Atest.Jupyter Server</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="JupyterServerCLI">Atest.Jupyter Server.JupyterServerCLI</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s2" name="Nbclassic">Atest.Jupyter Server.Nbclassic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
