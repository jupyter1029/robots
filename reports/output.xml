<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.8.7 on linux)" generated="20210218 00:47:05.275" rpa="false">
<suite id="s1" name="Atest" source="/home/runner/work/robots/robots/atest">
<suite id="s1-s1" name="Jupyter Server" source="/home/runner/work/robots/robots/atest/jupyter_server">
<suite id="s1-s1-s1" name="JupyterServerCLI" source="/home/runner/work/robots/robots/atest/jupyter_server/JupyterServerCLI.robot">
<test id="s1-s1-s1-t1" name="Test &quot;port&quot; trait">
<kw name="Start Unauthenticated Jupyter Server" library="Variables">
<arguments>
<arg>--ServerApp.port=9999</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210218 00:47:05.380" level="INFO">${extra_args} = ['--ServerApp.token=', '']</msg>
<status status="PASS" starttime="20210218 00:47:05.380" endtime="20210218 00:47:05.380"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210218 00:47:05.381" level="INFO">Starting process:
jupyter-server --ServerApp.port=9999 --ServerApp.token= ""</msg>
<msg timestamp="20210218 00:47:05.385" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210218 00:47:05.380" endtime="20210218 00:47:05.385"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210218 00:47:05.386" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210218 00:47:05.386" endtime="20210218 00:47:05.387"></status>
</kw>
<status status="PASS" starttime="20210218 00:47:05.377" endtime="20210218 00:47:05.387"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<arguments>
<arg>http://127.0.0.1:9999</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210218 00:47:05.388" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:9999, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210218 00:47:05.387" endtime="20210218 00:47:05.388"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210218 00:47:06.800" level="INFO">GET Request : url=http://127.0.0.1:9999/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210218 00:47:06.800" level="INFO">GET Response : url=http://127.0.0.1:9999/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Thu, 18 Feb 2021 00:47:06 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"6b443c42988b931d26ec1f42964db75924ddea6e"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-18T00:47:06.303068Z", "started": "2021-02-18T00:47:06.303068Z"} 
 </msg>
<status status="PASS" starttime="20210218 00:47:05.389" endtime="20210218 00:47:06.801"></status>
</kw>
<status status="PASS" starttime="20210218 00:47:05.387" endtime="20210218 00:47:06.801"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 00:47:06.802" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210218 00:47:06.902" level="INFO">Process completed.</msg>
<msg timestamp="20210218 00:47:06.903" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210218 00:47:06.802" endtime="20210218 00:47:06.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210218 00:47:06.904" level="INFO">[I 2021-02-18 00:47:05.880 ServerApp] Writing notebook server cookie secret to /home/runner/.local/share/jupyter/runtime/jupyter_cookie_secret
[I 2021-02-18 00:47:06.297 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-18 00:47:06.316 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-18 00:47:06.324 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-18 00:47:06.324 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-18 00:47:06.324 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-18 00:47:06.324 ServerApp] http://localhost:9999/
[I 2021-02-18 00:47:06.324 ServerApp]  or http://127.0.0.1:9999/
[I 2021-02-18 00:47:06.325 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-02-18 00:47:06.802 ServerApp] received signal 15, stopping
[I 2021-02-18 00:47:06.802 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210218 00:47:06.903" endtime="20210218 00:47:06.904"></status>
</kw>
<status status="PASS" starttime="20210218 00:47:06.801" endtime="20210218 00:47:06.904"></status>
</kw>
<status status="PASS" starttime="20210218 00:47:05.377" endtime="20210218 00:47:06.904" critical="yes"></status>
</test>
<status status="PASS" starttime="20210218 00:47:05.300" endtime="20210218 00:47:06.906"></status>
</suite>
<suite id="s1-s1-s2" name="Nbclassic" source="/home/runner/work/robots/robots/atest/jupyter_server/Nbclassic.robot">
<test id="s1-s1-s2-t1" name="Test Entrypoint">
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210218 00:47:07.035" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210218 00:47:07.035" endtime="20210218 00:47:07.035"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210218 00:47:07.036" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210218 00:47:07.040" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210218 00:47:07.035" endtime="20210218 00:47:07.040"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210218 00:47:07.041" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210218 00:47:07.040" endtime="20210218 00:47:07.041"></status>
</kw>
<status status="PASS" starttime="20210218 00:47:07.034" endtime="20210218 00:47:07.041"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210218 00:47:07.042" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210218 00:47:07.042" endtime="20210218 00:47:07.043"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210218 00:47:07.653" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210218 00:47:07.653" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Thu, 18 Feb 2021 00:47:07 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"24f03671f89e0afa669538d93766a46024ab3c1c"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-18T00:47:07.581219Z", "started": "2021-02-18T00:47:07.581219Z"} 
 </msg>
<status status="PASS" starttime="20210218 00:47:07.043" endtime="20210218 00:47:07.653"></status>
</kw>
<status status="PASS" starttime="20210218 00:47:07.041" endtime="20210218 00:47:07.653"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 00:47:07.654" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210218 00:47:07.755" level="INFO">Process completed.</msg>
<msg timestamp="20210218 00:47:07.755" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210218 00:47:07.654" endtime="20210218 00:47:07.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210218 00:47:07.757" level="INFO">[I 2021-02-18 00:47:07.574 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-18 00:47:07.594 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-18 00:47:07.601 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-18 00:47:07.601 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-18 00:47:07.601 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-18 00:47:07.601 ServerApp] http://localhost:8888/tree
[I 2021-02-18 00:47:07.601 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-18 00:47:07.601 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-02-18 00:47:07.654 ServerApp] received signal 15, stopping
[I 2021-02-18 00:47:07.654 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210218 00:47:07.756" endtime="20210218 00:47:07.757"></status>
</kw>
<status status="PASS" starttime="20210218 00:47:07.654" endtime="20210218 00:47:07.758"></status>
</kw>
<status status="PASS" starttime="20210218 00:47:07.034" endtime="20210218 00:47:07.758" critical="yes"></status>
</test>
<test id="s1-s1-s2-t2" name="Test Landing Page">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210218 00:47:07.762" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210218 00:47:07.759" endtime="20210218 00:47:07.762"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210218 00:47:07.763" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210218 00:47:07.762" endtime="20210218 00:47:07.763"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210218 00:47:07.764" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210218 00:47:07.764" endtime="20210218 00:47:07.764"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210218 00:47:07.765" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210218 00:47:07.768" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210218 00:47:07.764" endtime="20210218 00:47:07.769"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210218 00:47:07.770" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210218 00:47:07.769" endtime="20210218 00:47:07.770"></status>
</kw>
<status status="PASS" starttime="20210218 00:47:07.763" endtime="20210218 00:47:07.770"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210218 00:47:07.771" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210218 00:47:07.770" endtime="20210218 00:47:07.772"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210218 00:47:08.382" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210218 00:47:08.382" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Thu, 18 Feb 2021 00:47:08 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"d22cf1da3044e5655a1f13f9d38b909caa3972e5"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-18T00:47:08.314580Z", "started": "2021-02-18T00:47:08.314580Z"} 
 </msg>
<status status="PASS" starttime="20210218 00:47:07.772" endtime="20210218 00:47:08.383"></status>
</kw>
<status status="PASS" starttime="20210218 00:47:07.770" endtime="20210218 00:47:08.383"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210218 00:47:08.383" level="INFO">http://127.0.0.1:8888</msg>
<msg timestamp="20210218 00:47:12.149" level="INFO">0%|          | 0/108773488 [00:00&lt;?, ?it/s] 14%|#3        | 15093760/108773488 [00:00&lt;00:00, 150785315.71it/s] 39%|###8      | 42209280/108773488 [00:00&lt;00:00, 221560889.50it/s] 62%|######2   | 67491840/108773488 [00:00&lt;00:00, 235812302.48it/s] 85%|########4 | 92446720/108773488 [00:00&lt;00:00, 241230048.57it/s]100%|##########| 108773488/108773488 [00:00&lt;00:00, 234966029.85it/s]</msg>
<status status="PASS" starttime="20210218 00:47:08.383" endtime="20210218 00:47:12.149"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210218 00:47:12.150" endtime="20210218 00:47:12.258"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210218 00:47:12.410" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-1.png"&gt;&lt;img src="puppeteer-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210218 00:47:12.258" endtime="20210218 00:47:12.410"></status>
</kw>
<status status="PASS" starttime="20210218 00:47:12.150" endtime="20210218 00:47:12.411"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210218 00:47:12.411" endtime="20210218 00:47:12.436"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 00:47:12.438" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210218 00:47:12.538" level="INFO">Process completed.</msg>
<msg timestamp="20210218 00:47:12.538" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210218 00:47:12.437" endtime="20210218 00:47:12.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210218 00:47:12.539" level="INFO">[I 2021-02-18 00:47:08.307 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-18 00:47:08.327 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-18 00:47:08.334 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-18 00:47:08.334 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-18 00:47:08.334 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-18 00:47:08.334 ServerApp] http://localhost:8888/tree
[I 2021-02-18 00:47:08.335 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-18 00:47:08.335 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-02-18 00:47:11.904 ServerApp] 302 GET / (127.0.0.1) 0.50ms
[C 2021-02-18 00:47:12.437 ServerApp] received signal 15, stopping
[I 2021-02-18 00:47:12.438 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210218 00:47:12.539" endtime="20210218 00:47:12.539"></status>
</kw>
<status status="PASS" starttime="20210218 00:47:12.437" endtime="20210218 00:47:12.539"></status>
</kw>
<status status="PASS" starttime="20210218 00:47:07.759" endtime="20210218 00:47:12.539" critical="yes"></status>
</test>
<test id="s1-s1-s2-t3" name="Test file_to_run">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210218 00:47:12.542" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210218 00:47:12.540" endtime="20210218 00:47:12.542"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210218 00:47:12.544" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210218 00:47:12.543" endtime="20210218 00:47:12.544"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210218 00:47:12.545" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210218 00:47:12.545" endtime="20210218 00:47:12.545"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210218 00:47:12.546" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210218 00:47:12.550" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210218 00:47:12.545" endtime="20210218 00:47:12.551"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210218 00:47:12.552" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210218 00:47:12.551" endtime="20210218 00:47:12.552"></status>
</kw>
<status status="PASS" starttime="20210218 00:47:12.544" endtime="20210218 00:47:12.552"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210218 00:47:12.556" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210218 00:47:12.553" endtime="20210218 00:47:12.557"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210218 00:47:13.168" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210218 00:47:13.169" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Thu, 18 Feb 2021 00:47:13 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"78f58baadac99479f1a1c564992f6c801ffab72c"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-18T00:47:13.092667Z", "started": "2021-02-18T00:47:13.092667Z"} 
 </msg>
<status status="PASS" starttime="20210218 00:47:12.557" endtime="20210218 00:47:13.169"></status>
</kw>
<status status="PASS" starttime="20210218 00:47:12.552" endtime="20210218 00:47:13.169"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210218 00:47:13.170" level="INFO">http://127.0.0.1:8888</msg>
<status status="PASS" starttime="20210218 00:47:13.169" endtime="20210218 00:47:13.624"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210218 00:47:13.625" endtime="20210218 00:47:13.743"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210218 00:47:13.879" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-2.png"&gt;&lt;img src="puppeteer-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210218 00:47:13.743" endtime="20210218 00:47:13.879"></status>
</kw>
<status status="PASS" starttime="20210218 00:47:13.624" endtime="20210218 00:47:13.879"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210218 00:47:13.879" endtime="20210218 00:47:13.913"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 00:47:13.914" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210218 00:47:14.015" level="INFO">Process completed.</msg>
<msg timestamp="20210218 00:47:14.015" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210218 00:47:13.914" endtime="20210218 00:47:14.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210218 00:47:14.016" level="INFO">[I 2021-02-18 00:47:13.086 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-18 00:47:13.105 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-18 00:47:13.112 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-18 00:47:13.113 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-18 00:47:13.113 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-18 00:47:13.113 ServerApp] http://localhost:8888/tree
[I 2021-02-18 00:47:13.113 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-18 00:47:13.113 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-02-18 00:47:13.365 ServerApp] 302 GET / (127.0.0.1) 0.42ms
[C 2021-02-18 00:47:13.914 ServerApp] received signal 15, stopping
[I 2021-02-18 00:47:13.914 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210218 00:47:14.016" endtime="20210218 00:47:14.017"></status>
</kw>
<status status="PASS" starttime="20210218 00:47:13.914" endtime="20210218 00:47:14.017"></status>
</kw>
<status status="PASS" starttime="20210218 00:47:12.540" endtime="20210218 00:47:14.017" critical="yes"></status>
</test>
<status status="PASS" starttime="20210218 00:47:06.907" endtime="20210218 00:47:14.019"></status>
</suite>
<status status="PASS" starttime="20210218 00:47:05.298" endtime="20210218 00:47:14.022"></status>
</suite>
<status status="PASS" starttime="20210218 00:47:05.276" endtime="20210218 00:47:14.025"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="Atest">Atest</stat>
<stat pass="4" fail="0" id="s1-s1" name="Jupyter Server">Atest.Jupyter Server</stat>
<stat pass="1" fail="0" id="s1-s1-s1" name="JupyterServerCLI">Atest.Jupyter Server.JupyterServerCLI</stat>
<stat pass="3" fail="0" id="s1-s1-s2" name="Nbclassic">Atest.Jupyter Server.Nbclassic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
