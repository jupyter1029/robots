<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0 (Python 3.8.8 on linux)" generated="20210405 00:59:48.825" rpa="false" schemaversion="2">
<suite id="s1" name="Atest" source="/home/runner/work/robots/robots/atest">
<suite id="s1-s1" name="Jupyter Server" source="/home/runner/work/robots/robots/atest/jupyter_server">
<suite id="s1-s1-s1" name="JupyterServerCLI" source="/home/runner/work/robots/robots/atest/jupyter_server/JupyterServerCLI.robot">
<test id="s1-s1-s1-t1" name="Test &quot;port&quot; trait">
<kw name="Start Unauthenticated Jupyter Server" library="Variables">
<arg>--ServerApp.port=9999</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${extra_args}</var>
<arg>--ServerApp.token=</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210405 00:59:48.907" level="INFO">${extra_args} = ['--ServerApp.token=', '']</msg>
<status status="PASS" starttime="20210405 00:59:48.907" endtime="20210405 00:59:48.907"/>
</kw>
<kw name="Start Process" library="Process">
<var>${jupyter_server_process}</var>
<arg>jupyter-server</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210405 00:59:48.908" level="INFO">Starting process:
jupyter-server --ServerApp.port=9999 --ServerApp.token= ""</msg>
<msg timestamp="20210405 00:59:48.912" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210405 00:59:48.908" endtime="20210405 00:59:48.912"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${jupyter_server_process}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20210405 00:59:48.913" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210405 00:59:48.913" endtime="20210405 00:59:48.913"/>
</kw>
<status status="PASS" starttime="20210405 00:59:48.907" endtime="20210405 00:59:48.914"/>
</kw>
<kw name="Check Server Status" library="Variables">
<arg>http://127.0.0.1:9999</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210405 00:59:48.915" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:9999, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210405 00:59:48.914" endtime="20210405 00:59:48.915"/>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20210405 00:59:50.325" level="INFO">GET Request : url=http://127.0.0.1:9999/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210405 00:59:50.326" level="INFO">GET Response : url=http://127.0.0.1:9999/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Mon, 05 Apr 2021 00:59:50 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"bd30fad8006d5c1792f63309050081e3a8776562"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-04-05T00:59:50.070831Z", "started": "2021-04-05T00:59:50.070831Z"} 
 </msg>
<status status="PASS" starttime="20210405 00:59:48.915" endtime="20210405 00:59:50.326"/>
</kw>
<status status="PASS" starttime="20210405 00:59:48.914" endtime="20210405 00:59:50.326"/>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="TEARDOWN">
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${jupyter_server_process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20210405 00:59:50.327" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210405 00:59:50.428" level="INFO">Process completed.</msg>
<msg timestamp="20210405 00:59:50.428" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210405 00:59:50.327" endtime="20210405 00:59:50.428"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210405 00:59:50.430" level="INFO">/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/jupyter_server/transutils.py:13: FutureWarning: The alias `_()` will be deprecated. Use `_i18n()` instead.
  warnings.warn(warn_msg, FutureWarning)
[I 2021-04-05 00:59:49.578 ServerApp] Writing notebook server cookie secret to /home/runner/.local/share/jupyter/runtime/jupyter_cookie_secret
[I 2021-04-05 00:59:50.062 ServerApp] nbclassic | extension was successfully linked.
[W 2021-04-05 00:59:50.079 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-04-05 00:59:50.084 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-04-05 00:59:50.084 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-04-05 00:59:50.084 ServerApp] Jupyter Server 1.5.1 is running at:
[I 2021-04-05 00:59:50.085 ServerApp] http://localhost:9999/
[I 2021-04-05 00:59:50.085 ServerApp]  or http://127.0.0.1:9999/
[I 2021-04-05 00:59:50.085 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-04-05 00:59:50.327 ServerApp] received signal 15, stopping
[I 2021-04-05 00:59:50.327 ServerApp] Shutting down 0 kernels
[I 2021-04-05 00:59:50.327 ServerApp] Shutting down 0 terminals</msg>
<status status="PASS" starttime="20210405 00:59:50.428" endtime="20210405 00:59:50.430"/>
</kw>
<status status="PASS" starttime="20210405 00:59:50.326" endtime="20210405 00:59:50.431"/>
</kw>
<status status="PASS" starttime="20210405 00:59:48.906" endtime="20210405 00:59:50.431"/>
</test>
<status status="PASS" starttime="20210405 00:59:48.846" endtime="20210405 00:59:50.432"/>
</suite>
<suite id="s1-s1-s2" name="Nbclassic" source="/home/runner/work/robots/robots/atest/jupyter_server/Nbclassic.robot">
<test id="s1-s1-s2-t1" name="Test Entrypoint">
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<var>${extra_args}</var>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210405 00:59:50.559" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210405 00:59:50.559" endtime="20210405 00:59:50.559"/>
</kw>
<kw name="Start Process" library="Process">
<var>${jupyter_server_process}</var>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210405 00:59:50.560" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210405 00:59:50.564" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210405 00:59:50.559" endtime="20210405 00:59:50.564"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${jupyter_server_process}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20210405 00:59:50.565" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210405 00:59:50.565" endtime="20210405 00:59:50.565"/>
</kw>
<status status="PASS" starttime="20210405 00:59:50.559" endtime="20210405 00:59:50.566"/>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210405 00:59:50.567" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210405 00:59:50.566" endtime="20210405 00:59:50.567"/>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20210405 00:59:51.176" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210405 00:59:51.176" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Mon, 05 Apr 2021 00:59:51 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"cc4b7ee9e6be1d9c4ba4e0ef5992cd73f574648b"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-04-05T00:59:51.045855Z", "started": "2021-04-05T00:59:51.045855Z"} 
 </msg>
<status status="PASS" starttime="20210405 00:59:50.567" endtime="20210405 00:59:51.176"/>
</kw>
<status status="PASS" starttime="20210405 00:59:50.566" endtime="20210405 00:59:51.176"/>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="TEARDOWN">
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${jupyter_server_process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20210405 00:59:51.177" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210405 00:59:51.278" level="INFO">Process completed.</msg>
<msg timestamp="20210405 00:59:51.278" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210405 00:59:51.177" endtime="20210405 00:59:51.278"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210405 00:59:51.279" level="INFO">/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/jupyter_server/transutils.py:13: FutureWarning: The alias `_()` will be deprecated. Use `_i18n()` instead.
  warnings.warn(warn_msg, FutureWarning)
[I 2021-04-05 00:59:51.040 ServerApp] nbclassic | extension was successfully linked.
[W 2021-04-05 00:59:51.055 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-04-05 00:59:51.060 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-04-05 00:59:51.060 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-04-05 00:59:51.060 ServerApp] Jupyter Server 1.5.1 is running at:
[I 2021-04-05 00:59:51.060 ServerApp] http://localhost:8888/tree
[I 2021-04-05 00:59:51.060 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-04-05 00:59:51.060 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-04-05 00:59:51.177 ServerApp] received signal 15, stopping
[I 2021-04-05 00:59:51.177 ServerApp] Shutting down 0 kernels
[I 2021-04-05 00:59:51.177 ServerApp] Shutting down 0 terminals</msg>
<status status="PASS" starttime="20210405 00:59:51.278" endtime="20210405 00:59:51.279"/>
</kw>
<status status="PASS" starttime="20210405 00:59:51.176" endtime="20210405 00:59:51.279"/>
</kw>
<status status="PASS" starttime="20210405 00:59:50.558" endtime="20210405 00:59:51.279"/>
</test>
<test id="s1-s1-s2-t2" name="Test Landing Page">
<kw name="Get Variable Value" library="BuiltIn">
<var>${HEADLESS}</var>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20210405 00:59:51.282" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210405 00:59:51.280" endtime="20210405 00:59:51.282"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{options}</var>
<arg>headless=${HEADLESS}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210405 00:59:51.283" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210405 00:59:51.282" endtime="20210405 00:59:51.283"/>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<var>${extra_args}</var>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210405 00:59:51.284" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210405 00:59:51.284" endtime="20210405 00:59:51.284"/>
</kw>
<kw name="Start Process" library="Process">
<var>${jupyter_server_process}</var>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210405 00:59:51.285" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210405 00:59:51.289" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210405 00:59:51.284" endtime="20210405 00:59:51.289"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${jupyter_server_process}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20210405 00:59:51.290" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210405 00:59:51.289" endtime="20210405 00:59:51.290"/>
</kw>
<status status="PASS" starttime="20210405 00:59:51.283" endtime="20210405 00:59:51.290"/>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210405 00:59:51.291" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210405 00:59:51.291" endtime="20210405 00:59:51.292"/>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20210405 00:59:51.901" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210405 00:59:51.901" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Mon, 05 Apr 2021 00:59:51 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"a6ec595cf0583c7f97c09fa22724af8f4da61f5d"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-04-05T00:59:51.764994Z", "started": "2021-04-05T00:59:51.764994Z"} 
 </msg>
<status status="PASS" starttime="20210405 00:59:51.292" endtime="20210405 00:59:51.901"/>
</kw>
<status status="PASS" starttime="20210405 00:59:51.290" endtime="20210405 00:59:51.901"/>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
<doc>Opens a new browser instance to the specific ``url``.</doc>
<msg timestamp="20210405 00:59:51.902" level="INFO">http://127.0.0.1:8888</msg>
<msg timestamp="20210405 00:59:55.064" level="INFO">0%|          | 0/108773488 [00:00&lt;?, ?it/s] 19%|#8        | 20551680/108773488 [00:00&lt;00:00, 205500337.65it/s] 38%|###7      | 41103360/108773488 [00:00&lt;00:00, 145620280.60it/s] 61%|######1   | 66488320/108773488 [00:00&lt;00:00, 185682784.81it/s] 85%|########4 | 92252160/108773488 [00:00&lt;00:00, 210658863.21it/s]100%|##########| 108773488/108773488 [00:00&lt;00:00, 203266616.86it/s]</msg>
<status status="PASS" starttime="20210405 00:59:51.902" endtime="20210405 00:59:55.065"/>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<arg>id:ipython_notebook</arg>
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<status status="PASS" starttime="20210405 00:59:55.067" endtime="20210405 00:59:55.176"/>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210405 00:59:55.319" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-1.png"&gt;&lt;img src="puppeteer-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210405 00:59:55.176" endtime="20210405 00:59:55.319"/>
</kw>
<status status="PASS" starttime="20210405 00:59:55.065" endtime="20210405 00:59:55.320"/>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210405 00:59:55.320" endtime="20210405 00:59:55.353"/>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="TEARDOWN">
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${jupyter_server_process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20210405 00:59:55.354" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210405 00:59:55.454" level="INFO">Process completed.</msg>
<msg timestamp="20210405 00:59:55.455" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210405 00:59:55.353" endtime="20210405 00:59:55.455"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210405 00:59:55.457" level="INFO">/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/jupyter_server/transutils.py:13: FutureWarning: The alias `_()` will be deprecated. Use `_i18n()` instead.
  warnings.warn(warn_msg, FutureWarning)
[I 2021-04-05 00:59:51.760 ServerApp] nbclassic | extension was successfully linked.
[W 2021-04-05 00:59:51.773 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-04-05 00:59:51.777 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-04-05 00:59:51.778 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-04-05 00:59:51.778 ServerApp] Jupyter Server 1.5.1 is running at:
[I 2021-04-05 00:59:51.778 ServerApp] http://localhost:8888/tree
[I 2021-04-05 00:59:51.778 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-04-05 00:59:51.778 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-04-05 00:59:54.820 ServerApp] 302 GET / (127.0.0.1) 0.47ms
[C 2021-04-05 00:59:55.353 ServerApp] received signal 15, stopping
[I 2021-04-05 00:59:55.354 ServerApp] Shutting down 0 kernels
[I 2021-04-05 00:59:55.354 ServerApp] Shutting down 0 terminals</msg>
<status status="PASS" starttime="20210405 00:59:55.455" endtime="20210405 00:59:55.457"/>
</kw>
<status status="PASS" starttime="20210405 00:59:55.353" endtime="20210405 00:59:55.457"/>
</kw>
<status status="PASS" starttime="20210405 00:59:51.280" endtime="20210405 00:59:55.457"/>
</test>
<test id="s1-s1-s2-t3" name="Test file_to_run">
<kw name="Get Variable Value" library="BuiltIn">
<var>${HEADLESS}</var>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20210405 00:59:55.461" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210405 00:59:55.459" endtime="20210405 00:59:55.462"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{options}</var>
<arg>headless=${HEADLESS}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210405 00:59:55.462" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210405 00:59:55.462" endtime="20210405 00:59:55.462"/>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<var>${extra_args}</var>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210405 00:59:55.463" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210405 00:59:55.462" endtime="20210405 00:59:55.463"/>
</kw>
<kw name="Start Process" library="Process">
<var>${jupyter_server_process}</var>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210405 00:59:55.463" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210405 00:59:55.467" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210405 00:59:55.463" endtime="20210405 00:59:55.467"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${jupyter_server_process}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20210405 00:59:55.467" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210405 00:59:55.467" endtime="20210405 00:59:55.467"/>
</kw>
<status status="PASS" starttime="20210405 00:59:55.462" endtime="20210405 00:59:55.468"/>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210405 00:59:55.468" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210405 00:59:55.468" endtime="20210405 00:59:55.469"/>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20210405 00:59:56.078" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210405 00:59:56.078" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Mon, 05 Apr 2021 00:59:56 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"c25cd90877c747795e67073376ef0a6d7d12389d"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-04-05T00:59:55.957437Z", "started": "2021-04-05T00:59:55.957437Z"} 
 </msg>
<status status="PASS" starttime="20210405 00:59:55.469" endtime="20210405 00:59:56.078"/>
</kw>
<status status="PASS" starttime="20210405 00:59:55.468" endtime="20210405 00:59:56.079"/>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
<doc>Opens a new browser instance to the specific ``url``.</doc>
<msg timestamp="20210405 00:59:56.080" level="INFO">http://127.0.0.1:8888</msg>
<status status="PASS" starttime="20210405 00:59:56.079" endtime="20210405 00:59:56.459"/>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<arg>id:ipython_notebook</arg>
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<status status="PASS" starttime="20210405 00:59:56.461" endtime="20210405 00:59:56.567"/>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210405 00:59:56.704" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-2.png"&gt;&lt;img src="puppeteer-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210405 00:59:56.567" endtime="20210405 00:59:56.704"/>
</kw>
<status status="PASS" starttime="20210405 00:59:56.460" endtime="20210405 00:59:56.704"/>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210405 00:59:56.704" endtime="20210405 00:59:56.726"/>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="TEARDOWN">
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${jupyter_server_process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20210405 00:59:56.727" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210405 00:59:56.828" level="INFO">Process completed.</msg>
<msg timestamp="20210405 00:59:56.828" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210405 00:59:56.727" endtime="20210405 00:59:56.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210405 00:59:56.830" level="INFO">/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/jupyter_server/transutils.py:13: FutureWarning: The alias `_()` will be deprecated. Use `_i18n()` instead.
  warnings.warn(warn_msg, FutureWarning)
[I 2021-04-05 00:59:55.952 ServerApp] nbclassic | extension was successfully linked.
[W 2021-04-05 00:59:55.965 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-04-05 00:59:55.970 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-04-05 00:59:55.970 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-04-05 00:59:55.970 ServerApp] Jupyter Server 1.5.1 is running at:
[I 2021-04-05 00:59:55.970 ServerApp] http://localhost:8888/tree
[I 2021-04-05 00:59:55.970 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-04-05 00:59:55.970 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-04-05 00:59:56.245 ServerApp] 302 GET / (127.0.0.1) 0.49ms
[C 2021-04-05 00:59:56.727 ServerApp] received signal 15, stopping
[I 2021-04-05 00:59:56.727 ServerApp] Shutting down 0 kernels
[I 2021-04-05 00:59:56.727 ServerApp] Shutting down 0 terminals</msg>
<status status="PASS" starttime="20210405 00:59:56.829" endtime="20210405 00:59:56.830"/>
</kw>
<status status="PASS" starttime="20210405 00:59:56.726" endtime="20210405 00:59:56.830"/>
</kw>
<status status="PASS" starttime="20210405 00:59:55.458" endtime="20210405 00:59:56.830"/>
</test>
<status status="PASS" starttime="20210405 00:59:50.434" endtime="20210405 00:59:56.831"/>
</suite>
<status status="PASS" starttime="20210405 00:59:48.844" endtime="20210405 00:59:56.832"/>
</suite>
<status status="PASS" starttime="20210405 00:59:48.826" endtime="20210405 00:59:56.834"/>
</suite>
<statistics>
<total>
<stat pass="4" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" skip="0" id="s1" name="Atest">Atest</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1" name="Jupyter Server">Atest.Jupyter Server</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="JupyterServerCLI">Atest.Jupyter Server.JupyterServerCLI</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s2" name="Nbclassic">Atest.Jupyter Server.Nbclassic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
