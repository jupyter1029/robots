<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.8.7 on linux)" generated="20210215 00:38:02.575" rpa="false">
<suite id="s1" name="Atest" source="/home/runner/work/robots/robots/atest">
<suite id="s1-s1" name="Jupyter Server" source="/home/runner/work/robots/robots/atest/jupyter_server">
<suite id="s1-s1-s1" name="JupyterServerCLI" source="/home/runner/work/robots/robots/atest/jupyter_server/JupyterServerCLI.robot">
<test id="s1-s1-s1-t1" name="Test &quot;port&quot; trait">
<kw name="Start Unauthenticated Jupyter Server" library="Variables">
<arguments>
<arg>--ServerApp.port=9999</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210215 00:38:02.668" level="INFO">${extra_args} = ['--ServerApp.token=', '']</msg>
<status status="PASS" starttime="20210215 00:38:02.667" endtime="20210215 00:38:02.668"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210215 00:38:02.668" level="INFO">Starting process:
jupyter-server --ServerApp.port=9999 --ServerApp.token= ""</msg>
<msg timestamp="20210215 00:38:02.671" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210215 00:38:02.668" endtime="20210215 00:38:02.672"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210215 00:38:02.672" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210215 00:38:02.672" endtime="20210215 00:38:02.672"></status>
</kw>
<status status="PASS" starttime="20210215 00:38:02.666" endtime="20210215 00:38:02.673"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<arguments>
<arg>http://127.0.0.1:9999</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210215 00:38:02.674" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:9999, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210215 00:38:02.673" endtime="20210215 00:38:02.674"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210215 00:38:05.688" level="INFO">GET Request : url=http://127.0.0.1:9999/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210215 00:38:05.689" level="INFO">GET Response : url=http://127.0.0.1:9999/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Mon, 15 Feb 2021 00:38:05 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"cee5d52e90d5659ad09b05e0c535421ebbc5a6ad"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-15T00:38:04.233411Z", "started": "2021-02-15T00:38:04.233411Z"} 
 </msg>
<status status="PASS" starttime="20210215 00:38:02.674" endtime="20210215 00:38:05.689"></status>
</kw>
<status status="PASS" starttime="20210215 00:38:02.673" endtime="20210215 00:38:05.689"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210215 00:38:05.690" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210215 00:38:05.790" level="INFO">Process completed.</msg>
<msg timestamp="20210215 00:38:05.790" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210215 00:38:05.690" endtime="20210215 00:38:05.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210215 00:38:05.791" level="INFO">[I 2021-02-15 00:38:03.619 ServerApp] Writing notebook server cookie secret to /home/runner/.local/share/jupyter/runtime/jupyter_cookie_secret
[I 2021-02-15 00:38:04.228 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-15 00:38:04.246 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-15 00:38:04.253 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-15 00:38:04.254 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-15 00:38:04.254 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-15 00:38:04.254 ServerApp] http://localhost:9999/
[I 2021-02-15 00:38:04.254 ServerApp]  or http://127.0.0.1:9999/
[I 2021-02-15 00:38:04.254 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-02-15 00:38:05.689 ServerApp] received signal 15, stopping
[I 2021-02-15 00:38:05.690 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210215 00:38:05.791" endtime="20210215 00:38:05.791"></status>
</kw>
<status status="PASS" starttime="20210215 00:38:05.689" endtime="20210215 00:38:05.791"></status>
</kw>
<status status="PASS" starttime="20210215 00:38:02.665" endtime="20210215 00:38:05.792" critical="yes"></status>
</test>
<status status="PASS" starttime="20210215 00:38:02.597" endtime="20210215 00:38:05.792"></status>
</suite>
<suite id="s1-s1-s2" name="Nbclassic" source="/home/runner/work/robots/robots/atest/jupyter_server/Nbclassic.robot">
<test id="s1-s1-s2-t1" name="Test Entrypoint">
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210215 00:38:05.907" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210215 00:38:05.907" endtime="20210215 00:38:05.907"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210215 00:38:05.908" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210215 00:38:05.911" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210215 00:38:05.908" endtime="20210215 00:38:05.911"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210215 00:38:05.912" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210215 00:38:05.912" endtime="20210215 00:38:05.912"></status>
</kw>
<status status="PASS" starttime="20210215 00:38:05.907" endtime="20210215 00:38:05.912"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210215 00:38:05.913" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210215 00:38:05.913" endtime="20210215 00:38:05.914"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210215 00:38:06.525" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210215 00:38:06.525" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Mon, 15 Feb 2021 00:38:06 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"9fede22e82ca6c8619e639d519ad046b7c3e496a"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-15T00:38:06.406703Z", "started": "2021-02-15T00:38:06.406703Z"} 
 </msg>
<status status="PASS" starttime="20210215 00:38:05.914" endtime="20210215 00:38:06.525"></status>
</kw>
<status status="PASS" starttime="20210215 00:38:05.913" endtime="20210215 00:38:06.526"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210215 00:38:06.527" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210215 00:38:06.628" level="INFO">Process completed.</msg>
<msg timestamp="20210215 00:38:06.628" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210215 00:38:06.527" endtime="20210215 00:38:06.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210215 00:38:06.629" level="INFO">[I 2021-02-15 00:38:06.401 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-15 00:38:06.418 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-15 00:38:06.424 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-15 00:38:06.424 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-15 00:38:06.424 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-15 00:38:06.424 ServerApp] http://localhost:8888/tree
[I 2021-02-15 00:38:06.424 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-15 00:38:06.424 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-02-15 00:38:06.527 ServerApp] received signal 15, stopping
[I 2021-02-15 00:38:06.527 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210215 00:38:06.629" endtime="20210215 00:38:06.629"></status>
</kw>
<status status="PASS" starttime="20210215 00:38:06.526" endtime="20210215 00:38:06.630"></status>
</kw>
<status status="PASS" starttime="20210215 00:38:05.906" endtime="20210215 00:38:06.630" critical="yes"></status>
</test>
<test id="s1-s1-s2-t2" name="Test Landing Page">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210215 00:38:06.632" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210215 00:38:06.631" endtime="20210215 00:38:06.632"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210215 00:38:06.633" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210215 00:38:06.632" endtime="20210215 00:38:06.633"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210215 00:38:06.633" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210215 00:38:06.633" endtime="20210215 00:38:06.633"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210215 00:38:06.634" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210215 00:38:06.638" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210215 00:38:06.633" endtime="20210215 00:38:06.639"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210215 00:38:06.639" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210215 00:38:06.639" endtime="20210215 00:38:06.639"></status>
</kw>
<status status="PASS" starttime="20210215 00:38:06.633" endtime="20210215 00:38:06.640"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210215 00:38:06.640" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210215 00:38:06.640" endtime="20210215 00:38:06.641"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210215 00:38:07.250" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210215 00:38:07.251" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Mon, 15 Feb 2021 00:38:07 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"22fc3aa3258aff150732f281f5a2c5d4eca00f5f"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-15T00:38:07.141855Z", "started": "2021-02-15T00:38:07.141855Z"} 
 </msg>
<status status="PASS" starttime="20210215 00:38:06.641" endtime="20210215 00:38:07.251"></status>
</kw>
<status status="PASS" starttime="20210215 00:38:06.640" endtime="20210215 00:38:07.251"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210215 00:38:07.252" level="INFO">http://127.0.0.1:8888</msg>
<msg timestamp="20210215 00:38:11.793" level="INFO">0%|          | 0/108773488 [00:00&lt;?, ?it/s] 16%|#6        | 17653760/108773488 [00:00&lt;00:00, 176501999.17it/s] 42%|####1     | 45332480/108773488 [00:00&lt;00:00, 234832528.19it/s] 67%|######7   | 73308160/108773488 [00:00&lt;00:00, 255289853.86it/s] 93%|#########3| 101191680/108773488 [00:00&lt;00:00, 264566376.60it/s]100%|##########| 108773488/108773488 [00:00&lt;00:00, 254640573.80it/s]</msg>
<status status="PASS" starttime="20210215 00:38:07.251" endtime="20210215 00:38:11.793"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210215 00:38:11.794" endtime="20210215 00:38:11.914"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210215 00:38:12.065" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-1.png"&gt;&lt;img src="puppeteer-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210215 00:38:11.914" endtime="20210215 00:38:12.066"></status>
</kw>
<status status="PASS" starttime="20210215 00:38:11.794" endtime="20210215 00:38:12.066"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210215 00:38:12.066" endtime="20210215 00:38:12.089"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210215 00:38:12.090" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210215 00:38:12.190" level="INFO">Process completed.</msg>
<msg timestamp="20210215 00:38:12.191" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210215 00:38:12.089" endtime="20210215 00:38:12.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210215 00:38:12.192" level="INFO">[I 2021-02-15 00:38:07.135 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-15 00:38:07.154 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-15 00:38:07.160 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-15 00:38:07.160 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-15 00:38:07.160 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-15 00:38:07.160 ServerApp] http://localhost:8888/tree
[I 2021-02-15 00:38:07.160 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-15 00:38:07.160 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-02-15 00:38:11.543 ServerApp] 302 GET / (127.0.0.1) 0.51ms
[C 2021-02-15 00:38:12.089 ServerApp] received signal 15, stopping
[I 2021-02-15 00:38:12.090 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210215 00:38:12.191" endtime="20210215 00:38:12.192"></status>
</kw>
<status status="PASS" starttime="20210215 00:38:12.089" endtime="20210215 00:38:12.192"></status>
</kw>
<status status="PASS" starttime="20210215 00:38:06.631" endtime="20210215 00:38:12.192" critical="yes"></status>
</test>
<test id="s1-s1-s2-t3" name="Test file_to_run">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210215 00:38:12.195" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210215 00:38:12.194" endtime="20210215 00:38:12.195"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210215 00:38:12.196" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210215 00:38:12.195" endtime="20210215 00:38:12.196"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210215 00:38:12.196" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210215 00:38:12.196" endtime="20210215 00:38:12.196"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210215 00:38:12.197" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210215 00:38:12.201" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210215 00:38:12.196" endtime="20210215 00:38:12.202"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210215 00:38:12.203" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210215 00:38:12.202" endtime="20210215 00:38:12.203"></status>
</kw>
<status status="PASS" starttime="20210215 00:38:12.196" endtime="20210215 00:38:12.203"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210215 00:38:12.204" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210215 00:38:12.203" endtime="20210215 00:38:12.205"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210215 00:38:12.814" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210215 00:38:12.814" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Mon, 15 Feb 2021 00:38:12 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"0661f9d284fabac2efe33db5e0642a4c102eaedb"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-15T00:38:12.731038Z", "started": "2021-02-15T00:38:12.731038Z"} 
 </msg>
<status status="PASS" starttime="20210215 00:38:12.205" endtime="20210215 00:38:12.815"></status>
</kw>
<status status="PASS" starttime="20210215 00:38:12.203" endtime="20210215 00:38:12.815"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210215 00:38:12.816" level="INFO">http://127.0.0.1:8888</msg>
<status status="PASS" starttime="20210215 00:38:12.815" endtime="20210215 00:38:13.230"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210215 00:38:13.231" endtime="20210215 00:38:13.348"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210215 00:38:13.480" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-2.png"&gt;&lt;img src="puppeteer-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210215 00:38:13.349" endtime="20210215 00:38:13.480"></status>
</kw>
<status status="PASS" starttime="20210215 00:38:13.231" endtime="20210215 00:38:13.480"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210215 00:38:13.480" endtime="20210215 00:38:13.506"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210215 00:38:13.507" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210215 00:38:13.607" level="INFO">Process completed.</msg>
<msg timestamp="20210215 00:38:13.608" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210215 00:38:13.506" endtime="20210215 00:38:13.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210215 00:38:13.609" level="INFO">[I 2021-02-15 00:38:12.724 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-15 00:38:12.744 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-15 00:38:12.750 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-15 00:38:12.751 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-15 00:38:12.751 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-15 00:38:12.751 ServerApp] http://localhost:8888/tree
[I 2021-02-15 00:38:12.751 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-15 00:38:12.751 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-02-15 00:38:13.002 ServerApp] 302 GET / (127.0.0.1) 0.49ms
[C 2021-02-15 00:38:13.506 ServerApp] received signal 15, stopping
[I 2021-02-15 00:38:13.507 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210215 00:38:13.608" endtime="20210215 00:38:13.609"></status>
</kw>
<status status="PASS" starttime="20210215 00:38:13.506" endtime="20210215 00:38:13.609"></status>
</kw>
<status status="PASS" starttime="20210215 00:38:12.193" endtime="20210215 00:38:13.609" critical="yes"></status>
</test>
<status status="PASS" starttime="20210215 00:38:05.793" endtime="20210215 00:38:13.611"></status>
</suite>
<status status="PASS" starttime="20210215 00:38:02.595" endtime="20210215 00:38:13.614"></status>
</suite>
<status status="PASS" starttime="20210215 00:38:02.575" endtime="20210215 00:38:13.616"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="Atest">Atest</stat>
<stat pass="4" fail="0" id="s1-s1" name="Jupyter Server">Atest.Jupyter Server</stat>
<stat pass="1" fail="0" id="s1-s1-s1" name="JupyterServerCLI">Atest.Jupyter Server.JupyterServerCLI</stat>
<stat pass="3" fail="0" id="s1-s1-s2" name="Nbclassic">Atest.Jupyter Server.Nbclassic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
