<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.8.7 on linux)" generated="20210211 00:43:05.451" rpa="false">
<suite id="s1" name="Atest" source="/home/runner/work/robots/robots/atest">
<suite id="s1-s1" name="Jupyter Server" source="/home/runner/work/robots/robots/atest/jupyter_server">
<suite id="s1-s1-s1" name="JupyterServerCLI" source="/home/runner/work/robots/robots/atest/jupyter_server/JupyterServerCLI.robot">
<test id="s1-s1-s1-t1" name="Test &quot;port&quot; trait">
<kw name="Start Unauthenticated Jupyter Server" library="Variables">
<arguments>
<arg>--ServerApp.port=9999</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210211 00:43:05.592" level="INFO">${extra_args} = ['--ServerApp.token=', '']</msg>
<status status="PASS" starttime="20210211 00:43:05.591" endtime="20210211 00:43:05.592"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210211 00:43:05.592" level="INFO">Starting process:
jupyter-server --ServerApp.port=9999 --ServerApp.token= ""</msg>
<msg timestamp="20210211 00:43:05.596" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210211 00:43:05.592" endtime="20210211 00:43:05.596"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210211 00:43:05.597" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210211 00:43:05.596" endtime="20210211 00:43:05.597"></status>
</kw>
<status status="PASS" starttime="20210211 00:43:05.589" endtime="20210211 00:43:05.597"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<arguments>
<arg>http://127.0.0.1:9999</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210211 00:43:05.599" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:9999, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210211 00:43:05.598" endtime="20210211 00:43:05.599"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210211 00:43:07.009" level="INFO">GET Request : url=http://127.0.0.1:9999/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210211 00:43:07.010" level="INFO">GET Response : url=http://127.0.0.1:9999/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Thu, 11 Feb 2021 00:43:07 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"e8f29a9d15427090ff710120a8f2eb05c8b153e5"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-11T00:43:06.951498Z", "started": "2021-02-11T00:43:06.951498Z"} 
 </msg>
<status status="PASS" starttime="20210211 00:43:05.599" endtime="20210211 00:43:07.010"></status>
</kw>
<status status="PASS" starttime="20210211 00:43:05.598" endtime="20210211 00:43:07.010"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210211 00:43:07.011" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210211 00:43:07.112" level="INFO">Process completed.</msg>
<msg timestamp="20210211 00:43:07.112" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210211 00:43:07.011" endtime="20210211 00:43:07.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210211 00:43:07.113" level="INFO">[I 2021-02-11 00:43:06.315 ServerApp] Writing notebook server cookie secret to /home/runner/.local/share/jupyter/runtime/jupyter_cookie_secret
[I 2021-02-11 00:43:06.945 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-11 00:43:06.964 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-11 00:43:06.971 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-11 00:43:06.971 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-11 00:43:06.971 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-11 00:43:06.971 ServerApp] http://localhost:9999/
[I 2021-02-11 00:43:06.971 ServerApp]  or http://127.0.0.1:9999/
[I 2021-02-11 00:43:06.971 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-02-11 00:43:07.011 ServerApp] received signal 15, stopping
[I 2021-02-11 00:43:07.011 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210211 00:43:07.112" endtime="20210211 00:43:07.113"></status>
</kw>
<status status="PASS" starttime="20210211 00:43:07.010" endtime="20210211 00:43:07.113"></status>
</kw>
<status status="PASS" starttime="20210211 00:43:05.588" endtime="20210211 00:43:07.113" critical="yes"></status>
</test>
<status status="PASS" starttime="20210211 00:43:05.478" endtime="20210211 00:43:07.114"></status>
</suite>
<suite id="s1-s1-s2" name="Nbclassic" source="/home/runner/work/robots/robots/atest/jupyter_server/Nbclassic.robot">
<test id="s1-s1-s2-t1" name="Test Entrypoint">
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210211 00:43:07.238" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210211 00:43:07.238" endtime="20210211 00:43:07.238"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210211 00:43:07.239" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210211 00:43:07.242" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210211 00:43:07.238" endtime="20210211 00:43:07.242"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210211 00:43:07.243" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210211 00:43:07.242" endtime="20210211 00:43:07.243"></status>
</kw>
<status status="PASS" starttime="20210211 00:43:07.237" endtime="20210211 00:43:07.243"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210211 00:43:07.245" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210211 00:43:07.244" endtime="20210211 00:43:07.246"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210211 00:43:07.854" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210211 00:43:07.854" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Thu, 11 Feb 2021 00:43:07 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"8ce08098d64256ce8dbee64b713d6ee5ca9cb46c"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-11T00:43:07.809215Z", "started": "2021-02-11T00:43:07.809215Z"} 
 </msg>
<status status="PASS" starttime="20210211 00:43:07.246" endtime="20210211 00:43:07.854"></status>
</kw>
<status status="PASS" starttime="20210211 00:43:07.243" endtime="20210211 00:43:07.854"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210211 00:43:07.855" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210211 00:43:07.956" level="INFO">Process completed.</msg>
<msg timestamp="20210211 00:43:07.956" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210211 00:43:07.855" endtime="20210211 00:43:07.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210211 00:43:07.957" level="INFO">[I 2021-02-11 00:43:07.802 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-11 00:43:07.823 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-11 00:43:07.830 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-11 00:43:07.830 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-11 00:43:07.830 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-11 00:43:07.830 ServerApp] http://localhost:8888/tree
[I 2021-02-11 00:43:07.830 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-11 00:43:07.830 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-02-11 00:43:07.855 ServerApp] received signal 15, stopping
[I 2021-02-11 00:43:07.857 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210211 00:43:07.957" endtime="20210211 00:43:07.957"></status>
</kw>
<status status="PASS" starttime="20210211 00:43:07.855" endtime="20210211 00:43:07.957"></status>
</kw>
<status status="PASS" starttime="20210211 00:43:07.237" endtime="20210211 00:43:07.958" critical="yes"></status>
</test>
<test id="s1-s1-s2-t2" name="Test Landing Page">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210211 00:43:07.960" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210211 00:43:07.959" endtime="20210211 00:43:07.960"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210211 00:43:07.961" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210211 00:43:07.960" endtime="20210211 00:43:07.961"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210211 00:43:07.961" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210211 00:43:07.961" endtime="20210211 00:43:07.961"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210211 00:43:07.962" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210211 00:43:07.966" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210211 00:43:07.961" endtime="20210211 00:43:07.966"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210211 00:43:07.967" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210211 00:43:07.966" endtime="20210211 00:43:07.967"></status>
</kw>
<status status="PASS" starttime="20210211 00:43:07.961" endtime="20210211 00:43:07.967"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210211 00:43:07.968" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210211 00:43:07.967" endtime="20210211 00:43:07.968"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210211 00:43:08.576" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210211 00:43:08.576" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Thu, 11 Feb 2021 00:43:08 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"60f29e69a3439bc4a4935488ab60340dd7594a89"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-11T00:43:08.522612Z", "started": "2021-02-11T00:43:08.522612Z"} 
 </msg>
<status status="PASS" starttime="20210211 00:43:07.968" endtime="20210211 00:43:08.576"></status>
</kw>
<status status="PASS" starttime="20210211 00:43:07.967" endtime="20210211 00:43:08.576"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210211 00:43:08.577" level="INFO">http://127.0.0.1:8888</msg>
<msg timestamp="20210211 00:43:14.152" level="INFO">0%|          | 0/108773488 [00:00&lt;?, ?it/s]  4%|4         | 4751360/108773488 [00:00&lt;00:02, 47491339.34it/s] 10%|9         | 10475520/108773488 [00:00&lt;00:01, 52853966.94it/s] 15%|#5        | 16783360/108773488 [00:00&lt;00:01, 49257052.82it/s] 25%|##5       | 27258880/108773488 [00:00&lt;00:01, 69096183.49it/s] 32%|###1      | 34406400/108773488 [00:00&lt;00:01, 50943267.42it/s] 39%|###8      | 41953280/108773488 [00:00&lt;00:01, 56375759.67it/s] 52%|#####2    | 56596480/108773488 [00:00&lt;00:00, 80485962.90it/s] 62%|######1   | 67112960/108773488 [00:00&lt;00:00, 86781875.44it/s] 70%|#######   | 76513280/108773488 [00:01&lt;00:00, 80670152.14it/s] 78%|#######8  | 85145600/108773488 [00:01&lt;00:00, 59895703.42it/s] 87%|########7 | 95037440/108773488 [00:01&lt;00:00, 68403961.72it/s]100%|##########| 108773488/108773488 [00:01&lt;00:00, 72807817.77it/s]</msg>
<status status="PASS" starttime="20210211 00:43:08.577" endtime="20210211 00:43:14.153"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210211 00:43:14.153" endtime="20210211 00:43:14.258"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210211 00:43:14.397" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-1.png"&gt;&lt;img src="puppeteer-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210211 00:43:14.258" endtime="20210211 00:43:14.397"></status>
</kw>
<status status="PASS" starttime="20210211 00:43:14.153" endtime="20210211 00:43:14.398"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210211 00:43:14.398" endtime="20210211 00:43:14.420"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210211 00:43:14.421" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210211 00:43:14.522" level="INFO">Process completed.</msg>
<msg timestamp="20210211 00:43:14.522" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210211 00:43:14.421" endtime="20210211 00:43:14.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210211 00:43:14.522" level="INFO">[I 2021-02-11 00:43:08.516 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-11 00:43:08.536 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-11 00:43:08.545 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-11 00:43:08.545 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-11 00:43:08.545 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-11 00:43:08.545 ServerApp] http://localhost:8888/tree
[I 2021-02-11 00:43:08.545 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-11 00:43:08.545 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-02-11 00:43:13.905 ServerApp] 302 GET / (127.0.0.1) 0.56ms
[C 2021-02-11 00:43:14.421 ServerApp] received signal 15, stopping
[I 2021-02-11 00:43:14.421 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210211 00:43:14.522" endtime="20210211 00:43:14.523"></status>
</kw>
<status status="PASS" starttime="20210211 00:43:14.420" endtime="20210211 00:43:14.523"></status>
</kw>
<status status="PASS" starttime="20210211 00:43:07.958" endtime="20210211 00:43:14.523" critical="yes"></status>
</test>
<test id="s1-s1-s2-t3" name="Test file_to_run">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210211 00:43:14.526" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210211 00:43:14.524" endtime="20210211 00:43:14.526"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210211 00:43:14.527" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210211 00:43:14.526" endtime="20210211 00:43:14.527"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210211 00:43:14.527" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210211 00:43:14.527" endtime="20210211 00:43:14.527"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210211 00:43:14.528" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210211 00:43:14.531" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210211 00:43:14.528" endtime="20210211 00:43:14.532"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210211 00:43:14.533" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210211 00:43:14.532" endtime="20210211 00:43:14.533"></status>
</kw>
<status status="PASS" starttime="20210211 00:43:14.527" endtime="20210211 00:43:14.533"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210211 00:43:14.534" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210211 00:43:14.533" endtime="20210211 00:43:14.534"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210211 00:43:15.142" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210211 00:43:15.142" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Thu, 11 Feb 2021 00:43:15 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"0fdf82a20f1c8309c5087dcf87690ed5ece58b9a"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-11T00:43:15.094804Z", "started": "2021-02-11T00:43:15.094804Z"} 
 </msg>
<status status="PASS" starttime="20210211 00:43:14.534" endtime="20210211 00:43:15.142"></status>
</kw>
<status status="PASS" starttime="20210211 00:43:14.533" endtime="20210211 00:43:15.142"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210211 00:43:15.143" level="INFO">http://127.0.0.1:8888</msg>
<status status="PASS" starttime="20210211 00:43:15.143" endtime="20210211 00:43:15.579"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210211 00:43:15.580" endtime="20210211 00:43:15.688"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210211 00:43:15.829" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-2.png"&gt;&lt;img src="puppeteer-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210211 00:43:15.688" endtime="20210211 00:43:15.829"></status>
</kw>
<status status="PASS" starttime="20210211 00:43:15.580" endtime="20210211 00:43:15.829"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210211 00:43:15.830" endtime="20210211 00:43:15.863"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210211 00:43:15.864" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210211 00:43:15.965" level="INFO">Process completed.</msg>
<msg timestamp="20210211 00:43:15.965" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210211 00:43:15.864" endtime="20210211 00:43:15.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210211 00:43:15.966" level="INFO">[I 2021-02-11 00:43:15.086 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-11 00:43:15.108 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-11 00:43:15.115 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-11 00:43:15.115 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-11 00:43:15.115 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-11 00:43:15.115 ServerApp] http://localhost:8888/tree
[I 2021-02-11 00:43:15.115 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-11 00:43:15.115 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-02-11 00:43:15.324 ServerApp] 302 GET / (127.0.0.1) 0.47ms
[C 2021-02-11 00:43:15.864 ServerApp] received signal 15, stopping
[I 2021-02-11 00:43:15.864 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210211 00:43:15.965" endtime="20210211 00:43:15.966"></status>
</kw>
<status status="PASS" starttime="20210211 00:43:15.863" endtime="20210211 00:43:15.966"></status>
</kw>
<status status="PASS" starttime="20210211 00:43:14.524" endtime="20210211 00:43:15.966" critical="yes"></status>
</test>
<status status="PASS" starttime="20210211 00:43:07.115" endtime="20210211 00:43:15.967"></status>
</suite>
<status status="PASS" starttime="20210211 00:43:05.476" endtime="20210211 00:43:15.970"></status>
</suite>
<status status="PASS" starttime="20210211 00:43:05.452" endtime="20210211 00:43:15.972"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="Atest">Atest</stat>
<stat pass="4" fail="0" id="s1-s1" name="Jupyter Server">Atest.Jupyter Server</stat>
<stat pass="1" fail="0" id="s1-s1-s1" name="JupyterServerCLI">Atest.Jupyter Server.JupyterServerCLI</stat>
<stat pass="3" fail="0" id="s1-s1-s2" name="Nbclassic">Atest.Jupyter Server.Nbclassic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
