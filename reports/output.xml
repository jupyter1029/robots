<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0 (Python 3.8.8 on linux)" generated="20210329 00:58:01.020" rpa="false" schemaversion="2">
<suite id="s1" name="Atest" source="/home/runner/work/robots/robots/atest">
<suite id="s1-s1" name="Jupyter Server" source="/home/runner/work/robots/robots/atest/jupyter_server">
<suite id="s1-s1-s1" name="JupyterServerCLI" source="/home/runner/work/robots/robots/atest/jupyter_server/JupyterServerCLI.robot">
<test id="s1-s1-s1-t1" name="Test &quot;port&quot; trait">
<kw name="Start Unauthenticated Jupyter Server" library="Variables">
<arg>--ServerApp.port=9999</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${extra_args}</var>
<arg>--ServerApp.token=</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210329 00:58:01.113" level="INFO">${extra_args} = ['--ServerApp.token=', '']</msg>
<status status="PASS" starttime="20210329 00:58:01.112" endtime="20210329 00:58:01.113"/>
</kw>
<kw name="Start Process" library="Process">
<var>${jupyter_server_process}</var>
<arg>jupyter-server</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210329 00:58:01.113" level="INFO">Starting process:
jupyter-server --ServerApp.port=9999 --ServerApp.token= ""</msg>
<msg timestamp="20210329 00:58:01.118" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210329 00:58:01.113" endtime="20210329 00:58:01.118"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${jupyter_server_process}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20210329 00:58:01.119" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210329 00:58:01.118" endtime="20210329 00:58:01.119"/>
</kw>
<status status="PASS" starttime="20210329 00:58:01.112" endtime="20210329 00:58:01.119"/>
</kw>
<kw name="Check Server Status" library="Variables">
<arg>http://127.0.0.1:9999</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210329 00:58:01.120" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:9999, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210329 00:58:01.120" endtime="20210329 00:58:01.121"/>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20210329 00:58:02.532" level="INFO">GET Request : url=http://127.0.0.1:9999/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210329 00:58:02.533" level="INFO">GET Response : url=http://127.0.0.1:9999/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Mon, 29 Mar 2021 00:58:02 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"8fce179341624a9e2e757e822bf3fee6f244f704"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-03-29T00:58:02.271887Z", "started": "2021-03-29T00:58:02.271887Z"} 
 </msg>
<status status="PASS" starttime="20210329 00:58:01.121" endtime="20210329 00:58:02.533"/>
</kw>
<status status="PASS" starttime="20210329 00:58:01.119" endtime="20210329 00:58:02.533"/>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="TEARDOWN">
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${jupyter_server_process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20210329 00:58:02.534" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210329 00:58:02.635" level="INFO">Process completed.</msg>
<msg timestamp="20210329 00:58:02.635" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210329 00:58:02.534" endtime="20210329 00:58:02.635"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210329 00:58:02.637" level="INFO">/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/jupyter_server/transutils.py:13: FutureWarning: The alias `_()` will be deprecated. Use `_i18n()` instead.
  warnings.warn(warn_msg, FutureWarning)
[I 2021-03-29 00:58:01.741 ServerApp] Writing notebook server cookie secret to /home/runner/.local/share/jupyter/runtime/jupyter_cookie_secret
[I 2021-03-29 00:58:02.266 ServerApp] nbclassic | extension was successfully linked.
[W 2021-03-29 00:58:02.282 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-03-29 00:58:02.287 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-03-29 00:58:02.287 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-03-29 00:58:02.287 ServerApp] Jupyter Server 1.5.1 is running at:
[I 2021-03-29 00:58:02.287 ServerApp] http://localhost:9999/
[I 2021-03-29 00:58:02.287 ServerApp]  or http://127.0.0.1:9999/
[I 2021-03-29 00:58:02.287 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-03-29 00:58:02.534 ServerApp] received signal 15, stopping
[I 2021-03-29 00:58:02.535 ServerApp] Shutting down 0 kernels
[I 2021-03-29 00:58:02.535 ServerApp] Shutting down 0 terminals</msg>
<status status="PASS" starttime="20210329 00:58:02.636" endtime="20210329 00:58:02.638"/>
</kw>
<status status="PASS" starttime="20210329 00:58:02.533" endtime="20210329 00:58:02.638"/>
</kw>
<status status="PASS" starttime="20210329 00:58:01.111" endtime="20210329 00:58:02.638"/>
</test>
<status status="PASS" starttime="20210329 00:58:01.043" endtime="20210329 00:58:02.639"/>
</suite>
<suite id="s1-s1-s2" name="Nbclassic" source="/home/runner/work/robots/robots/atest/jupyter_server/Nbclassic.robot">
<test id="s1-s1-s2-t1" name="Test Entrypoint">
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<var>${extra_args}</var>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210329 00:58:02.760" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210329 00:58:02.760" endtime="20210329 00:58:02.760"/>
</kw>
<kw name="Start Process" library="Process">
<var>${jupyter_server_process}</var>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210329 00:58:02.761" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210329 00:58:02.764" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210329 00:58:02.760" endtime="20210329 00:58:02.764"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${jupyter_server_process}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20210329 00:58:02.765" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210329 00:58:02.764" endtime="20210329 00:58:02.765"/>
</kw>
<status status="PASS" starttime="20210329 00:58:02.759" endtime="20210329 00:58:02.765"/>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210329 00:58:02.766" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210329 00:58:02.766" endtime="20210329 00:58:02.767"/>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20210329 00:58:03.377" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210329 00:58:03.377" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Mon, 29 Mar 2021 00:58:03 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"5f4451d97192934723acd300798e1820c4019a50"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-03-29T00:58:03.281537Z", "started": "2021-03-29T00:58:03.281537Z"} 
 </msg>
<status status="PASS" starttime="20210329 00:58:02.767" endtime="20210329 00:58:03.377"/>
</kw>
<status status="PASS" starttime="20210329 00:58:02.765" endtime="20210329 00:58:03.377"/>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="TEARDOWN">
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${jupyter_server_process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20210329 00:58:03.379" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210329 00:58:03.480" level="INFO">Process completed.</msg>
<msg timestamp="20210329 00:58:03.480" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210329 00:58:03.379" endtime="20210329 00:58:03.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210329 00:58:03.481" level="INFO">/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/jupyter_server/transutils.py:13: FutureWarning: The alias `_()` will be deprecated. Use `_i18n()` instead.
  warnings.warn(warn_msg, FutureWarning)
[I 2021-03-29 00:58:03.275 ServerApp] nbclassic | extension was successfully linked.
[W 2021-03-29 00:58:03.290 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-03-29 00:58:03.295 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-03-29 00:58:03.296 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-03-29 00:58:03.296 ServerApp] Jupyter Server 1.5.1 is running at:
[I 2021-03-29 00:58:03.296 ServerApp] http://localhost:8888/tree
[I 2021-03-29 00:58:03.296 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-03-29 00:58:03.296 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-03-29 00:58:03.379 ServerApp] received signal 15, stopping
[I 2021-03-29 00:58:03.379 ServerApp] Shutting down 0 kernels
[I 2021-03-29 00:58:03.379 ServerApp] Shutting down 0 terminals</msg>
<status status="PASS" starttime="20210329 00:58:03.480" endtime="20210329 00:58:03.482"/>
</kw>
<status status="PASS" starttime="20210329 00:58:03.378" endtime="20210329 00:58:03.482"/>
</kw>
<status status="PASS" starttime="20210329 00:58:02.759" endtime="20210329 00:58:03.482"/>
</test>
<test id="s1-s1-s2-t2" name="Test Landing Page">
<kw name="Get Variable Value" library="BuiltIn">
<var>${HEADLESS}</var>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20210329 00:58:03.484" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210329 00:58:03.483" endtime="20210329 00:58:03.485"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{options}</var>
<arg>headless=${HEADLESS}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210329 00:58:03.485" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210329 00:58:03.485" endtime="20210329 00:58:03.485"/>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<var>${extra_args}</var>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210329 00:58:03.486" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210329 00:58:03.486" endtime="20210329 00:58:03.486"/>
</kw>
<kw name="Start Process" library="Process">
<var>${jupyter_server_process}</var>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210329 00:58:03.487" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210329 00:58:03.491" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210329 00:58:03.486" endtime="20210329 00:58:03.491"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${jupyter_server_process}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20210329 00:58:03.493" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210329 00:58:03.492" endtime="20210329 00:58:03.493"/>
</kw>
<status status="PASS" starttime="20210329 00:58:03.485" endtime="20210329 00:58:03.494"/>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210329 00:58:03.497" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210329 00:58:03.495" endtime="20210329 00:58:03.498"/>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20210329 00:58:04.108" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210329 00:58:04.108" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Mon, 29 Mar 2021 00:58:04 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"e36bb05e3e1d9a5dbcb70cddcec02babaee8d708"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-03-29T00:58:04.017949Z", "started": "2021-03-29T00:58:04.017949Z"} 
 </msg>
<status status="PASS" starttime="20210329 00:58:03.498" endtime="20210329 00:58:04.108"/>
</kw>
<status status="PASS" starttime="20210329 00:58:03.494" endtime="20210329 00:58:04.109"/>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
<doc>Opens a new browser instance to the specific ``url``.</doc>
<msg timestamp="20210329 00:58:04.110" level="INFO">http://127.0.0.1:8888</msg>
<msg timestamp="20210329 00:58:07.451" level="INFO">0%|          | 0/108773488 [00:00&lt;?, ?it/s] 18%|#8        | 20019200/108773488 [00:00&lt;00:00, 200158308.65it/s] 37%|###6      | 40038400/108773488 [00:00&lt;00:00, 190846549.94it/s] 54%|#####4    | 59156480/108773488 [00:00&lt;00:00, 165746012.44it/s] 73%|#######3  | 79943680/108773488 [00:00&lt;00:00, 180709035.66it/s] 90%|######### | 98375680/108773488 [00:00&lt;00:00, 179646632.18it/s]100%|##########| 108773488/108773488 [00:00&lt;00:00, 184075712.27it/s]</msg>
<status status="PASS" starttime="20210329 00:58:04.109" endtime="20210329 00:58:07.451"/>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<arg>id:ipython_notebook</arg>
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<status status="PASS" starttime="20210329 00:58:07.452" endtime="20210329 00:58:07.573"/>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210329 00:58:07.710" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-1.png"&gt;&lt;img src="puppeteer-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210329 00:58:07.573" endtime="20210329 00:58:07.710"/>
</kw>
<status status="PASS" starttime="20210329 00:58:07.452" endtime="20210329 00:58:07.710"/>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210329 00:58:07.710" endtime="20210329 00:58:07.740"/>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="TEARDOWN">
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${jupyter_server_process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20210329 00:58:07.741" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210329 00:58:07.844" level="INFO">Process completed.</msg>
<msg timestamp="20210329 00:58:07.844" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210329 00:58:07.741" endtime="20210329 00:58:07.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210329 00:58:07.846" level="INFO">/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/jupyter_server/transutils.py:13: FutureWarning: The alias `_()` will be deprecated. Use `_i18n()` instead.
  warnings.warn(warn_msg, FutureWarning)
[I 2021-03-29 00:58:04.012 ServerApp] nbclassic | extension was successfully linked.
[W 2021-03-29 00:58:04.026 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-03-29 00:58:04.032 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-03-29 00:58:04.032 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-03-29 00:58:04.032 ServerApp] Jupyter Server 1.5.1 is running at:
[I 2021-03-29 00:58:04.032 ServerApp] http://localhost:8888/tree
[I 2021-03-29 00:58:04.032 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-03-29 00:58:04.032 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-03-29 00:58:07.220 ServerApp] 302 GET / (127.0.0.1) 0.49ms
[C 2021-03-29 00:58:07.741 ServerApp] received signal 15, stopping
[I 2021-03-29 00:58:07.741 ServerApp] Shutting down 0 kernels
[I 2021-03-29 00:58:07.741 ServerApp] Shutting down 0 terminals</msg>
<status status="PASS" starttime="20210329 00:58:07.844" endtime="20210329 00:58:07.846"/>
</kw>
<status status="PASS" starttime="20210329 00:58:07.740" endtime="20210329 00:58:07.846"/>
</kw>
<status status="PASS" starttime="20210329 00:58:03.482" endtime="20210329 00:58:07.846"/>
</test>
<test id="s1-s1-s2-t3" name="Test file_to_run">
<kw name="Get Variable Value" library="BuiltIn">
<var>${HEADLESS}</var>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20210329 00:58:07.851" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210329 00:58:07.848" endtime="20210329 00:58:07.851"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{options}</var>
<arg>headless=${HEADLESS}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210329 00:58:07.852" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210329 00:58:07.852" endtime="20210329 00:58:07.852"/>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<var>${extra_args}</var>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210329 00:58:07.854" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210329 00:58:07.853" endtime="20210329 00:58:07.854"/>
</kw>
<kw name="Start Process" library="Process">
<var>${jupyter_server_process}</var>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210329 00:58:07.854" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210329 00:58:07.859" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210329 00:58:07.854" endtime="20210329 00:58:07.859"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${jupyter_server_process}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20210329 00:58:07.860" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210329 00:58:07.859" endtime="20210329 00:58:07.860"/>
</kw>
<status status="PASS" starttime="20210329 00:58:07.853" endtime="20210329 00:58:07.860"/>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210329 00:58:07.861" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210329 00:58:07.861" endtime="20210329 00:58:07.862"/>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20210329 00:58:08.471" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210329 00:58:08.471" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Mon, 29 Mar 2021 00:58:08 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"8e642565dfbe8c2580fc0fd5edf99183940f495c"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-03-29T00:58:08.380769Z", "started": "2021-03-29T00:58:08.380769Z"} 
 </msg>
<status status="PASS" starttime="20210329 00:58:07.862" endtime="20210329 00:58:08.471"/>
</kw>
<status status="PASS" starttime="20210329 00:58:07.860" endtime="20210329 00:58:08.472"/>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
<doc>Opens a new browser instance to the specific ``url``.</doc>
<msg timestamp="20210329 00:58:08.473" level="INFO">http://127.0.0.1:8888</msg>
<status status="PASS" starttime="20210329 00:58:08.472" endtime="20210329 00:58:08.867"/>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<arg>id:ipython_notebook</arg>
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<status status="PASS" starttime="20210329 00:58:08.869" endtime="20210329 00:58:08.977"/>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210329 00:58:09.109" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-2.png"&gt;&lt;img src="puppeteer-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210329 00:58:08.977" endtime="20210329 00:58:09.109"/>
</kw>
<status status="PASS" starttime="20210329 00:58:08.868" endtime="20210329 00:58:09.109"/>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210329 00:58:09.109" endtime="20210329 00:58:09.128"/>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="TEARDOWN">
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${jupyter_server_process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20210329 00:58:09.129" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210329 00:58:09.230" level="INFO">Process completed.</msg>
<msg timestamp="20210329 00:58:09.230" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210329 00:58:09.129" endtime="20210329 00:58:09.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210329 00:58:09.232" level="INFO">/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/jupyter_server/transutils.py:13: FutureWarning: The alias `_()` will be deprecated. Use `_i18n()` instead.
  warnings.warn(warn_msg, FutureWarning)
[I 2021-03-29 00:58:08.374 ServerApp] nbclassic | extension was successfully linked.
[W 2021-03-29 00:58:08.389 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-03-29 00:58:08.396 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-03-29 00:58:08.396 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-03-29 00:58:08.396 ServerApp] Jupyter Server 1.5.1 is running at:
[I 2021-03-29 00:58:08.396 ServerApp] http://localhost:8888/tree
[I 2021-03-29 00:58:08.396 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-03-29 00:58:08.396 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-03-29 00:58:08.656 ServerApp] 302 GET / (127.0.0.1) 0.49ms
[C 2021-03-29 00:58:09.129 ServerApp] received signal 15, stopping
[I 2021-03-29 00:58:09.129 ServerApp] Shutting down 0 kernels
[I 2021-03-29 00:58:09.129 ServerApp] Shutting down 0 terminals</msg>
<status status="PASS" starttime="20210329 00:58:09.230" endtime="20210329 00:58:09.232"/>
</kw>
<status status="PASS" starttime="20210329 00:58:09.128" endtime="20210329 00:58:09.232"/>
</kw>
<status status="PASS" starttime="20210329 00:58:07.847" endtime="20210329 00:58:09.232"/>
</test>
<status status="PASS" starttime="20210329 00:58:02.640" endtime="20210329 00:58:09.233"/>
</suite>
<status status="PASS" starttime="20210329 00:58:01.041" endtime="20210329 00:58:09.235"/>
</suite>
<status status="PASS" starttime="20210329 00:58:01.021" endtime="20210329 00:58:09.236"/>
</suite>
<statistics>
<total>
<stat pass="4" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" skip="0" id="s1" name="Atest">Atest</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1" name="Jupyter Server">Atest.Jupyter Server</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="JupyterServerCLI">Atest.Jupyter Server.JupyterServerCLI</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s2" name="Nbclassic">Atest.Jupyter Server.Nbclassic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
