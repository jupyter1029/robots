<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0 (Python 3.8.8 on linux)" generated="20210401 00:58:06.127" rpa="false" schemaversion="2">
<suite id="s1" name="Atest" source="/home/runner/work/robots/robots/atest">
<suite id="s1-s1" name="Jupyter Server" source="/home/runner/work/robots/robots/atest/jupyter_server">
<suite id="s1-s1-s1" name="JupyterServerCLI" source="/home/runner/work/robots/robots/atest/jupyter_server/JupyterServerCLI.robot">
<test id="s1-s1-s1-t1" name="Test &quot;port&quot; trait">
<kw name="Start Unauthenticated Jupyter Server" library="Variables">
<arg>--ServerApp.port=9999</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${extra_args}</var>
<arg>--ServerApp.token=</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210401 00:58:06.237" level="INFO">${extra_args} = ['--ServerApp.token=', '']</msg>
<status status="PASS" starttime="20210401 00:58:06.236" endtime="20210401 00:58:06.237"/>
</kw>
<kw name="Start Process" library="Process">
<var>${jupyter_server_process}</var>
<arg>jupyter-server</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210401 00:58:06.238" level="INFO">Starting process:
jupyter-server --ServerApp.port=9999 --ServerApp.token= ""</msg>
<msg timestamp="20210401 00:58:06.241" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210401 00:58:06.237" endtime="20210401 00:58:06.241"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${jupyter_server_process}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20210401 00:58:06.243" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210401 00:58:06.242" endtime="20210401 00:58:06.243"/>
</kw>
<status status="PASS" starttime="20210401 00:58:06.236" endtime="20210401 00:58:06.243"/>
</kw>
<kw name="Check Server Status" library="Variables">
<arg>http://127.0.0.1:9999</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210401 00:58:06.244" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:9999, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210401 00:58:06.244" endtime="20210401 00:58:06.245"/>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20210401 00:58:07.657" level="INFO">GET Request : url=http://127.0.0.1:9999/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210401 00:58:07.657" level="INFO">GET Response : url=http://127.0.0.1:9999/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Thu, 01 Apr 2021 00:58:07 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"aeb4f3472c9b718a652609b749b58fc3cdcf6335"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-04-01T00:58:07.185997Z", "started": "2021-04-01T00:58:07.185997Z"} 
 </msg>
<status status="PASS" starttime="20210401 00:58:06.245" endtime="20210401 00:58:07.658"/>
</kw>
<status status="PASS" starttime="20210401 00:58:06.243" endtime="20210401 00:58:07.658"/>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="TEARDOWN">
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${jupyter_server_process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20210401 00:58:07.660" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210401 00:58:07.760" level="INFO">Process completed.</msg>
<msg timestamp="20210401 00:58:07.760" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210401 00:58:07.659" endtime="20210401 00:58:07.761"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210401 00:58:07.762" level="INFO">/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/jupyter_server/transutils.py:13: FutureWarning: The alias `_()` will be deprecated. Use `_i18n()` instead.
  warnings.warn(warn_msg, FutureWarning)
[I 2021-04-01 00:58:06.834 ServerApp] Writing notebook server cookie secret to /home/runner/.local/share/jupyter/runtime/jupyter_cookie_secret
[I 2021-04-01 00:58:07.180 ServerApp] nbclassic | extension was successfully linked.
[W 2021-04-01 00:58:07.196 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-04-01 00:58:07.202 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-04-01 00:58:07.202 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-04-01 00:58:07.202 ServerApp] Jupyter Server 1.5.1 is running at:
[I 2021-04-01 00:58:07.202 ServerApp] http://localhost:9999/
[I 2021-04-01 00:58:07.202 ServerApp]  or http://127.0.0.1:9999/
[I 2021-04-01 00:58:07.202 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-04-01 00:58:07.659 ServerApp] received signal 15, stopping
[I 2021-04-01 00:58:07.660 ServerApp] Shutting down 0 kernels
[I 2021-04-01 00:58:07.660 ServerApp] Shutting down 0 terminals</msg>
<status status="PASS" starttime="20210401 00:58:07.761" endtime="20210401 00:58:07.762"/>
</kw>
<status status="PASS" starttime="20210401 00:58:07.658" endtime="20210401 00:58:07.762"/>
</kw>
<status status="PASS" starttime="20210401 00:58:06.235" endtime="20210401 00:58:07.762"/>
</test>
<status status="PASS" starttime="20210401 00:58:06.154" endtime="20210401 00:58:07.764"/>
</suite>
<suite id="s1-s1-s2" name="Nbclassic" source="/home/runner/work/robots/robots/atest/jupyter_server/Nbclassic.robot">
<test id="s1-s1-s2-t1" name="Test Entrypoint">
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<var>${extra_args}</var>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210401 00:58:07.908" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210401 00:58:07.908" endtime="20210401 00:58:07.908"/>
</kw>
<kw name="Start Process" library="Process">
<var>${jupyter_server_process}</var>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210401 00:58:07.909" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210401 00:58:07.912" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210401 00:58:07.908" endtime="20210401 00:58:07.912"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${jupyter_server_process}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20210401 00:58:07.914" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210401 00:58:07.913" endtime="20210401 00:58:07.914"/>
</kw>
<status status="PASS" starttime="20210401 00:58:07.907" endtime="20210401 00:58:07.914"/>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210401 00:58:07.915" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210401 00:58:07.915" endtime="20210401 00:58:07.916"/>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20210401 00:58:09.326" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210401 00:58:09.326" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Thu, 01 Apr 2021 00:58:09 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"6bede388cc432ec7aa193d8d2bad5a05619f3581"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-04-01T00:58:08.510817Z", "started": "2021-04-01T00:58:08.510817Z"} 
 </msg>
<status status="PASS" starttime="20210401 00:58:07.916" endtime="20210401 00:58:09.326"/>
</kw>
<status status="PASS" starttime="20210401 00:58:07.914" endtime="20210401 00:58:09.326"/>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="TEARDOWN">
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${jupyter_server_process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20210401 00:58:09.328" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210401 00:58:09.428" level="INFO">Process completed.</msg>
<msg timestamp="20210401 00:58:09.429" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210401 00:58:09.327" endtime="20210401 00:58:09.429"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210401 00:58:09.430" level="INFO">/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/jupyter_server/transutils.py:13: FutureWarning: The alias `_()` will be deprecated. Use `_i18n()` instead.
  warnings.warn(warn_msg, FutureWarning)
[I 2021-04-01 00:58:08.504 ServerApp] nbclassic | extension was successfully linked.
[W 2021-04-01 00:58:08.520 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-04-01 00:58:08.526 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-04-01 00:58:08.527 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-04-01 00:58:08.527 ServerApp] Jupyter Server 1.5.1 is running at:
[I 2021-04-01 00:58:08.527 ServerApp] http://localhost:8888/tree
[I 2021-04-01 00:58:08.527 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-04-01 00:58:08.527 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-04-01 00:58:09.327 ServerApp] received signal 15, stopping
[I 2021-04-01 00:58:09.328 ServerApp] Shutting down 0 kernels
[I 2021-04-01 00:58:09.328 ServerApp] Shutting down 0 terminals</msg>
<status status="PASS" starttime="20210401 00:58:09.429" endtime="20210401 00:58:09.431"/>
</kw>
<status status="PASS" starttime="20210401 00:58:09.327" endtime="20210401 00:58:09.431"/>
</kw>
<status status="PASS" starttime="20210401 00:58:07.907" endtime="20210401 00:58:09.431"/>
</test>
<test id="s1-s1-s2-t2" name="Test Landing Page">
<kw name="Get Variable Value" library="BuiltIn">
<var>${HEADLESS}</var>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20210401 00:58:09.436" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210401 00:58:09.432" endtime="20210401 00:58:09.436"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{options}</var>
<arg>headless=${HEADLESS}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210401 00:58:09.437" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210401 00:58:09.436" endtime="20210401 00:58:09.437"/>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<var>${extra_args}</var>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210401 00:58:09.438" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210401 00:58:09.438" endtime="20210401 00:58:09.438"/>
</kw>
<kw name="Start Process" library="Process">
<var>${jupyter_server_process}</var>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210401 00:58:09.439" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210401 00:58:09.443" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210401 00:58:09.438" endtime="20210401 00:58:09.443"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${jupyter_server_process}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20210401 00:58:09.444" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210401 00:58:09.444" endtime="20210401 00:58:09.444"/>
</kw>
<status status="PASS" starttime="20210401 00:58:09.437" endtime="20210401 00:58:09.444"/>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210401 00:58:09.446" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210401 00:58:09.445" endtime="20210401 00:58:09.446"/>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20210401 00:58:10.054" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210401 00:58:10.054" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Thu, 01 Apr 2021 00:58:10 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"c22391cd7fdb0d6660d4992603af05ecd5d43bd9"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-04-01T00:58:10.019067Z", "started": "2021-04-01T00:58:10.019067Z"} 
 </msg>
<status status="PASS" starttime="20210401 00:58:09.446" endtime="20210401 00:58:10.054"/>
</kw>
<status status="PASS" starttime="20210401 00:58:09.445" endtime="20210401 00:58:10.055"/>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
<doc>Opens a new browser instance to the specific ``url``.</doc>
<msg timestamp="20210401 00:58:10.056" level="INFO">http://127.0.0.1:8888</msg>
<msg timestamp="20210401 00:58:14.147" level="INFO">0%|          | 0/108773488 [00:00&lt;?, ?it/s]  8%|8         | 9031680/108773488 [00:00&lt;00:01, 90214074.39it/s] 17%|#6        | 18053120/108773488 [00:00&lt;00:01, 70787499.71it/s] 31%|###       | 33556480/108773488 [00:00&lt;00:00, 103533369.03it/s] 43%|####3     | 47104000/108773488 [00:00&lt;00:00, 115043399.03it/s] 54%|#####4    | 59074560/108773488 [00:00&lt;00:00, 98685497.63it/s]  64%|######3   | 69550080/108773488 [00:00&lt;00:00, 93554647.97it/s] 83%|########3 | 90490880/108773488 [00:00&lt;00:00, 125898422.85it/s]100%|##########| 108773488/108773488 [00:00&lt;00:00, 118710297.11it/s]</msg>
<status status="PASS" starttime="20210401 00:58:10.055" endtime="20210401 00:58:14.147"/>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<arg>id:ipython_notebook</arg>
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<status status="PASS" starttime="20210401 00:58:14.148" endtime="20210401 00:58:14.289"/>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210401 00:58:14.419" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-1.png"&gt;&lt;img src="puppeteer-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210401 00:58:14.289" endtime="20210401 00:58:14.419"/>
</kw>
<status status="PASS" starttime="20210401 00:58:14.148" endtime="20210401 00:58:14.419"/>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210401 00:58:14.419" endtime="20210401 00:58:14.443"/>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="TEARDOWN">
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${jupyter_server_process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20210401 00:58:14.444" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210401 00:58:14.545" level="INFO">Process completed.</msg>
<msg timestamp="20210401 00:58:14.545" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210401 00:58:14.444" endtime="20210401 00:58:14.545"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210401 00:58:14.547" level="INFO">/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/jupyter_server/transutils.py:13: FutureWarning: The alias `_()` will be deprecated. Use `_i18n()` instead.
  warnings.warn(warn_msg, FutureWarning)
[I 2021-04-01 00:58:10.012 ServerApp] nbclassic | extension was successfully linked.
[W 2021-04-01 00:58:10.028 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-04-01 00:58:10.035 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-04-01 00:58:10.035 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-04-01 00:58:10.035 ServerApp] Jupyter Server 1.5.1 is running at:
[I 2021-04-01 00:58:10.035 ServerApp] http://localhost:8888/tree
[I 2021-04-01 00:58:10.035 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-04-01 00:58:10.035 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-04-01 00:58:13.897 ServerApp] 302 GET / (127.0.0.1) 0.57ms
[C 2021-04-01 00:58:14.444 ServerApp] received signal 15, stopping
[I 2021-04-01 00:58:14.444 ServerApp] Shutting down 0 kernels
[I 2021-04-01 00:58:14.445 ServerApp] Shutting down 0 terminals</msg>
<status status="PASS" starttime="20210401 00:58:14.546" endtime="20210401 00:58:14.547"/>
</kw>
<status status="PASS" starttime="20210401 00:58:14.443" endtime="20210401 00:58:14.547"/>
</kw>
<status status="PASS" starttime="20210401 00:58:09.432" endtime="20210401 00:58:14.547"/>
</test>
<test id="s1-s1-s2-t3" name="Test file_to_run">
<kw name="Get Variable Value" library="BuiltIn">
<var>${HEADLESS}</var>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20210401 00:58:14.550" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210401 00:58:14.548" endtime="20210401 00:58:14.551"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{options}</var>
<arg>headless=${HEADLESS}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210401 00:58:14.551" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210401 00:58:14.551" endtime="20210401 00:58:14.551"/>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<var>${extra_args}</var>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210401 00:58:14.552" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210401 00:58:14.552" endtime="20210401 00:58:14.552"/>
</kw>
<kw name="Start Process" library="Process">
<var>${jupyter_server_process}</var>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210401 00:58:14.553" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210401 00:58:14.557" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210401 00:58:14.552" endtime="20210401 00:58:14.557"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${jupyter_server_process}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20210401 00:58:14.558" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210401 00:58:14.557" endtime="20210401 00:58:14.558"/>
</kw>
<status status="PASS" starttime="20210401 00:58:14.551" endtime="20210401 00:58:14.558"/>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210401 00:58:14.560" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210401 00:58:14.559" endtime="20210401 00:58:14.560"/>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20210401 00:58:15.176" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210401 00:58:15.176" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Thu, 01 Apr 2021 00:58:15 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"66d6bde7b942706c17387cacba326381be5944e9"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-04-01T00:58:15.147745Z", "started": "2021-04-01T00:58:15.147745Z"} 
 </msg>
<status status="PASS" starttime="20210401 00:58:14.560" endtime="20210401 00:58:15.176"/>
</kw>
<status status="PASS" starttime="20210401 00:58:14.559" endtime="20210401 00:58:15.177"/>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
<doc>Opens a new browser instance to the specific ``url``.</doc>
<msg timestamp="20210401 00:58:15.177" level="INFO">http://127.0.0.1:8888</msg>
<status status="PASS" starttime="20210401 00:58:15.177" endtime="20210401 00:58:15.632"/>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<arg>id:ipython_notebook</arg>
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<status status="PASS" starttime="20210401 00:58:15.633" endtime="20210401 00:58:15.750"/>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210401 00:58:15.916" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-2.png"&gt;&lt;img src="puppeteer-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210401 00:58:15.751" endtime="20210401 00:58:15.916"/>
</kw>
<status status="PASS" starttime="20210401 00:58:15.633" endtime="20210401 00:58:15.916"/>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210401 00:58:15.916" endtime="20210401 00:58:16.013"/>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="TEARDOWN">
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${jupyter_server_process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20210401 00:58:16.014" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210401 00:58:16.115" level="INFO">Process completed.</msg>
<msg timestamp="20210401 00:58:16.115" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210401 00:58:16.014" endtime="20210401 00:58:16.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210401 00:58:16.120" level="INFO">/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/jupyter_server/transutils.py:13: FutureWarning: The alias `_()` will be deprecated. Use `_i18n()` instead.
  warnings.warn(warn_msg, FutureWarning)
[I 2021-04-01 00:58:15.141 ServerApp] nbclassic | extension was successfully linked.
[W 2021-04-01 00:58:15.157 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-04-01 00:58:15.164 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-04-01 00:58:15.164 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-04-01 00:58:15.164 ServerApp] Jupyter Server 1.5.1 is running at:
[I 2021-04-01 00:58:15.164 ServerApp] http://localhost:8888/tree
[I 2021-04-01 00:58:15.164 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-04-01 00:58:15.164 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-04-01 00:58:15.371 ServerApp] 302 GET / (127.0.0.1) 0.49ms
[C 2021-04-01 00:58:16.014 ServerApp] received signal 15, stopping
[I 2021-04-01 00:58:16.014 ServerApp] Shutting down 0 kernels
[I 2021-04-01 00:58:16.015 ServerApp] Shutting down 0 terminals</msg>
<status status="PASS" starttime="20210401 00:58:16.118" endtime="20210401 00:58:16.120"/>
</kw>
<status status="PASS" starttime="20210401 00:58:16.013" endtime="20210401 00:58:16.120"/>
</kw>
<status status="PASS" starttime="20210401 00:58:14.548" endtime="20210401 00:58:16.120"/>
</test>
<status status="PASS" starttime="20210401 00:58:07.765" endtime="20210401 00:58:16.121"/>
</suite>
<status status="PASS" starttime="20210401 00:58:06.152" endtime="20210401 00:58:16.124"/>
</suite>
<status status="PASS" starttime="20210401 00:58:06.128" endtime="20210401 00:58:16.126"/>
</suite>
<statistics>
<total>
<stat pass="4" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" skip="0" id="s1" name="Atest">Atest</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1" name="Jupyter Server">Atest.Jupyter Server</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="JupyterServerCLI">Atest.Jupyter Server.JupyterServerCLI</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s2" name="Nbclassic">Atest.Jupyter Server.Nbclassic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
