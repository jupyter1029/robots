<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0 (Python 3.8.8 on linux)" generated="20210402 01:03:39.369" rpa="false" schemaversion="2">
<suite id="s1" name="Atest" source="/home/runner/work/robots/robots/atest">
<suite id="s1-s1" name="Jupyter Server" source="/home/runner/work/robots/robots/atest/jupyter_server">
<suite id="s1-s1-s1" name="JupyterServerCLI" source="/home/runner/work/robots/robots/atest/jupyter_server/JupyterServerCLI.robot">
<test id="s1-s1-s1-t1" name="Test &quot;port&quot; trait">
<kw name="Start Unauthenticated Jupyter Server" library="Variables">
<arg>--ServerApp.port=9999</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${extra_args}</var>
<arg>--ServerApp.token=</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210402 01:03:39.470" level="INFO">${extra_args} = ['--ServerApp.token=', '']</msg>
<status status="PASS" starttime="20210402 01:03:39.469" endtime="20210402 01:03:39.470"/>
</kw>
<kw name="Start Process" library="Process">
<var>${jupyter_server_process}</var>
<arg>jupyter-server</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210402 01:03:39.470" level="INFO">Starting process:
jupyter-server --ServerApp.port=9999 --ServerApp.token= ""</msg>
<msg timestamp="20210402 01:03:39.474" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210402 01:03:39.470" endtime="20210402 01:03:39.474"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${jupyter_server_process}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20210402 01:03:39.476" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210402 01:03:39.475" endtime="20210402 01:03:39.476"/>
</kw>
<status status="PASS" starttime="20210402 01:03:39.469" endtime="20210402 01:03:39.476"/>
</kw>
<kw name="Check Server Status" library="Variables">
<arg>http://127.0.0.1:9999</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210402 01:03:39.477" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:9999, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210402 01:03:39.477" endtime="20210402 01:03:39.478"/>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20210402 01:03:42.492" level="INFO">GET Request : url=http://127.0.0.1:9999/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210402 01:03:42.492" level="INFO">GET Response : url=http://127.0.0.1:9999/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Fri, 02 Apr 2021 01:03:42 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"48fcc099d20d8a96cd2bfbec6f34894d2ce76a70"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-04-02T01:03:40.887981Z", "started": "2021-04-02T01:03:40.887981Z"} 
 </msg>
<status status="PASS" starttime="20210402 01:03:39.478" endtime="20210402 01:03:42.492"/>
</kw>
<status status="PASS" starttime="20210402 01:03:39.476" endtime="20210402 01:03:42.492"/>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="TEARDOWN">
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${jupyter_server_process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20210402 01:03:42.494" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210402 01:03:42.594" level="INFO">Process completed.</msg>
<msg timestamp="20210402 01:03:42.594" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210402 01:03:42.493" endtime="20210402 01:03:42.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210402 01:03:42.595" level="INFO">/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/jupyter_server/transutils.py:13: FutureWarning: The alias `_()` will be deprecated. Use `_i18n()` instead.
  warnings.warn(warn_msg, FutureWarning)
[I 2021-04-02 01:03:40.297 ServerApp] Writing notebook server cookie secret to /home/runner/.local/share/jupyter/runtime/jupyter_cookie_secret
[I 2021-04-02 01:03:40.882 ServerApp] nbclassic | extension was successfully linked.
[W 2021-04-02 01:03:40.900 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-04-02 01:03:40.906 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-04-02 01:03:40.906 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-04-02 01:03:40.906 ServerApp] Jupyter Server 1.5.1 is running at:
[I 2021-04-02 01:03:40.906 ServerApp] http://localhost:9999/
[I 2021-04-02 01:03:40.906 ServerApp]  or http://127.0.0.1:9999/
[I 2021-04-02 01:03:40.906 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-04-02 01:03:42.493 ServerApp] received signal 15, stopping
[I 2021-04-02 01:03:42.494 ServerApp] Shutting down 0 kernels
[I 2021-04-02 01:03:42.494 ServerApp] Shutting down 0 terminals</msg>
<status status="PASS" starttime="20210402 01:03:42.594" endtime="20210402 01:03:42.596"/>
</kw>
<status status="PASS" starttime="20210402 01:03:42.493" endtime="20210402 01:03:42.596"/>
</kw>
<status status="PASS" starttime="20210402 01:03:39.468" endtime="20210402 01:03:42.596"/>
</test>
<status status="PASS" starttime="20210402 01:03:39.395" endtime="20210402 01:03:42.597"/>
</suite>
<suite id="s1-s1-s2" name="Nbclassic" source="/home/runner/work/robots/robots/atest/jupyter_server/Nbclassic.robot">
<test id="s1-s1-s2-t1" name="Test Entrypoint">
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<var>${extra_args}</var>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210402 01:03:42.725" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210402 01:03:42.725" endtime="20210402 01:03:42.725"/>
</kw>
<kw name="Start Process" library="Process">
<var>${jupyter_server_process}</var>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210402 01:03:42.726" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210402 01:03:42.730" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210402 01:03:42.726" endtime="20210402 01:03:42.731"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${jupyter_server_process}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20210402 01:03:42.732" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210402 01:03:42.731" endtime="20210402 01:03:42.732"/>
</kw>
<status status="PASS" starttime="20210402 01:03:42.725" endtime="20210402 01:03:42.732"/>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210402 01:03:42.733" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210402 01:03:42.733" endtime="20210402 01:03:42.734"/>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20210402 01:03:43.342" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210402 01:03:43.342" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Fri, 02 Apr 2021 01:03:43 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"e071bb0d9cab0fdd6342149fcea703aa1d3cdfb8"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-04-02T01:03:43.295307Z", "started": "2021-04-02T01:03:43.295307Z"} 
 </msg>
<status status="PASS" starttime="20210402 01:03:42.734" endtime="20210402 01:03:43.342"/>
</kw>
<status status="PASS" starttime="20210402 01:03:42.732" endtime="20210402 01:03:43.342"/>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="TEARDOWN">
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${jupyter_server_process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20210402 01:03:43.343" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210402 01:03:43.444" level="INFO">Process completed.</msg>
<msg timestamp="20210402 01:03:43.444" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210402 01:03:43.343" endtime="20210402 01:03:43.444"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210402 01:03:43.446" level="INFO">/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/jupyter_server/transutils.py:13: FutureWarning: The alias `_()` will be deprecated. Use `_i18n()` instead.
  warnings.warn(warn_msg, FutureWarning)
[I 2021-04-02 01:03:43.288 ServerApp] nbclassic | extension was successfully linked.
[W 2021-04-02 01:03:43.304 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-04-02 01:03:43.311 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-04-02 01:03:43.311 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-04-02 01:03:43.311 ServerApp] Jupyter Server 1.5.1 is running at:
[I 2021-04-02 01:03:43.311 ServerApp] http://localhost:8888/tree
[I 2021-04-02 01:03:43.311 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-04-02 01:03:43.311 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-04-02 01:03:43.343 ServerApp] received signal 15, stopping
[I 2021-04-02 01:03:43.343 ServerApp] Shutting down 0 kernels
[I 2021-04-02 01:03:43.344 ServerApp] Shutting down 0 terminals</msg>
<status status="PASS" starttime="20210402 01:03:43.445" endtime="20210402 01:03:43.446"/>
</kw>
<status status="PASS" starttime="20210402 01:03:43.343" endtime="20210402 01:03:43.447"/>
</kw>
<status status="PASS" starttime="20210402 01:03:42.724" endtime="20210402 01:03:43.447"/>
</test>
<test id="s1-s1-s2-t2" name="Test Landing Page">
<kw name="Get Variable Value" library="BuiltIn">
<var>${HEADLESS}</var>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20210402 01:03:43.451" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210402 01:03:43.448" endtime="20210402 01:03:43.451"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{options}</var>
<arg>headless=${HEADLESS}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210402 01:03:43.452" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210402 01:03:43.451" endtime="20210402 01:03:43.452"/>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<var>${extra_args}</var>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210402 01:03:43.453" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210402 01:03:43.453" endtime="20210402 01:03:43.453"/>
</kw>
<kw name="Start Process" library="Process">
<var>${jupyter_server_process}</var>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210402 01:03:43.453" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210402 01:03:43.457" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210402 01:03:43.453" endtime="20210402 01:03:43.457"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${jupyter_server_process}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20210402 01:03:43.458" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210402 01:03:43.458" endtime="20210402 01:03:43.458"/>
</kw>
<status status="PASS" starttime="20210402 01:03:43.452" endtime="20210402 01:03:43.459"/>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210402 01:03:43.460" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210402 01:03:43.459" endtime="20210402 01:03:43.460"/>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20210402 01:03:44.069" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210402 01:03:44.069" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Fri, 02 Apr 2021 01:03:44 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"58a5d7e6db2bbc699e579b7c8ef6c5a090d20bbd"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-04-02T01:03:44.017424Z", "started": "2021-04-02T01:03:44.017424Z"} 
 </msg>
<status status="PASS" starttime="20210402 01:03:43.461" endtime="20210402 01:03:44.069"/>
</kw>
<status status="PASS" starttime="20210402 01:03:43.459" endtime="20210402 01:03:44.070"/>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
<doc>Opens a new browser instance to the specific ``url``.</doc>
<msg timestamp="20210402 01:03:44.071" level="INFO">http://127.0.0.1:8888</msg>
<msg timestamp="20210402 01:03:47.900" level="INFO">0%|          | 0/108773488 [00:00&lt;?, ?it/s]  9%|9         | 10158080/108773488 [00:00&lt;00:01, 66790523.33it/s] 15%|#5        | 16844800/108773488 [00:00&lt;00:01, 46084022.66it/s] 23%|##3       | 25169920/108773488 [00:00&lt;00:01, 52761540.29it/s] 44%|####3     | 47585280/108773488 [00:00&lt;00:00, 103344900.35it/s] 66%|######5   | 71290880/108773488 [00:00&lt;00:00, 142825881.17it/s] 83%|########3 | 90654720/108773488 [00:00&lt;00:00, 157934801.29it/s]100%|##########| 108773488/108773488 [00:00&lt;00:00, 124913603.96it/s]</msg>
<status status="PASS" starttime="20210402 01:03:44.070" endtime="20210402 01:03:47.901"/>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<arg>id:ipython_notebook</arg>
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<status status="PASS" starttime="20210402 01:03:47.902" endtime="20210402 01:03:48.006"/>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210402 01:03:48.179" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-1.png"&gt;&lt;img src="puppeteer-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210402 01:03:48.007" endtime="20210402 01:03:48.179"/>
</kw>
<status status="PASS" starttime="20210402 01:03:47.901" endtime="20210402 01:03:48.180"/>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210402 01:03:48.180" endtime="20210402 01:03:48.213"/>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="TEARDOWN">
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${jupyter_server_process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20210402 01:03:48.214" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210402 01:03:48.315" level="INFO">Process completed.</msg>
<msg timestamp="20210402 01:03:48.315" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210402 01:03:48.214" endtime="20210402 01:03:48.315"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210402 01:03:48.317" level="INFO">/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/jupyter_server/transutils.py:13: FutureWarning: The alias `_()` will be deprecated. Use `_i18n()` instead.
  warnings.warn(warn_msg, FutureWarning)
[I 2021-04-02 01:03:44.011 ServerApp] nbclassic | extension was successfully linked.
[W 2021-04-02 01:03:44.026 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-04-02 01:03:44.033 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-04-02 01:03:44.033 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-04-02 01:03:44.033 ServerApp] Jupyter Server 1.5.1 is running at:
[I 2021-04-02 01:03:44.033 ServerApp] http://localhost:8888/tree
[I 2021-04-02 01:03:44.033 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-04-02 01:03:44.033 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-04-02 01:03:47.651 ServerApp] 302 GET / (127.0.0.1) 0.44ms
[C 2021-04-02 01:03:48.214 ServerApp] received signal 15, stopping
[I 2021-04-02 01:03:48.214 ServerApp] Shutting down 0 kernels
[I 2021-04-02 01:03:48.215 ServerApp] Shutting down 0 terminals</msg>
<status status="PASS" starttime="20210402 01:03:48.315" endtime="20210402 01:03:48.317"/>
</kw>
<status status="PASS" starttime="20210402 01:03:48.213" endtime="20210402 01:03:48.317"/>
</kw>
<status status="PASS" starttime="20210402 01:03:43.447" endtime="20210402 01:03:48.317"/>
</test>
<test id="s1-s1-s2-t3" name="Test file_to_run">
<kw name="Get Variable Value" library="BuiltIn">
<var>${HEADLESS}</var>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20210402 01:03:48.320" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210402 01:03:48.318" endtime="20210402 01:03:48.320"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{options}</var>
<arg>headless=${HEADLESS}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210402 01:03:48.321" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210402 01:03:48.320" endtime="20210402 01:03:48.321"/>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<var>${extra_args}</var>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210402 01:03:48.322" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210402 01:03:48.321" endtime="20210402 01:03:48.322"/>
</kw>
<kw name="Start Process" library="Process">
<var>${jupyter_server_process}</var>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210402 01:03:48.322" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210402 01:03:48.326" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210402 01:03:48.322" endtime="20210402 01:03:48.326"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${jupyter_server_process}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20210402 01:03:48.327" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210402 01:03:48.327" endtime="20210402 01:03:48.327"/>
</kw>
<status status="PASS" starttime="20210402 01:03:48.321" endtime="20210402 01:03:48.328"/>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210402 01:03:48.329" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210402 01:03:48.328" endtime="20210402 01:03:48.329"/>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20210402 01:03:48.938" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210402 01:03:48.938" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Fri, 02 Apr 2021 01:03:48 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"8f4ece29be6fc13b7aa42215e028244b733bab36"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-04-02T01:03:48.890778Z", "started": "2021-04-02T01:03:48.890778Z"} 
 </msg>
<status status="PASS" starttime="20210402 01:03:48.330" endtime="20210402 01:03:48.938"/>
</kw>
<status status="PASS" starttime="20210402 01:03:48.328" endtime="20210402 01:03:48.938"/>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
<doc>Opens a new browser instance to the specific ``url``.</doc>
<msg timestamp="20210402 01:03:48.939" level="INFO">http://127.0.0.1:8888</msg>
<status status="PASS" starttime="20210402 01:03:48.939" endtime="20210402 01:03:49.353"/>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<arg>id:ipython_notebook</arg>
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<status status="PASS" starttime="20210402 01:03:49.358" endtime="20210402 01:03:49.481"/>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210402 01:03:49.630" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-2.png"&gt;&lt;img src="puppeteer-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210402 01:03:49.481" endtime="20210402 01:03:49.630"/>
</kw>
<status status="PASS" starttime="20210402 01:03:49.357" endtime="20210402 01:03:49.630"/>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210402 01:03:49.630" endtime="20210402 01:03:49.653"/>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="TEARDOWN">
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${jupyter_server_process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20210402 01:03:49.654" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210402 01:03:49.755" level="INFO">Process completed.</msg>
<msg timestamp="20210402 01:03:49.755" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210402 01:03:49.654" endtime="20210402 01:03:49.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210402 01:03:49.757" level="INFO">/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/jupyter_server/transutils.py:13: FutureWarning: The alias `_()` will be deprecated. Use `_i18n()` instead.
  warnings.warn(warn_msg, FutureWarning)
[I 2021-04-02 01:03:48.884 ServerApp] nbclassic | extension was successfully linked.
[W 2021-04-02 01:03:48.899 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-04-02 01:03:48.906 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-04-02 01:03:48.906 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-04-02 01:03:48.906 ServerApp] Jupyter Server 1.5.1 is running at:
[I 2021-04-02 01:03:48.906 ServerApp] http://localhost:8888/tree
[I 2021-04-02 01:03:48.906 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-04-02 01:03:48.906 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-04-02 01:03:49.120 ServerApp] 302 GET / (127.0.0.1) 0.51ms
[C 2021-04-02 01:03:49.654 ServerApp] received signal 15, stopping
[I 2021-04-02 01:03:49.654 ServerApp] Shutting down 0 kernels
[I 2021-04-02 01:03:49.655 ServerApp] Shutting down 0 terminals</msg>
<status status="PASS" starttime="20210402 01:03:49.756" endtime="20210402 01:03:49.757"/>
</kw>
<status status="PASS" starttime="20210402 01:03:49.653" endtime="20210402 01:03:49.757"/>
</kw>
<status status="PASS" starttime="20210402 01:03:48.318" endtime="20210402 01:03:49.758"/>
</test>
<status status="PASS" starttime="20210402 01:03:42.598" endtime="20210402 01:03:49.759"/>
</suite>
<status status="PASS" starttime="20210402 01:03:39.393" endtime="20210402 01:03:49.761"/>
</suite>
<status status="PASS" starttime="20210402 01:03:39.369" endtime="20210402 01:03:49.763"/>
</suite>
<statistics>
<total>
<stat pass="4" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" skip="0" id="s1" name="Atest">Atest</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1" name="Jupyter Server">Atest.Jupyter Server</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="JupyterServerCLI">Atest.Jupyter Server.JupyterServerCLI</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s2" name="Nbclassic">Atest.Jupyter Server.Nbclassic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
