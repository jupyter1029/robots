<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.8.7 on linux)" generated="20210301 00:41:26.091" rpa="false">
<suite id="s1" name="Atest" source="/home/runner/work/robots/robots/atest">
<suite id="s1-s1" name="Jupyter Server" source="/home/runner/work/robots/robots/atest/jupyter_server">
<suite id="s1-s1-s1" name="JupyterServerCLI" source="/home/runner/work/robots/robots/atest/jupyter_server/JupyterServerCLI.robot">
<test id="s1-s1-s1-t1" name="Test &quot;port&quot; trait">
<kw name="Start Unauthenticated Jupyter Server" library="Variables">
<arguments>
<arg>--ServerApp.port=9999</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210301 00:41:26.190" level="INFO">${extra_args} = ['--ServerApp.token=', '']</msg>
<status status="PASS" starttime="20210301 00:41:26.189" endtime="20210301 00:41:26.190"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210301 00:41:26.190" level="INFO">Starting process:
jupyter-server --ServerApp.port=9999 --ServerApp.token= ""</msg>
<msg timestamp="20210301 00:41:26.194" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210301 00:41:26.190" endtime="20210301 00:41:26.194"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210301 00:41:26.195" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210301 00:41:26.194" endtime="20210301 00:41:26.195"></status>
</kw>
<status status="PASS" starttime="20210301 00:41:26.188" endtime="20210301 00:41:26.195"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<arguments>
<arg>http://127.0.0.1:9999</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210301 00:41:26.196" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:9999, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210301 00:41:26.196" endtime="20210301 00:41:26.197"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210301 00:41:27.609" level="INFO">GET Request : url=http://127.0.0.1:9999/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210301 00:41:27.610" level="INFO">GET Response : url=http://127.0.0.1:9999/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Mon, 01 Mar 2021 00:41:27 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"030b5d09bef72c7d78512d9ae247961c96ccec08"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-03-01T00:41:27.479710Z", "started": "2021-03-01T00:41:27.479710Z"} 
 </msg>
<status status="PASS" starttime="20210301 00:41:26.197" endtime="20210301 00:41:27.610"></status>
</kw>
<status status="PASS" starttime="20210301 00:41:26.196" endtime="20210301 00:41:27.610"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210301 00:41:27.611" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210301 00:41:27.712" level="INFO">Process completed.</msg>
<msg timestamp="20210301 00:41:27.712" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210301 00:41:27.611" endtime="20210301 00:41:27.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210301 00:41:27.713" level="INFO">[I 2021-03-01 00:41:26.826 ServerApp] Writing notebook server cookie secret to /home/runner/.local/share/jupyter/runtime/jupyter_cookie_secret
[I 2021-03-01 00:41:27.473 ServerApp] nbclassic | extension was successfully linked.
[W 2021-03-01 00:41:27.493 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-03-01 00:41:27.501 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-03-01 00:41:27.502 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-03-01 00:41:27.502 ServerApp] Jupyter Server 1.4.1 is running at:
[I 2021-03-01 00:41:27.502 ServerApp] http://localhost:9999/
[I 2021-03-01 00:41:27.502 ServerApp]  or http://127.0.0.1:9999/
[I 2021-03-01 00:41:27.502 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-03-01 00:41:27.611 ServerApp] received signal 15, stopping
[I 2021-03-01 00:41:27.611 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210301 00:41:27.712" endtime="20210301 00:41:27.713"></status>
</kw>
<status status="PASS" starttime="20210301 00:41:27.610" endtime="20210301 00:41:27.713"></status>
</kw>
<status status="PASS" starttime="20210301 00:41:26.187" endtime="20210301 00:41:27.713" critical="yes"></status>
</test>
<status status="PASS" starttime="20210301 00:41:26.115" endtime="20210301 00:41:27.714"></status>
</suite>
<suite id="s1-s1-s2" name="Nbclassic" source="/home/runner/work/robots/robots/atest/jupyter_server/Nbclassic.robot">
<test id="s1-s1-s2-t1" name="Test Entrypoint">
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210301 00:41:27.839" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210301 00:41:27.839" endtime="20210301 00:41:27.839"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210301 00:41:27.840" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210301 00:41:27.844" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210301 00:41:27.840" endtime="20210301 00:41:27.844"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210301 00:41:27.845" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210301 00:41:27.844" endtime="20210301 00:41:27.845"></status>
</kw>
<status status="PASS" starttime="20210301 00:41:27.839" endtime="20210301 00:41:27.845"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210301 00:41:27.846" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210301 00:41:27.846" endtime="20210301 00:41:27.848"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210301 00:41:28.457" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210301 00:41:28.458" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Mon, 01 Mar 2021 00:41:28 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"327cf0c7a397be99c81ca9fe445d1408b1764adf"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-03-01T00:41:28.412954Z", "started": "2021-03-01T00:41:28.412954Z"} 
 </msg>
<status status="PASS" starttime="20210301 00:41:27.849" endtime="20210301 00:41:28.458"></status>
</kw>
<status status="PASS" starttime="20210301 00:41:27.845" endtime="20210301 00:41:28.458"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210301 00:41:28.459" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210301 00:41:28.560" level="INFO">Process completed.</msg>
<msg timestamp="20210301 00:41:28.560" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210301 00:41:28.459" endtime="20210301 00:41:28.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210301 00:41:28.561" level="INFO">[I 2021-03-01 00:41:28.406 ServerApp] nbclassic | extension was successfully linked.
[W 2021-03-01 00:41:28.426 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-03-01 00:41:28.433 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-03-01 00:41:28.433 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-03-01 00:41:28.433 ServerApp] Jupyter Server 1.4.1 is running at:
[I 2021-03-01 00:41:28.433 ServerApp] http://localhost:8888/tree
[I 2021-03-01 00:41:28.433 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-03-01 00:41:28.433 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-03-01 00:41:28.459 ServerApp] received signal 15, stopping
[I 2021-03-01 00:41:28.460 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210301 00:41:28.561" endtime="20210301 00:41:28.561"></status>
</kw>
<status status="PASS" starttime="20210301 00:41:28.459" endtime="20210301 00:41:28.562"></status>
</kw>
<status status="PASS" starttime="20210301 00:41:27.838" endtime="20210301 00:41:28.562" critical="yes"></status>
</test>
<test id="s1-s1-s2-t2" name="Test Landing Page">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210301 00:41:28.565" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210301 00:41:28.563" endtime="20210301 00:41:28.565"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210301 00:41:28.567" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210301 00:41:28.566" endtime="20210301 00:41:28.567"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210301 00:41:28.568" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210301 00:41:28.567" endtime="20210301 00:41:28.568"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210301 00:41:28.569" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210301 00:41:28.573" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210301 00:41:28.568" endtime="20210301 00:41:28.573"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210301 00:41:28.574" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210301 00:41:28.573" endtime="20210301 00:41:28.574"></status>
</kw>
<status status="PASS" starttime="20210301 00:41:28.567" endtime="20210301 00:41:28.574"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210301 00:41:28.575" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210301 00:41:28.575" endtime="20210301 00:41:28.576"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210301 00:41:29.186" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210301 00:41:29.186" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Mon, 01 Mar 2021 00:41:29 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"54f12ebab11b4ef8c1d61fadbabbe8589d4c1c6e"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-03-01T00:41:29.133803Z", "started": "2021-03-01T00:41:29.133803Z"} 
 </msg>
<status status="PASS" starttime="20210301 00:41:28.576" endtime="20210301 00:41:29.187"></status>
</kw>
<status status="PASS" starttime="20210301 00:41:28.574" endtime="20210301 00:41:29.187"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210301 00:41:29.188" level="INFO">http://127.0.0.1:8888</msg>
<msg timestamp="20210301 00:41:32.844" level="INFO">0%|          | 0/108773488 [00:00&lt;?, ?it/s] 15%|#5        | 16783360/108773488 [00:00&lt;00:00, 159784895.48it/s] 38%|###7      | 41052160/108773488 [00:00&lt;00:00, 207247380.17it/s] 60%|#####9    | 65126400/108773488 [00:00&lt;00:00, 222346352.25it/s] 83%|########3 | 90327040/108773488 [00:00&lt;00:00, 233956537.56it/s]100%|##########| 108773488/108773488 [00:00&lt;00:00, 226362492.22it/s]</msg>
<status status="PASS" starttime="20210301 00:41:29.187" endtime="20210301 00:41:32.844"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210301 00:41:32.845" endtime="20210301 00:41:32.954"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210301 00:41:33.085" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-1.png"&gt;&lt;img src="puppeteer-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210301 00:41:32.954" endtime="20210301 00:41:33.085"></status>
</kw>
<status status="PASS" starttime="20210301 00:41:32.844" endtime="20210301 00:41:33.085"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210301 00:41:33.085" endtime="20210301 00:41:33.112"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210301 00:41:33.113" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210301 00:41:33.213" level="INFO">Process completed.</msg>
<msg timestamp="20210301 00:41:33.214" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210301 00:41:33.113" endtime="20210301 00:41:33.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210301 00:41:33.215" level="INFO">[I 2021-03-01 00:41:29.126 ServerApp] nbclassic | extension was successfully linked.
[W 2021-03-01 00:41:29.147 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-03-01 00:41:29.153 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-03-01 00:41:29.154 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-03-01 00:41:29.154 ServerApp] Jupyter Server 1.4.1 is running at:
[I 2021-03-01 00:41:29.154 ServerApp] http://localhost:8888/tree
[I 2021-03-01 00:41:29.154 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-03-01 00:41:29.154 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-03-01 00:41:32.604 ServerApp] 302 GET / (127.0.0.1) 0.52ms
[C 2021-03-01 00:41:33.113 ServerApp] received signal 15, stopping
[I 2021-03-01 00:41:33.113 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210301 00:41:33.214" endtime="20210301 00:41:33.215"></status>
</kw>
<status status="PASS" starttime="20210301 00:41:33.112" endtime="20210301 00:41:33.216"></status>
</kw>
<status status="PASS" starttime="20210301 00:41:28.562" endtime="20210301 00:41:33.216" critical="yes"></status>
</test>
<test id="s1-s1-s2-t3" name="Test file_to_run">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210301 00:41:33.219" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210301 00:41:33.218" endtime="20210301 00:41:33.219"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210301 00:41:33.220" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210301 00:41:33.219" endtime="20210301 00:41:33.220"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210301 00:41:33.221" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210301 00:41:33.220" endtime="20210301 00:41:33.221"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210301 00:41:33.221" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210301 00:41:33.226" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210301 00:41:33.221" endtime="20210301 00:41:33.226"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210301 00:41:33.227" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210301 00:41:33.226" endtime="20210301 00:41:33.227"></status>
</kw>
<status status="PASS" starttime="20210301 00:41:33.220" endtime="20210301 00:41:33.227"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210301 00:41:33.228" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210301 00:41:33.228" endtime="20210301 00:41:33.229"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210301 00:41:33.840" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210301 00:41:33.840" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Mon, 01 Mar 2021 00:41:33 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"27c78e72990643cb56347bbd1a11bee870e706e8"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-03-01T00:41:33.767787Z", "started": "2021-03-01T00:41:33.767787Z"} 
 </msg>
<status status="PASS" starttime="20210301 00:41:33.229" endtime="20210301 00:41:33.841"></status>
</kw>
<status status="PASS" starttime="20210301 00:41:33.227" endtime="20210301 00:41:33.841"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210301 00:41:33.842" level="INFO">http://127.0.0.1:8888</msg>
<status status="PASS" starttime="20210301 00:41:33.841" endtime="20210301 00:41:34.263"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210301 00:41:34.264" endtime="20210301 00:41:34.380"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210301 00:41:34.515" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-2.png"&gt;&lt;img src="puppeteer-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210301 00:41:34.380" endtime="20210301 00:41:34.515"></status>
</kw>
<status status="PASS" starttime="20210301 00:41:34.264" endtime="20210301 00:41:34.515"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210301 00:41:34.515" endtime="20210301 00:41:34.537"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210301 00:41:34.538" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210301 00:41:34.639" level="INFO">Process completed.</msg>
<msg timestamp="20210301 00:41:34.639" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210301 00:41:34.538" endtime="20210301 00:41:34.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210301 00:41:34.640" level="INFO">[I 2021-03-01 00:41:33.761 ServerApp] nbclassic | extension was successfully linked.
[W 2021-03-01 00:41:33.781 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-03-01 00:41:33.788 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-03-01 00:41:33.788 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-03-01 00:41:33.788 ServerApp] Jupyter Server 1.4.1 is running at:
[I 2021-03-01 00:41:33.788 ServerApp] http://localhost:8888/tree
[I 2021-03-01 00:41:33.788 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-03-01 00:41:33.788 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-03-01 00:41:34.026 ServerApp] 302 GET / (127.0.0.1) 0.55ms
[C 2021-03-01 00:41:34.538 ServerApp] received signal 15, stopping
[I 2021-03-01 00:41:34.538 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210301 00:41:34.639" endtime="20210301 00:41:34.640"></status>
</kw>
<status status="PASS" starttime="20210301 00:41:34.537" endtime="20210301 00:41:34.640"></status>
</kw>
<status status="PASS" starttime="20210301 00:41:33.217" endtime="20210301 00:41:34.640" critical="yes"></status>
</test>
<status status="PASS" starttime="20210301 00:41:27.715" endtime="20210301 00:41:34.641"></status>
</suite>
<status status="PASS" starttime="20210301 00:41:26.114" endtime="20210301 00:41:34.643"></status>
</suite>
<status status="PASS" starttime="20210301 00:41:26.092" endtime="20210301 00:41:34.645"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="Atest">Atest</stat>
<stat pass="4" fail="0" id="s1-s1" name="Jupyter Server">Atest.Jupyter Server</stat>
<stat pass="1" fail="0" id="s1-s1-s1" name="JupyterServerCLI">Atest.Jupyter Server.JupyterServerCLI</stat>
<stat pass="3" fail="0" id="s1-s1-s2" name="Nbclassic">Atest.Jupyter Server.Nbclassic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
