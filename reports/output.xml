<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.8.7 on linux)" generated="20210302 00:33:02.537" rpa="false">
<suite id="s1" name="Atest" source="/home/runner/work/robots/robots/atest">
<suite id="s1-s1" name="Jupyter Server" source="/home/runner/work/robots/robots/atest/jupyter_server">
<suite id="s1-s1-s1" name="JupyterServerCLI" source="/home/runner/work/robots/robots/atest/jupyter_server/JupyterServerCLI.robot">
<test id="s1-s1-s1-t1" name="Test &quot;port&quot; trait">
<kw name="Start Unauthenticated Jupyter Server" library="Variables">
<arguments>
<arg>--ServerApp.port=9999</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210302 00:33:02.622" level="INFO">${extra_args} = ['--ServerApp.token=', '']</msg>
<status status="PASS" starttime="20210302 00:33:02.622" endtime="20210302 00:33:02.622"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210302 00:33:02.623" level="INFO">Starting process:
jupyter-server --ServerApp.port=9999 --ServerApp.token= ""</msg>
<msg timestamp="20210302 00:33:02.626" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210302 00:33:02.622" endtime="20210302 00:33:02.626"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210302 00:33:02.627" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210302 00:33:02.626" endtime="20210302 00:33:02.627"></status>
</kw>
<status status="PASS" starttime="20210302 00:33:02.621" endtime="20210302 00:33:02.627"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<arguments>
<arg>http://127.0.0.1:9999</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210302 00:33:02.628" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:9999, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210302 00:33:02.627" endtime="20210302 00:33:02.628"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210302 00:33:05.639" level="INFO">GET Request : url=http://127.0.0.1:9999/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210302 00:33:05.640" level="INFO">GET Response : url=http://127.0.0.1:9999/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Tue, 02 Mar 2021 00:33:05 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"8d11c655352663639eb408bcd32348c99fbfdee1"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-03-02T00:33:04.227093Z", "started": "2021-03-02T00:33:04.227093Z"} 
 </msg>
<status status="PASS" starttime="20210302 00:33:02.628" endtime="20210302 00:33:05.640"></status>
</kw>
<status status="PASS" starttime="20210302 00:33:02.627" endtime="20210302 00:33:05.640"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 00:33:05.641" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210302 00:33:05.741" level="INFO">Process completed.</msg>
<msg timestamp="20210302 00:33:05.742" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210302 00:33:05.641" endtime="20210302 00:33:05.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210302 00:33:05.742" level="INFO">[I 2021-03-02 00:33:03.557 ServerApp] Writing notebook server cookie secret to /home/runner/.local/share/jupyter/runtime/jupyter_cookie_secret
[I 2021-03-02 00:33:04.222 ServerApp] nbclassic | extension was successfully linked.
[W 2021-03-02 00:33:04.238 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-03-02 00:33:04.245 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-03-02 00:33:04.245 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-03-02 00:33:04.245 ServerApp] Jupyter Server 1.4.1 is running at:
[I 2021-03-02 00:33:04.245 ServerApp] http://localhost:9999/
[I 2021-03-02 00:33:04.245 ServerApp]  or http://127.0.0.1:9999/
[I 2021-03-02 00:33:04.245 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-03-02 00:33:05.641 ServerApp] received signal 15, stopping
[I 2021-03-02 00:33:05.641 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210302 00:33:05.742" endtime="20210302 00:33:05.742"></status>
</kw>
<status status="PASS" starttime="20210302 00:33:05.640" endtime="20210302 00:33:05.743"></status>
</kw>
<status status="PASS" starttime="20210302 00:33:02.620" endtime="20210302 00:33:05.743" critical="yes"></status>
</test>
<status status="PASS" starttime="20210302 00:33:02.558" endtime="20210302 00:33:05.743"></status>
</suite>
<suite id="s1-s1-s2" name="Nbclassic" source="/home/runner/work/robots/robots/atest/jupyter_server/Nbclassic.robot">
<test id="s1-s1-s2-t1" name="Test Entrypoint">
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210302 00:33:05.851" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210302 00:33:05.850" endtime="20210302 00:33:05.851"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210302 00:33:05.851" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210302 00:33:05.855" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210302 00:33:05.851" endtime="20210302 00:33:05.855"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210302 00:33:05.856" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210302 00:33:05.855" endtime="20210302 00:33:05.856"></status>
</kw>
<status status="PASS" starttime="20210302 00:33:05.850" endtime="20210302 00:33:05.856"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210302 00:33:05.857" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210302 00:33:05.856" endtime="20210302 00:33:05.859"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210302 00:33:06.467" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210302 00:33:06.467" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Tue, 02 Mar 2021 00:33:06 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"f6e8615dfe0b042afe425e6e7ed52837c818972c"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-03-02T00:33:06.324156Z", "started": "2021-03-02T00:33:06.324156Z"} 
 </msg>
<status status="PASS" starttime="20210302 00:33:05.859" endtime="20210302 00:33:06.467"></status>
</kw>
<status status="PASS" starttime="20210302 00:33:05.856" endtime="20210302 00:33:06.467"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 00:33:06.468" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210302 00:33:06.569" level="INFO">Process completed.</msg>
<msg timestamp="20210302 00:33:06.569" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210302 00:33:06.468" endtime="20210302 00:33:06.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210302 00:33:06.570" level="INFO">[I 2021-03-02 00:33:06.318 ServerApp] nbclassic | extension was successfully linked.
[W 2021-03-02 00:33:06.335 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-03-02 00:33:06.341 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-03-02 00:33:06.341 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-03-02 00:33:06.341 ServerApp] Jupyter Server 1.4.1 is running at:
[I 2021-03-02 00:33:06.342 ServerApp] http://localhost:8888/tree
[I 2021-03-02 00:33:06.342 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-03-02 00:33:06.342 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-03-02 00:33:06.468 ServerApp] received signal 15, stopping
[I 2021-03-02 00:33:06.468 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210302 00:33:06.569" endtime="20210302 00:33:06.570"></status>
</kw>
<status status="PASS" starttime="20210302 00:33:06.468" endtime="20210302 00:33:06.570"></status>
</kw>
<status status="PASS" starttime="20210302 00:33:05.850" endtime="20210302 00:33:06.570" critical="yes"></status>
</test>
<test id="s1-s1-s2-t2" name="Test Landing Page">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210302 00:33:06.573" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210302 00:33:06.572" endtime="20210302 00:33:06.573"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210302 00:33:06.574" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210302 00:33:06.573" endtime="20210302 00:33:06.574"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210302 00:33:06.574" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210302 00:33:06.574" endtime="20210302 00:33:06.574"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210302 00:33:06.575" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210302 00:33:06.578" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210302 00:33:06.575" endtime="20210302 00:33:06.579"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210302 00:33:06.579" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210302 00:33:06.579" endtime="20210302 00:33:06.580"></status>
</kw>
<status status="PASS" starttime="20210302 00:33:06.574" endtime="20210302 00:33:06.580"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210302 00:33:06.581" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210302 00:33:06.580" endtime="20210302 00:33:06.581"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210302 00:33:07.189" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210302 00:33:07.190" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Tue, 02 Mar 2021 00:33:07 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"2bfbfc7880adb73ca7aafe5081876505f827554e"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-03-02T00:33:07.041187Z", "started": "2021-03-02T00:33:07.041187Z"} 
 </msg>
<status status="PASS" starttime="20210302 00:33:06.581" endtime="20210302 00:33:07.190"></status>
</kw>
<status status="PASS" starttime="20210302 00:33:06.580" endtime="20210302 00:33:07.190"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210302 00:33:07.190" level="INFO">http://127.0.0.1:8888</msg>
<msg timestamp="20210302 00:33:12.272" level="INFO">0%|          | 0/108773488 [00:00&lt;?, ?it/s]  9%|8         | 9635840/108773488 [00:00&lt;00:01, 96338738.58it/s] 18%|#7        | 19271680/108773488 [00:00&lt;00:01, 81932144.08it/s] 27%|##6       | 29245440/108773488 [00:00&lt;00:00, 79744435.48it/s] 36%|###5      | 39137280/108773488 [00:00&lt;00:00, 77689782.18it/s] 44%|####3     | 47534080/108773488 [00:00&lt;00:00, 77853667.73it/s] 55%|#####4    | 59535360/108773488 [00:00&lt;00:00, 90510930.62it/s] 64%|######3   | 69120000/108773488 [00:00&lt;00:00, 88055203.37it/s] 72%|#######1  | 78059520/108773488 [00:00&lt;00:00, 84916533.81it/s] 83%|########3 | 90613760/108773488 [00:01&lt;00:00, 96503117.10it/s] 92%|#########2| 100444160/108773488 [00:01&lt;00:00, 86877400.36it/s]100%|##########| 108773488/108773488 [00:01&lt;00:00, 82097213.64it/s]</msg>
<status status="PASS" starttime="20210302 00:33:07.190" endtime="20210302 00:33:12.272"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210302 00:33:12.273" endtime="20210302 00:33:12.350"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210302 00:33:12.466" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-1.png"&gt;&lt;img src="puppeteer-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210302 00:33:12.351" endtime="20210302 00:33:12.466"></status>
</kw>
<status status="PASS" starttime="20210302 00:33:12.273" endtime="20210302 00:33:12.466"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210302 00:33:12.466" endtime="20210302 00:33:12.497"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 00:33:12.498" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210302 00:33:12.601" level="INFO">Process completed.</msg>
<msg timestamp="20210302 00:33:12.601" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210302 00:33:12.498" endtime="20210302 00:33:12.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210302 00:33:12.602" level="INFO">[I 2021-03-02 00:33:07.035 ServerApp] nbclassic | extension was successfully linked.
[W 2021-03-02 00:33:07.052 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-03-02 00:33:07.058 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-03-02 00:33:07.058 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-03-02 00:33:07.058 ServerApp] Jupyter Server 1.4.1 is running at:
[I 2021-03-02 00:33:07.058 ServerApp] http://localhost:8888/tree
[I 2021-03-02 00:33:07.058 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-03-02 00:33:07.058 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-03-02 00:33:12.055 ServerApp] 302 GET / (127.0.0.1) 0.45ms
[C 2021-03-02 00:33:12.498 ServerApp] received signal 15, stopping
[I 2021-03-02 00:33:12.498 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210302 00:33:12.601" endtime="20210302 00:33:12.602"></status>
</kw>
<status status="PASS" starttime="20210302 00:33:12.497" endtime="20210302 00:33:12.602"></status>
</kw>
<status status="PASS" starttime="20210302 00:33:06.571" endtime="20210302 00:33:12.602" critical="yes"></status>
</test>
<test id="s1-s1-s2-t3" name="Test file_to_run">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210302 00:33:12.604" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210302 00:33:12.603" endtime="20210302 00:33:12.604"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210302 00:33:12.605" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210302 00:33:12.604" endtime="20210302 00:33:12.605"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210302 00:33:12.605" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210302 00:33:12.605" endtime="20210302 00:33:12.605"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210302 00:33:12.606" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210302 00:33:12.609" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210302 00:33:12.606" endtime="20210302 00:33:12.610"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210302 00:33:12.610" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210302 00:33:12.610" endtime="20210302 00:33:12.611"></status>
</kw>
<status status="PASS" starttime="20210302 00:33:12.605" endtime="20210302 00:33:12.611"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210302 00:33:12.612" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210302 00:33:12.611" endtime="20210302 00:33:12.612"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210302 00:33:13.220" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210302 00:33:13.221" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Tue, 02 Mar 2021 00:33:13 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"b9ebcd62bd0b75e64bf498322ff8fe93bd48ee6f"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-03-02T00:33:13.075804Z", "started": "2021-03-02T00:33:13.075804Z"} 
 </msg>
<status status="PASS" starttime="20210302 00:33:12.612" endtime="20210302 00:33:13.221"></status>
</kw>
<status status="PASS" starttime="20210302 00:33:12.611" endtime="20210302 00:33:13.221"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210302 00:33:13.222" level="INFO">http://127.0.0.1:8888</msg>
<status status="PASS" starttime="20210302 00:33:13.221" endtime="20210302 00:33:13.574"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210302 00:33:13.575" endtime="20210302 00:33:13.677"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210302 00:33:13.817" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-2.png"&gt;&lt;img src="puppeteer-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210302 00:33:13.678" endtime="20210302 00:33:13.818"></status>
</kw>
<status status="PASS" starttime="20210302 00:33:13.574" endtime="20210302 00:33:13.818"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210302 00:33:13.818" endtime="20210302 00:33:13.841"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 00:33:13.843" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210302 00:33:13.943" level="INFO">Process completed.</msg>
<msg timestamp="20210302 00:33:13.943" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210302 00:33:13.842" endtime="20210302 00:33:13.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210302 00:33:13.944" level="INFO">[I 2021-03-02 00:33:13.070 ServerApp] nbclassic | extension was successfully linked.
[W 2021-03-02 00:33:13.087 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-03-02 00:33:13.093 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-03-02 00:33:13.093 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-03-02 00:33:13.093 ServerApp] Jupyter Server 1.4.1 is running at:
[I 2021-03-02 00:33:13.093 ServerApp] http://localhost:8888/tree
[I 2021-03-02 00:33:13.093 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-03-02 00:33:13.093 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-03-02 00:33:13.376 ServerApp] 302 GET / (127.0.0.1) 0.38ms
[C 2021-03-02 00:33:13.842 ServerApp] received signal 15, stopping
[I 2021-03-02 00:33:13.843 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210302 00:33:13.944" endtime="20210302 00:33:13.944"></status>
</kw>
<status status="PASS" starttime="20210302 00:33:13.842" endtime="20210302 00:33:13.944"></status>
</kw>
<status status="PASS" starttime="20210302 00:33:12.602" endtime="20210302 00:33:13.944" critical="yes"></status>
</test>
<status status="PASS" starttime="20210302 00:33:05.745" endtime="20210302 00:33:13.945"></status>
</suite>
<status status="PASS" starttime="20210302 00:33:02.556" endtime="20210302 00:33:13.947"></status>
</suite>
<status status="PASS" starttime="20210302 00:33:02.538" endtime="20210302 00:33:13.949"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="Atest">Atest</stat>
<stat pass="4" fail="0" id="s1-s1" name="Jupyter Server">Atest.Jupyter Server</stat>
<stat pass="1" fail="0" id="s1-s1-s1" name="JupyterServerCLI">Atest.Jupyter Server.JupyterServerCLI</stat>
<stat pass="3" fail="0" id="s1-s1-s2" name="Nbclassic">Atest.Jupyter Server.Nbclassic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
