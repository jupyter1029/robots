<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.8.7 on linux)" generated="20210210 00:42:28.616" rpa="false">
<suite id="s1" name="Atest" source="/home/runner/work/robots/robots/atest">
<suite id="s1-s1" name="Jupyter Server" source="/home/runner/work/robots/robots/atest/jupyter_server">
<suite id="s1-s1-s1" name="JupyterServerCLI" source="/home/runner/work/robots/robots/atest/jupyter_server/JupyterServerCLI.robot">
<test id="s1-s1-s1-t1" name="Test &quot;port&quot; trait">
<kw name="Start Unauthenticated Jupyter Server" library="Variables">
<arguments>
<arg>--ServerApp.port=9999</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210210 00:42:28.717" level="INFO">${extra_args} = ['--ServerApp.token=', '']</msg>
<status status="PASS" starttime="20210210 00:42:28.716" endtime="20210210 00:42:28.717"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210210 00:42:28.717" level="INFO">Starting process:
jupyter-server --ServerApp.port=9999 --ServerApp.token= ""</msg>
<msg timestamp="20210210 00:42:28.721" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210210 00:42:28.717" endtime="20210210 00:42:28.721"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210210 00:42:28.722" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210210 00:42:28.721" endtime="20210210 00:42:28.722"></status>
</kw>
<status status="PASS" starttime="20210210 00:42:28.715" endtime="20210210 00:42:28.722"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<arguments>
<arg>http://127.0.0.1:9999</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210210 00:42:28.723" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:9999, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210210 00:42:28.723" endtime="20210210 00:42:28.724"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210210 00:42:31.737" level="INFO">GET Request : url=http://127.0.0.1:9999/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210210 00:42:31.737" level="INFO">GET Response : url=http://127.0.0.1:9999/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Wed, 10 Feb 2021 00:42:31 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"2524c24303e4125bc89c39a3fafe7110dcc070df"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-10T00:42:30.127286Z", "started": "2021-02-10T00:42:30.127286Z"} 
 </msg>
<status status="PASS" starttime="20210210 00:42:28.724" endtime="20210210 00:42:31.737"></status>
</kw>
<status status="PASS" starttime="20210210 00:42:28.723" endtime="20210210 00:42:31.738"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 00:42:31.739" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210210 00:42:31.839" level="INFO">Process completed.</msg>
<msg timestamp="20210210 00:42:31.839" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210210 00:42:31.738" endtime="20210210 00:42:31.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210210 00:42:31.840" level="INFO">[I 2021-02-10 00:42:29.525 ServerApp] Writing notebook server cookie secret to /home/runner/.local/share/jupyter/runtime/jupyter_cookie_secret
[I 2021-02-10 00:42:30.122 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-10 00:42:30.139 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-10 00:42:30.146 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-10 00:42:30.146 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-10 00:42:30.146 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-10 00:42:30.146 ServerApp] http://localhost:9999/
[I 2021-02-10 00:42:30.146 ServerApp]  or http://127.0.0.1:9999/
[I 2021-02-10 00:42:30.146 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-02-10 00:42:31.738 ServerApp] received signal 15, stopping
[I 2021-02-10 00:42:31.739 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210210 00:42:31.839" endtime="20210210 00:42:31.840"></status>
</kw>
<status status="PASS" starttime="20210210 00:42:31.738" endtime="20210210 00:42:31.840"></status>
</kw>
<status status="PASS" starttime="20210210 00:42:28.714" endtime="20210210 00:42:31.840" critical="yes"></status>
</test>
<status status="PASS" starttime="20210210 00:42:28.645" endtime="20210210 00:42:31.841"></status>
</suite>
<suite id="s1-s1-s2" name="Nbclassic" source="/home/runner/work/robots/robots/atest/jupyter_server/Nbclassic.robot">
<test id="s1-s1-s2-t1" name="Test Entrypoint">
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210210 00:42:31.971" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210210 00:42:31.971" endtime="20210210 00:42:31.971"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210210 00:42:31.972" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210210 00:42:31.974" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210210 00:42:31.971" endtime="20210210 00:42:31.975"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210210 00:42:31.975" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210210 00:42:31.975" endtime="20210210 00:42:31.976"></status>
</kw>
<status status="PASS" starttime="20210210 00:42:31.970" endtime="20210210 00:42:31.976"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210210 00:42:31.977" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210210 00:42:31.976" endtime="20210210 00:42:31.977"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210210 00:42:32.584" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210210 00:42:32.585" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Wed, 10 Feb 2021 00:42:32 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"a6d61c7d1b1bc0eea0b9a05c14387d7f3db3d4d5"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-10T00:42:32.502900Z", "started": "2021-02-10T00:42:32.502900Z"} 
 </msg>
<status status="PASS" starttime="20210210 00:42:31.978" endtime="20210210 00:42:32.585"></status>
</kw>
<status status="PASS" starttime="20210210 00:42:31.976" endtime="20210210 00:42:32.585"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 00:42:32.586" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210210 00:42:32.686" level="INFO">Process completed.</msg>
<msg timestamp="20210210 00:42:32.687" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210210 00:42:32.586" endtime="20210210 00:42:32.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210210 00:42:32.687" level="INFO">[I 2021-02-10 00:42:32.496 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-10 00:42:32.515 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-10 00:42:32.521 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-10 00:42:32.521 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-10 00:42:32.521 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-10 00:42:32.521 ServerApp] http://localhost:8888/tree
[I 2021-02-10 00:42:32.521 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-10 00:42:32.521 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-02-10 00:42:32.586 ServerApp] received signal 15, stopping
[I 2021-02-10 00:42:32.587 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210210 00:42:32.687" endtime="20210210 00:42:32.687"></status>
</kw>
<status status="PASS" starttime="20210210 00:42:32.585" endtime="20210210 00:42:32.687"></status>
</kw>
<status status="PASS" starttime="20210210 00:42:31.969" endtime="20210210 00:42:32.688" critical="yes"></status>
</test>
<test id="s1-s1-s2-t2" name="Test Landing Page">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210210 00:42:32.690" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210210 00:42:32.688" endtime="20210210 00:42:32.690"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210210 00:42:32.690" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210210 00:42:32.690" endtime="20210210 00:42:32.690"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210210 00:42:32.691" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210210 00:42:32.691" endtime="20210210 00:42:32.691"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210210 00:42:32.691" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210210 00:42:32.694" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210210 00:42:32.691" endtime="20210210 00:42:32.694"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210210 00:42:32.695" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210210 00:42:32.695" endtime="20210210 00:42:32.695"></status>
</kw>
<status status="PASS" starttime="20210210 00:42:32.690" endtime="20210210 00:42:32.695"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210210 00:42:32.696" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210210 00:42:32.696" endtime="20210210 00:42:32.697"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210210 00:42:33.304" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210210 00:42:33.304" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Wed, 10 Feb 2021 00:42:33 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"7fb8b9a0ee29627a9cbcf35d1ec8b2212abde356"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-10T00:42:33.226319Z", "started": "2021-02-10T00:42:33.226319Z"} 
 </msg>
<status status="PASS" starttime="20210210 00:42:32.697" endtime="20210210 00:42:33.305"></status>
</kw>
<status status="PASS" starttime="20210210 00:42:32.696" endtime="20210210 00:42:33.305"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210210 00:42:33.305" level="INFO">http://127.0.0.1:8888</msg>
<msg timestamp="20210210 00:42:37.749" level="INFO">0%|          | 0/108773488 [00:00&lt;?, ?it/s] 17%|#7        | 18995200/108773488 [00:00&lt;00:00, 189932709.23it/s] 40%|###9      | 43407360/108773488 [00:00&lt;00:00, 221793943.79it/s] 62%|######2   | 67553280/108773488 [00:00&lt;00:00, 230755784.77it/s] 84%|########3 | 91125760/108773488 [00:00&lt;00:00, 232707792.87it/s]100%|##########| 108773488/108773488 [00:00&lt;00:00, 229752443.07it/s]</msg>
<status status="PASS" starttime="20210210 00:42:33.305" endtime="20210210 00:42:37.749"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210210 00:42:37.750" endtime="20210210 00:42:37.882"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210210 00:42:38.019" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-1.png"&gt;&lt;img src="puppeteer-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210210 00:42:37.883" endtime="20210210 00:42:38.019"></status>
</kw>
<status status="PASS" starttime="20210210 00:42:37.750" endtime="20210210 00:42:38.019"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210210 00:42:38.020" endtime="20210210 00:42:38.046"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 00:42:38.047" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210210 00:42:38.148" level="INFO">Process completed.</msg>
<msg timestamp="20210210 00:42:38.148" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210210 00:42:38.047" endtime="20210210 00:42:38.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210210 00:42:38.149" level="INFO">[I 2021-02-10 00:42:33.219 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-10 00:42:33.240 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-10 00:42:33.247 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-10 00:42:33.247 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-10 00:42:33.247 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-10 00:42:33.247 ServerApp] http://localhost:8888/tree
[I 2021-02-10 00:42:33.247 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-10 00:42:33.247 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-02-10 00:42:37.507 ServerApp] 302 GET / (127.0.0.1) 0.48ms
[C 2021-02-10 00:42:38.047 ServerApp] received signal 15, stopping
[I 2021-02-10 00:42:38.047 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210210 00:42:38.148" endtime="20210210 00:42:38.149"></status>
</kw>
<status status="PASS" starttime="20210210 00:42:38.046" endtime="20210210 00:42:38.149"></status>
</kw>
<status status="PASS" starttime="20210210 00:42:32.688" endtime="20210210 00:42:38.149" critical="yes"></status>
</test>
<test id="s1-s1-s2-t3" name="Test file_to_run">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210210 00:42:38.152" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210210 00:42:38.150" endtime="20210210 00:42:38.152"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210210 00:42:38.152" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210210 00:42:38.152" endtime="20210210 00:42:38.152"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210210 00:42:38.153" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210210 00:42:38.153" endtime="20210210 00:42:38.153"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210210 00:42:38.154" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210210 00:42:38.158" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210210 00:42:38.153" endtime="20210210 00:42:38.158"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210210 00:42:38.159" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210210 00:42:38.159" endtime="20210210 00:42:38.159"></status>
</kw>
<status status="PASS" starttime="20210210 00:42:38.153" endtime="20210210 00:42:38.159"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210210 00:42:38.160" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210210 00:42:38.160" endtime="20210210 00:42:38.161"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210210 00:42:38.769" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210210 00:42:38.769" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Wed, 10 Feb 2021 00:42:38 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"15e2ec758370bb85c07bea0583e420cb0c2e116f"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-10T00:42:38.728949Z", "started": "2021-02-10T00:42:38.728949Z"} 
 </msg>
<status status="PASS" starttime="20210210 00:42:38.161" endtime="20210210 00:42:38.769"></status>
</kw>
<status status="PASS" starttime="20210210 00:42:38.160" endtime="20210210 00:42:38.769"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210210 00:42:38.770" level="INFO">http://127.0.0.1:8888</msg>
<status status="PASS" starttime="20210210 00:42:38.770" endtime="20210210 00:42:39.175"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210210 00:42:39.176" endtime="20210210 00:42:39.320"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210210 00:42:39.468" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-2.png"&gt;&lt;img src="puppeteer-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210210 00:42:39.320" endtime="20210210 00:42:39.469"></status>
</kw>
<status status="PASS" starttime="20210210 00:42:39.176" endtime="20210210 00:42:39.469"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210210 00:42:39.469" endtime="20210210 00:42:39.496"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 00:42:39.497" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210210 00:42:39.597" level="INFO">Process completed.</msg>
<msg timestamp="20210210 00:42:39.597" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210210 00:42:39.496" endtime="20210210 00:42:39.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210210 00:42:39.598" level="INFO">[I 2021-02-10 00:42:38.722 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-10 00:42:38.743 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-10 00:42:38.751 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-10 00:42:38.751 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-10 00:42:38.751 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-10 00:42:38.751 ServerApp] http://localhost:8888/tree
[I 2021-02-10 00:42:38.751 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-10 00:42:38.751 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-02-10 00:42:38.946 ServerApp] 302 GET / (127.0.0.1) 0.46ms
[C 2021-02-10 00:42:39.496 ServerApp] received signal 15, stopping
[I 2021-02-10 00:42:39.497 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210210 00:42:39.598" endtime="20210210 00:42:39.598"></status>
</kw>
<status status="PASS" starttime="20210210 00:42:39.496" endtime="20210210 00:42:39.598"></status>
</kw>
<status status="PASS" starttime="20210210 00:42:38.150" endtime="20210210 00:42:39.599" critical="yes"></status>
</test>
<status status="PASS" starttime="20210210 00:42:31.842" endtime="20210210 00:42:39.600"></status>
</suite>
<status status="PASS" starttime="20210210 00:42:28.643" endtime="20210210 00:42:39.603"></status>
</suite>
<status status="PASS" starttime="20210210 00:42:28.617" endtime="20210210 00:42:39.606"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="Atest">Atest</stat>
<stat pass="4" fail="0" id="s1-s1" name="Jupyter Server">Atest.Jupyter Server</stat>
<stat pass="1" fail="0" id="s1-s1-s1" name="JupyterServerCLI">Atest.Jupyter Server.JupyterServerCLI</stat>
<stat pass="3" fail="0" id="s1-s1-s2" name="Nbclassic">Atest.Jupyter Server.Nbclassic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
