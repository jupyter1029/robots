<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.8.7 on linux)" generated="20210209 22:34:55.889" rpa="false">
<suite id="s1" name="Atest" source="/home/runner/work/robots/robots/atest">
<suite id="s1-s1" name="Jupyter Server" source="/home/runner/work/robots/robots/atest/jupyter_server">
<suite id="s1-s1-s1" name="JupyterServerCLI" source="/home/runner/work/robots/robots/atest/jupyter_server/JupyterServerCLI.robot">
<test id="s1-s1-s1-t1" name="Test &quot;port&quot; trait">
<kw name="Start Unauthenticated Jupyter Server" library="Variables">
<arguments>
<arg>--ServerApp.port=9999</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210209 22:34:55.990" level="INFO">${extra_args} = ['--ServerApp.token=', '']</msg>
<status status="PASS" starttime="20210209 22:34:55.989" endtime="20210209 22:34:55.990"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210209 22:34:55.990" level="INFO">Starting process:
jupyter-server --ServerApp.port=9999 --ServerApp.token= ""</msg>
<msg timestamp="20210209 22:34:55.994" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210209 22:34:55.990" endtime="20210209 22:34:55.994"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210209 22:34:55.995" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210209 22:34:55.994" endtime="20210209 22:34:55.995"></status>
</kw>
<status status="PASS" starttime="20210209 22:34:55.988" endtime="20210209 22:34:55.995"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<arguments>
<arg>http://127.0.0.1:9999</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210209 22:34:55.996" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:9999, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210209 22:34:55.996" endtime="20210209 22:34:55.997"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210209 22:34:59.010" level="INFO">GET Request : url=http://127.0.0.1:9999/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210209 22:34:59.010" level="INFO">GET Response : url=http://127.0.0.1:9999/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Tue, 09 Feb 2021 22:34:59 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"83a4d289dd7f46cb2b5ed5eb60ca3286102a2143"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-09T22:34:57.449454Z", "started": "2021-02-09T22:34:57.449454Z"} 
 </msg>
<status status="PASS" starttime="20210209 22:34:55.997" endtime="20210209 22:34:59.010"></status>
</kw>
<status status="PASS" starttime="20210209 22:34:55.995" endtime="20210209 22:34:59.011"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 22:34:59.012" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210209 22:34:59.112" level="INFO">Process completed.</msg>
<msg timestamp="20210209 22:34:59.113" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210209 22:34:59.011" endtime="20210209 22:34:59.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210209 22:34:59.113" level="INFO">[I 2021-02-09 22:34:56.814 ServerApp] Writing notebook server cookie secret to /home/runner/.local/share/jupyter/runtime/jupyter_cookie_secret
[I 2021-02-09 22:34:57.443 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-09 22:34:57.463 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-09 22:34:57.471 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-09 22:34:57.471 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-09 22:34:57.471 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-09 22:34:57.471 ServerApp] http://localhost:9999/
[I 2021-02-09 22:34:57.471 ServerApp]  or http://127.0.0.1:9999/
[I 2021-02-09 22:34:57.471 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-02-09 22:34:59.011 ServerApp] received signal 15, stopping
[I 2021-02-09 22:34:59.012 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210209 22:34:59.113" endtime="20210209 22:34:59.114"></status>
</kw>
<status status="PASS" starttime="20210209 22:34:59.011" endtime="20210209 22:34:59.114"></status>
</kw>
<status status="PASS" starttime="20210209 22:34:55.987" endtime="20210209 22:34:59.114" critical="yes"></status>
</test>
<status status="PASS" starttime="20210209 22:34:55.913" endtime="20210209 22:34:59.115"></status>
</suite>
<suite id="s1-s1-s2" name="Nbclassic" source="/home/runner/work/robots/robots/atest/jupyter_server/Nbclassic.robot">
<test id="s1-s1-s2-t1" name="Test Entrypoint">
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210209 22:34:59.239" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210209 22:34:59.239" endtime="20210209 22:34:59.239"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210209 22:34:59.240" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210209 22:34:59.243" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210209 22:34:59.239" endtime="20210209 22:34:59.243"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210209 22:34:59.245" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210209 22:34:59.244" endtime="20210209 22:34:59.245"></status>
</kw>
<status status="PASS" starttime="20210209 22:34:59.238" endtime="20210209 22:34:59.245"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210209 22:34:59.246" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210209 22:34:59.245" endtime="20210209 22:34:59.247"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210209 22:34:59.855" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210209 22:34:59.855" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Tue, 09 Feb 2021 22:34:59 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"894a09ea390c815b4b16ecda7a521048a2e5efc1"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-09T22:34:59.805157Z", "started": "2021-02-09T22:34:59.805157Z"} 
 </msg>
<status status="PASS" starttime="20210209 22:34:59.247" endtime="20210209 22:34:59.855"></status>
</kw>
<status status="PASS" starttime="20210209 22:34:59.245" endtime="20210209 22:34:59.856"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 22:34:59.857" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210209 22:34:59.957" level="INFO">Process completed.</msg>
<msg timestamp="20210209 22:34:59.958" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210209 22:34:59.856" endtime="20210209 22:34:59.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210209 22:34:59.959" level="INFO">[I 2021-02-09 22:34:59.797 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-09 22:34:59.818 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-09 22:34:59.825 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-09 22:34:59.826 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-09 22:34:59.826 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-09 22:34:59.826 ServerApp] http://localhost:8888/tree
[I 2021-02-09 22:34:59.826 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-09 22:34:59.826 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-02-09 22:34:59.856 ServerApp] received signal 15, stopping
[I 2021-02-09 22:34:59.858 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210209 22:34:59.958" endtime="20210209 22:34:59.959"></status>
</kw>
<status status="PASS" starttime="20210209 22:34:59.856" endtime="20210209 22:34:59.959"></status>
</kw>
<status status="PASS" starttime="20210209 22:34:59.238" endtime="20210209 22:34:59.959" critical="yes"></status>
</test>
<test id="s1-s1-s2-t2" name="Test Landing Page">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210209 22:34:59.961" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210209 22:34:59.960" endtime="20210209 22:34:59.961"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210209 22:34:59.962" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210209 22:34:59.962" endtime="20210209 22:34:59.962"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210209 22:34:59.963" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210209 22:34:59.963" endtime="20210209 22:34:59.963"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210209 22:34:59.963" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210209 22:34:59.967" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210209 22:34:59.963" endtime="20210209 22:34:59.967"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210209 22:34:59.968" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210209 22:34:59.967" endtime="20210209 22:34:59.968"></status>
</kw>
<status status="PASS" starttime="20210209 22:34:59.962" endtime="20210209 22:34:59.968"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210209 22:34:59.969" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210209 22:34:59.969" endtime="20210209 22:34:59.970"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210209 22:35:00.578" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210209 22:35:00.579" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Tue, 09 Feb 2021 22:35:00 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"ec2f0b5417d7eb8abee6064632f79335995fa9f4"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-09T22:35:00.528307Z", "started": "2021-02-09T22:35:00.528307Z"} 
 </msg>
<status status="PASS" starttime="20210209 22:34:59.970" endtime="20210209 22:35:00.579"></status>
</kw>
<status status="PASS" starttime="20210209 22:34:59.968" endtime="20210209 22:35:00.579"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210209 22:35:00.580" level="INFO">http://127.0.0.1:8888</msg>
<msg timestamp="20210209 22:35:06.423" level="INFO">0%|          | 0/108773488 [00:00&lt;?, ?it/s]  4%|4         | 4843520/108773488 [00:00&lt;00:02, 48352819.41it/s]  9%|8         | 9687040/108773488 [00:00&lt;00:02, 41673176.05it/s] 26%|##6       | 28467200/108773488 [00:00&lt;00:00, 102848891.46it/s] 48%|####7     | 51937280/108773488 [00:00&lt;00:00, 152052326.99it/s] 70%|#######   | 76154880/108773488 [00:00&lt;00:00, 183416446.55it/s] 90%|########9 | 97638400/108773488 [00:00&lt;00:00, 193846560.07it/s]100%|##########| 108773488/108773488 [00:00&lt;00:00, 161217498.23it/s]</msg>
<status status="PASS" starttime="20210209 22:35:00.579" endtime="20210209 22:35:06.423"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210209 22:35:06.424" endtime="20210209 22:35:06.535"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210209 22:35:06.676" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-1.png"&gt;&lt;img src="puppeteer-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210209 22:35:06.535" endtime="20210209 22:35:06.677"></status>
</kw>
<status status="PASS" starttime="20210209 22:35:06.423" endtime="20210209 22:35:06.677"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210209 22:35:06.677" endtime="20210209 22:35:06.701"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 22:35:06.702" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210209 22:35:06.803" level="INFO">Process completed.</msg>
<msg timestamp="20210209 22:35:06.803" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210209 22:35:06.702" endtime="20210209 22:35:06.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210209 22:35:06.804" level="INFO">[I 2021-02-09 22:35:00.521 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-09 22:35:00.541 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-09 22:35:00.548 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-09 22:35:00.549 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-09 22:35:00.549 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-09 22:35:00.549 ServerApp] http://localhost:8888/tree
[I 2021-02-09 22:35:00.549 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-09 22:35:00.549 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-02-09 22:35:06.162 ServerApp] 302 GET / (127.0.0.1) 0.47ms
[C 2021-02-09 22:35:06.702 ServerApp] received signal 15, stopping
[I 2021-02-09 22:35:06.702 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210209 22:35:06.804" endtime="20210209 22:35:06.804"></status>
</kw>
<status status="PASS" starttime="20210209 22:35:06.702" endtime="20210209 22:35:06.805"></status>
</kw>
<status status="PASS" starttime="20210209 22:34:59.960" endtime="20210209 22:35:06.805" critical="yes"></status>
</test>
<test id="s1-s1-s2-t3" name="Test file_to_run">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210209 22:35:06.809" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210209 22:35:06.806" endtime="20210209 22:35:06.809"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210209 22:35:06.810" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210209 22:35:06.809" endtime="20210209 22:35:06.810"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210209 22:35:06.811" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210209 22:35:06.810" endtime="20210209 22:35:06.811"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210209 22:35:06.811" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210209 22:35:06.815" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210209 22:35:06.811" endtime="20210209 22:35:06.815"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210209 22:35:06.816" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210209 22:35:06.816" endtime="20210209 22:35:06.816"></status>
</kw>
<status status="PASS" starttime="20210209 22:35:06.810" endtime="20210209 22:35:06.816"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210209 22:35:06.817" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210209 22:35:06.817" endtime="20210209 22:35:06.818"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210209 22:35:07.427" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210209 22:35:07.427" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Tue, 09 Feb 2021 22:35:07 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"b2ce275b16fae3cd3ef3525f824c13488c913cf2"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-09T22:35:07.371228Z", "started": "2021-02-09T22:35:07.371228Z"} 
 </msg>
<status status="PASS" starttime="20210209 22:35:06.818" endtime="20210209 22:35:07.428"></status>
</kw>
<status status="PASS" starttime="20210209 22:35:06.817" endtime="20210209 22:35:07.428"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210209 22:35:07.428" level="INFO">http://127.0.0.1:8888</msg>
<status status="PASS" starttime="20210209 22:35:07.428" endtime="20210209 22:35:07.869"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210209 22:35:07.870" endtime="20210209 22:35:07.992"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210209 22:35:08.129" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-2.png"&gt;&lt;img src="puppeteer-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210209 22:35:07.992" endtime="20210209 22:35:08.130"></status>
</kw>
<status status="PASS" starttime="20210209 22:35:07.870" endtime="20210209 22:35:08.130"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210209 22:35:08.130" endtime="20210209 22:35:08.153"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 22:35:08.154" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210209 22:35:08.254" level="INFO">Process completed.</msg>
<msg timestamp="20210209 22:35:08.255" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210209 22:35:08.153" endtime="20210209 22:35:08.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210209 22:35:08.256" level="INFO">[I 2021-02-09 22:35:07.364 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-09 22:35:07.384 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-09 22:35:07.391 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-09 22:35:07.392 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-09 22:35:07.392 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-09 22:35:07.392 ServerApp] http://localhost:8888/tree
[I 2021-02-09 22:35:07.392 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-09 22:35:07.392 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-02-09 22:35:07.627 ServerApp] 302 GET / (127.0.0.1) 0.60ms
[C 2021-02-09 22:35:08.153 ServerApp] received signal 15, stopping
[I 2021-02-09 22:35:08.154 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210209 22:35:08.255" endtime="20210209 22:35:08.256"></status>
</kw>
<status status="PASS" starttime="20210209 22:35:08.153" endtime="20210209 22:35:08.256"></status>
</kw>
<status status="PASS" starttime="20210209 22:35:06.805" endtime="20210209 22:35:08.256" critical="yes"></status>
</test>
<status status="PASS" starttime="20210209 22:34:59.117" endtime="20210209 22:35:08.257"></status>
</suite>
<status status="PASS" starttime="20210209 22:34:55.912" endtime="20210209 22:35:08.259"></status>
</suite>
<status status="PASS" starttime="20210209 22:34:55.890" endtime="20210209 22:35:08.261"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="Atest">Atest</stat>
<stat pass="4" fail="0" id="s1-s1" name="Jupyter Server">Atest.Jupyter Server</stat>
<stat pass="1" fail="0" id="s1-s1-s1" name="JupyterServerCLI">Atest.Jupyter Server.JupyterServerCLI</stat>
<stat pass="3" fail="0" id="s1-s1-s2" name="Nbclassic">Atest.Jupyter Server.Nbclassic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
