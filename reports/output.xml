<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0 (Python 3.8.8 on linux)" generated="20210406 00:58:32.372" rpa="false" schemaversion="2">
<suite id="s1" name="Atest" source="/home/runner/work/robots/robots/atest">
<suite id="s1-s1" name="Jupyter Server" source="/home/runner/work/robots/robots/atest/jupyter_server">
<suite id="s1-s1-s1" name="JupyterServerCLI" source="/home/runner/work/robots/robots/atest/jupyter_server/JupyterServerCLI.robot">
<test id="s1-s1-s1-t1" name="Test &quot;port&quot; trait">
<kw name="Start Unauthenticated Jupyter Server" library="Variables">
<arg>--ServerApp.port=9999</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${extra_args}</var>
<arg>--ServerApp.token=</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210406 00:58:32.459" level="INFO">${extra_args} = ['--ServerApp.token=', '']</msg>
<status status="PASS" starttime="20210406 00:58:32.459" endtime="20210406 00:58:32.459"/>
</kw>
<kw name="Start Process" library="Process">
<var>${jupyter_server_process}</var>
<arg>jupyter-server</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210406 00:58:32.460" level="INFO">Starting process:
jupyter-server --ServerApp.port=9999 --ServerApp.token= ""</msg>
<msg timestamp="20210406 00:58:32.463" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210406 00:58:32.459" endtime="20210406 00:58:32.463"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${jupyter_server_process}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20210406 00:58:32.464" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210406 00:58:32.463" endtime="20210406 00:58:32.464"/>
</kw>
<status status="PASS" starttime="20210406 00:58:32.458" endtime="20210406 00:58:32.464"/>
</kw>
<kw name="Check Server Status" library="Variables">
<arg>http://127.0.0.1:9999</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210406 00:58:32.465" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:9999, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210406 00:58:32.465" endtime="20210406 00:58:32.466"/>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20210406 00:58:33.875" level="INFO">GET Request : url=http://127.0.0.1:9999/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210406 00:58:33.876" level="INFO">GET Response : url=http://127.0.0.1:9999/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Tue, 06 Apr 2021 00:58:33 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"7330a13401aafe324b31ba891c9565fc89f1657a"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-04-06T00:58:33.742911Z", "started": "2021-04-06T00:58:33.742911Z"} 
 </msg>
<status status="PASS" starttime="20210406 00:58:32.466" endtime="20210406 00:58:33.876"/>
</kw>
<status status="PASS" starttime="20210406 00:58:32.464" endtime="20210406 00:58:33.876"/>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="TEARDOWN">
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${jupyter_server_process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20210406 00:58:33.877" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210406 00:58:33.977" level="INFO">Process completed.</msg>
<msg timestamp="20210406 00:58:33.978" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210406 00:58:33.877" endtime="20210406 00:58:33.978"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210406 00:58:33.979" level="INFO">/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/jupyter_server/transutils.py:13: FutureWarning: The alias `_()` will be deprecated. Use `_i18n()` instead.
  warnings.warn(warn_msg, FutureWarning)
[I 2021-04-06 00:58:33.264 ServerApp] Writing notebook server cookie secret to /home/runner/.local/share/jupyter/runtime/jupyter_cookie_secret
[I 2021-04-06 00:58:33.738 ServerApp] nbclassic | extension was successfully linked.
[W 2021-04-06 00:58:33.750 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-04-06 00:58:33.755 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-04-06 00:58:33.756 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-04-06 00:58:33.756 ServerApp] Jupyter Server 1.5.1 is running at:
[I 2021-04-06 00:58:33.756 ServerApp] http://localhost:9999/
[I 2021-04-06 00:58:33.756 ServerApp]  or http://127.0.0.1:9999/
[I 2021-04-06 00:58:33.756 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-04-06 00:58:33.877 ServerApp] received signal 15, stopping
[I 2021-04-06 00:58:33.877 ServerApp] Shutting down 0 kernels
[I 2021-04-06 00:58:33.877 ServerApp] Shutting down 0 terminals</msg>
<status status="PASS" starttime="20210406 00:58:33.978" endtime="20210406 00:58:33.979"/>
</kw>
<status status="PASS" starttime="20210406 00:58:33.876" endtime="20210406 00:58:33.979"/>
</kw>
<status status="PASS" starttime="20210406 00:58:32.458" endtime="20210406 00:58:33.979"/>
</test>
<status status="PASS" starttime="20210406 00:58:32.394" endtime="20210406 00:58:33.980"/>
</suite>
<suite id="s1-s1-s2" name="Nbclassic" source="/home/runner/work/robots/robots/atest/jupyter_server/Nbclassic.robot">
<test id="s1-s1-s2-t1" name="Test Entrypoint">
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<var>${extra_args}</var>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210406 00:58:34.102" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210406 00:58:34.101" endtime="20210406 00:58:34.102"/>
</kw>
<kw name="Start Process" library="Process">
<var>${jupyter_server_process}</var>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210406 00:58:34.102" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210406 00:58:34.106" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210406 00:58:34.102" endtime="20210406 00:58:34.106"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${jupyter_server_process}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20210406 00:58:34.107" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210406 00:58:34.106" endtime="20210406 00:58:34.107"/>
</kw>
<status status="PASS" starttime="20210406 00:58:34.101" endtime="20210406 00:58:34.107"/>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210406 00:58:34.108" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210406 00:58:34.108" endtime="20210406 00:58:34.109"/>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20210406 00:58:34.717" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210406 00:58:34.717" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Tue, 06 Apr 2021 00:58:34 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"9fc49aedafbabae0e16f2e96ea88d1be4ae11c07"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-04-06T00:58:34.574346Z", "started": "2021-04-06T00:58:34.574346Z"} 
 </msg>
<status status="PASS" starttime="20210406 00:58:34.109" endtime="20210406 00:58:34.717"/>
</kw>
<status status="PASS" starttime="20210406 00:58:34.107" endtime="20210406 00:58:34.717"/>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="TEARDOWN">
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${jupyter_server_process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20210406 00:58:34.718" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210406 00:58:34.819" level="INFO">Process completed.</msg>
<msg timestamp="20210406 00:58:34.819" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210406 00:58:34.718" endtime="20210406 00:58:34.819"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210406 00:58:34.820" level="INFO">/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/jupyter_server/transutils.py:13: FutureWarning: The alias `_()` will be deprecated. Use `_i18n()` instead.
  warnings.warn(warn_msg, FutureWarning)
[I 2021-04-06 00:58:34.568 ServerApp] nbclassic | extension was successfully linked.
[W 2021-04-06 00:58:34.583 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-04-06 00:58:34.588 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-04-06 00:58:34.588 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-04-06 00:58:34.588 ServerApp] Jupyter Server 1.5.1 is running at:
[I 2021-04-06 00:58:34.588 ServerApp] http://localhost:8888/tree
[I 2021-04-06 00:58:34.588 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-04-06 00:58:34.588 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-04-06 00:58:34.718 ServerApp] received signal 15, stopping
[I 2021-04-06 00:58:34.718 ServerApp] Shutting down 0 kernels
[I 2021-04-06 00:58:34.719 ServerApp] Shutting down 0 terminals</msg>
<status status="PASS" starttime="20210406 00:58:34.819" endtime="20210406 00:58:34.820"/>
</kw>
<status status="PASS" starttime="20210406 00:58:34.717" endtime="20210406 00:58:34.820"/>
</kw>
<status status="PASS" starttime="20210406 00:58:34.100" endtime="20210406 00:58:34.821"/>
</test>
<test id="s1-s1-s2-t2" name="Test Landing Page">
<kw name="Get Variable Value" library="BuiltIn">
<var>${HEADLESS}</var>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20210406 00:58:34.823" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210406 00:58:34.821" endtime="20210406 00:58:34.823"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{options}</var>
<arg>headless=${HEADLESS}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210406 00:58:34.824" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210406 00:58:34.823" endtime="20210406 00:58:34.824"/>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<var>${extra_args}</var>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210406 00:58:34.825" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210406 00:58:34.824" endtime="20210406 00:58:34.825"/>
</kw>
<kw name="Start Process" library="Process">
<var>${jupyter_server_process}</var>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210406 00:58:34.825" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210406 00:58:34.829" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210406 00:58:34.825" endtime="20210406 00:58:34.829"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${jupyter_server_process}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20210406 00:58:34.830" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210406 00:58:34.829" endtime="20210406 00:58:34.830"/>
</kw>
<status status="PASS" starttime="20210406 00:58:34.824" endtime="20210406 00:58:34.830"/>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210406 00:58:34.831" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210406 00:58:34.831" endtime="20210406 00:58:34.832"/>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20210406 00:58:35.439" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210406 00:58:35.439" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Tue, 06 Apr 2021 00:58:35 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"a10d624f4e9e014e6c142f98936f07c9257bfcfb"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-04-06T00:58:35.306277Z", "started": "2021-04-06T00:58:35.306277Z"} 
 </msg>
<status status="PASS" starttime="20210406 00:58:34.832" endtime="20210406 00:58:35.440"/>
</kw>
<status status="PASS" starttime="20210406 00:58:34.830" endtime="20210406 00:58:35.440"/>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
<doc>Opens a new browser instance to the specific ``url``.</doc>
<msg timestamp="20210406 00:58:35.440" level="INFO">http://127.0.0.1:8888</msg>
<msg timestamp="20210406 00:58:38.560" level="INFO">0%|          | 0/108773488 [00:00&lt;?, ?it/s]  4%|3         | 3891200/108773488 [00:00&lt;00:02, 38396097.84it/s] 21%|##        | 22609920/108773488 [00:00&lt;00:00, 125438073.71it/s] 40%|####      | 43622400/108773488 [00:00&lt;00:00, 163854751.88it/s] 60%|#####9    | 64737280/108773488 [00:00&lt;00:00, 182452273.17it/s] 78%|#######8  | 85217280/108773488 [00:00&lt;00:00, 190492532.28it/s] 97%|#########6| 105041920/108773488 [00:00&lt;00:00, 193022463.39it/s]100%|##########| 108773488/108773488 [00:00&lt;00:00, 175750407.11it/s]</msg>
<status status="PASS" starttime="20210406 00:58:35.440" endtime="20210406 00:58:38.563"/>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<arg>id:ipython_notebook</arg>
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<status status="PASS" starttime="20210406 00:58:38.564" endtime="20210406 00:58:38.666"/>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210406 00:58:38.799" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-1.png"&gt;&lt;img src="puppeteer-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210406 00:58:38.666" endtime="20210406 00:58:38.799"/>
</kw>
<status status="PASS" starttime="20210406 00:58:38.564" endtime="20210406 00:58:38.799"/>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210406 00:58:38.800" endtime="20210406 00:58:38.826"/>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="TEARDOWN">
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${jupyter_server_process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20210406 00:58:38.827" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210406 00:58:38.928" level="INFO">Process completed.</msg>
<msg timestamp="20210406 00:58:38.928" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210406 00:58:38.827" endtime="20210406 00:58:38.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210406 00:58:38.929" level="INFO">/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/jupyter_server/transutils.py:13: FutureWarning: The alias `_()` will be deprecated. Use `_i18n()` instead.
  warnings.warn(warn_msg, FutureWarning)
[I 2021-04-06 00:58:35.300 ServerApp] nbclassic | extension was successfully linked.
[W 2021-04-06 00:58:35.315 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-04-06 00:58:35.320 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-04-06 00:58:35.320 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-04-06 00:58:35.320 ServerApp] Jupyter Server 1.5.1 is running at:
[I 2021-04-06 00:58:35.320 ServerApp] http://localhost:8888/tree
[I 2021-04-06 00:58:35.320 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-04-06 00:58:35.320 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-04-06 00:58:38.354 ServerApp] 302 GET / (127.0.0.1) 0.59ms
[C 2021-04-06 00:58:38.827 ServerApp] received signal 15, stopping
[I 2021-04-06 00:58:38.827 ServerApp] Shutting down 0 kernels
[I 2021-04-06 00:58:38.827 ServerApp] Shutting down 0 terminals</msg>
<status status="PASS" starttime="20210406 00:58:38.928" endtime="20210406 00:58:38.929"/>
</kw>
<status status="PASS" starttime="20210406 00:58:38.826" endtime="20210406 00:58:38.929"/>
</kw>
<status status="PASS" starttime="20210406 00:58:34.821" endtime="20210406 00:58:38.929"/>
</test>
<test id="s1-s1-s2-t3" name="Test file_to_run">
<kw name="Get Variable Value" library="BuiltIn">
<var>${HEADLESS}</var>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20210406 00:58:38.932" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210406 00:58:38.931" endtime="20210406 00:58:38.933"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{options}</var>
<arg>headless=${HEADLESS}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210406 00:58:38.933" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210406 00:58:38.933" endtime="20210406 00:58:38.933"/>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<var>${extra_args}</var>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210406 00:58:38.934" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210406 00:58:38.934" endtime="20210406 00:58:38.934"/>
</kw>
<kw name="Start Process" library="Process">
<var>${jupyter_server_process}</var>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210406 00:58:38.934" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210406 00:58:38.938" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210406 00:58:38.934" endtime="20210406 00:58:38.938"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${jupyter_server_process}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20210406 00:58:38.939" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210406 00:58:38.939" endtime="20210406 00:58:38.939"/>
</kw>
<status status="PASS" starttime="20210406 00:58:38.933" endtime="20210406 00:58:38.939"/>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210406 00:58:38.940" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210406 00:58:38.940" endtime="20210406 00:58:38.941"/>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20210406 00:58:39.549" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210406 00:58:39.549" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Tue, 06 Apr 2021 00:58:39 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"50c9b3b312bc301f465f778aef4a336c39c21802"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-04-06T00:58:39.417886Z", "started": "2021-04-06T00:58:39.417886Z"} 
 </msg>
<status status="PASS" starttime="20210406 00:58:38.941" endtime="20210406 00:58:39.549"/>
</kw>
<status status="PASS" starttime="20210406 00:58:38.940" endtime="20210406 00:58:39.549"/>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
<doc>Opens a new browser instance to the specific ``url``.</doc>
<msg timestamp="20210406 00:58:39.550" level="INFO">http://127.0.0.1:8888</msg>
<status status="PASS" starttime="20210406 00:58:39.549" endtime="20210406 00:58:39.933"/>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<arg>id:ipython_notebook</arg>
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<status status="PASS" starttime="20210406 00:58:39.934" endtime="20210406 00:58:40.038"/>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210406 00:58:40.166" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-2.png"&gt;&lt;img src="puppeteer-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210406 00:58:40.038" endtime="20210406 00:58:40.166"/>
</kw>
<status status="PASS" starttime="20210406 00:58:39.934" endtime="20210406 00:58:40.166"/>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210406 00:58:40.167" endtime="20210406 00:58:40.197"/>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="TEARDOWN">
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${jupyter_server_process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20210406 00:58:40.199" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210406 00:58:40.299" level="INFO">Process completed.</msg>
<msg timestamp="20210406 00:58:40.299" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210406 00:58:40.198" endtime="20210406 00:58:40.300"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210406 00:58:40.301" level="INFO">/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/jupyter_server/transutils.py:13: FutureWarning: The alias `_()` will be deprecated. Use `_i18n()` instead.
  warnings.warn(warn_msg, FutureWarning)
[I 2021-04-06 00:58:39.412 ServerApp] nbclassic | extension was successfully linked.
[W 2021-04-06 00:58:39.426 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-04-06 00:58:39.431 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-04-06 00:58:39.432 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-04-06 00:58:39.432 ServerApp] Jupyter Server 1.5.1 is running at:
[I 2021-04-06 00:58:39.432 ServerApp] http://localhost:8888/tree
[I 2021-04-06 00:58:39.432 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-04-06 00:58:39.432 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-04-06 00:58:39.726 ServerApp] 302 GET / (127.0.0.1) 0.49ms
[C 2021-04-06 00:58:40.198 ServerApp] received signal 15, stopping
[I 2021-04-06 00:58:40.199 ServerApp] Shutting down 0 kernels
[I 2021-04-06 00:58:40.199 ServerApp] Shutting down 0 terminals</msg>
<status status="PASS" starttime="20210406 00:58:40.300" endtime="20210406 00:58:40.301"/>
</kw>
<status status="PASS" starttime="20210406 00:58:40.198" endtime="20210406 00:58:40.301"/>
</kw>
<status status="PASS" starttime="20210406 00:58:38.930" endtime="20210406 00:58:40.301"/>
</test>
<status status="PASS" starttime="20210406 00:58:33.981" endtime="20210406 00:58:40.302"/>
</suite>
<status status="PASS" starttime="20210406 00:58:32.392" endtime="20210406 00:58:40.303"/>
</suite>
<status status="PASS" starttime="20210406 00:58:32.373" endtime="20210406 00:58:40.304"/>
</suite>
<statistics>
<total>
<stat pass="4" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" skip="0" id="s1" name="Atest">Atest</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1" name="Jupyter Server">Atest.Jupyter Server</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="JupyterServerCLI">Atest.Jupyter Server.JupyterServerCLI</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s2" name="Nbclassic">Atest.Jupyter Server.Nbclassic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
