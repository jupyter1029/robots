<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0 (Python 3.8.8 on linux)" generated="20210325 01:16:36.389" rpa="false" schemaversion="2">
<suite id="s1" name="Atest" source="/home/runner/work/robots/robots/atest">
<suite id="s1-s1" name="Jupyter Server" source="/home/runner/work/robots/robots/atest/jupyter_server">
<suite id="s1-s1-s1" name="JupyterServerCLI" source="/home/runner/work/robots/robots/atest/jupyter_server/JupyterServerCLI.robot">
<test id="s1-s1-s1-t1" name="Test &quot;port&quot; trait">
<kw name="Start Unauthenticated Jupyter Server" library="Variables">
<arg>--ServerApp.port=9999</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${extra_args}</var>
<arg>--ServerApp.token=</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210325 01:16:36.496" level="INFO">${extra_args} = ['--ServerApp.token=', '']</msg>
<status status="PASS" starttime="20210325 01:16:36.496" endtime="20210325 01:16:36.496"/>
</kw>
<kw name="Start Process" library="Process">
<var>${jupyter_server_process}</var>
<arg>jupyter-server</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210325 01:16:36.497" level="INFO">Starting process:
jupyter-server --ServerApp.port=9999 --ServerApp.token= ""</msg>
<msg timestamp="20210325 01:16:36.501" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210325 01:16:36.496" endtime="20210325 01:16:36.501"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${jupyter_server_process}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20210325 01:16:36.502" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210325 01:16:36.501" endtime="20210325 01:16:36.502"/>
</kw>
<status status="PASS" starttime="20210325 01:16:36.495" endtime="20210325 01:16:36.502"/>
</kw>
<kw name="Check Server Status" library="Variables">
<arg>http://127.0.0.1:9999</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210325 01:16:36.503" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:9999, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210325 01:16:36.503" endtime="20210325 01:16:36.504"/>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20210325 01:16:39.518" level="INFO">GET Request : url=http://127.0.0.1:9999/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210325 01:16:39.518" level="INFO">GET Response : url=http://127.0.0.1:9999/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Thu, 25 Mar 2021 01:16:39 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"cc1d0b79b852afce82d0d2f5bff630ea4d414c6a"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-03-25T01:16:37.937757Z", "started": "2021-03-25T01:16:37.937757Z"} 
 </msg>
<status status="PASS" starttime="20210325 01:16:36.504" endtime="20210325 01:16:39.519"/>
</kw>
<status status="PASS" starttime="20210325 01:16:36.502" endtime="20210325 01:16:39.519"/>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="TEARDOWN">
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${jupyter_server_process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20210325 01:16:39.520" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210325 01:16:39.721" level="INFO">Process completed.</msg>
<msg timestamp="20210325 01:16:39.721" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210325 01:16:39.520" endtime="20210325 01:16:39.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 01:16:39.723" level="INFO">/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/jupyter_server/transutils.py:13: FutureWarning: The alias `_()` will be deprecated. Use `_i18n()` instead.
  warnings.warn(warn_msg, FutureWarning)
[I 2021-03-25 01:16:37.264 ServerApp] Writing notebook server cookie secret to /home/runner/.local/share/jupyter/runtime/jupyter_cookie_secret
[I 2021-03-25 01:16:37.930 ServerApp] nbclassic | extension was successfully linked.
[W 2021-03-25 01:16:37.951 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-03-25 01:16:37.959 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-03-25 01:16:37.959 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-03-25 01:16:37.959 ServerApp] Jupyter Server 1.5.1 is running at:
[I 2021-03-25 01:16:37.959 ServerApp] http://localhost:9999/
[I 2021-03-25 01:16:37.959 ServerApp]  or http://127.0.0.1:9999/
[I 2021-03-25 01:16:37.959 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-03-25 01:16:39.520 ServerApp] received signal 15, stopping
[I 2021-03-25 01:16:39.520 ServerApp] Shutting down 0 kernels
[I 2021-03-25 01:16:39.521 ServerApp] Shutting down 0 terminals</msg>
<status status="PASS" starttime="20210325 01:16:39.722" endtime="20210325 01:16:39.723"/>
</kw>
<status status="PASS" starttime="20210325 01:16:39.519" endtime="20210325 01:16:39.724"/>
</kw>
<status status="PASS" starttime="20210325 01:16:36.495" endtime="20210325 01:16:39.724"/>
</test>
<status status="PASS" starttime="20210325 01:16:36.417" endtime="20210325 01:16:39.726"/>
</suite>
<suite id="s1-s1-s2" name="Nbclassic" source="/home/runner/work/robots/robots/atest/jupyter_server/Nbclassic.robot">
<test id="s1-s1-s2-t1" name="Test Entrypoint">
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<var>${extra_args}</var>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210325 01:16:39.861" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210325 01:16:39.861" endtime="20210325 01:16:39.861"/>
</kw>
<kw name="Start Process" library="Process">
<var>${jupyter_server_process}</var>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210325 01:16:39.862" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210325 01:16:39.866" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210325 01:16:39.862" endtime="20210325 01:16:39.866"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${jupyter_server_process}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20210325 01:16:39.868" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210325 01:16:39.867" endtime="20210325 01:16:39.868"/>
</kw>
<status status="PASS" starttime="20210325 01:16:39.860" endtime="20210325 01:16:39.868"/>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210325 01:16:39.869" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210325 01:16:39.869" endtime="20210325 01:16:39.870"/>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20210325 01:16:40.478" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210325 01:16:40.478" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Thu, 25 Mar 2021 01:16:40 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"495796f1314f76a482012577fe8e07baaaad4024"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-03-25T01:16:40.447653Z", "started": "2021-03-25T01:16:40.447653Z"} 
 </msg>
<status status="PASS" starttime="20210325 01:16:39.870" endtime="20210325 01:16:40.478"/>
</kw>
<status status="PASS" starttime="20210325 01:16:39.868" endtime="20210325 01:16:40.478"/>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="TEARDOWN">
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${jupyter_server_process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20210325 01:16:40.480" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210325 01:16:40.580" level="INFO">Process completed.</msg>
<msg timestamp="20210325 01:16:40.581" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210325 01:16:40.479" endtime="20210325 01:16:40.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 01:16:40.582" level="INFO">/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/jupyter_server/transutils.py:13: FutureWarning: The alias `_()` will be deprecated. Use `_i18n()` instead.
  warnings.warn(warn_msg, FutureWarning)
[I 2021-03-25 01:16:40.440 ServerApp] nbclassic | extension was successfully linked.
[W 2021-03-25 01:16:40.457 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-03-25 01:16:40.464 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-03-25 01:16:40.464 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-03-25 01:16:40.464 ServerApp] Jupyter Server 1.5.1 is running at:
[I 2021-03-25 01:16:40.464 ServerApp] http://localhost:8888/tree
[I 2021-03-25 01:16:40.464 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-03-25 01:16:40.464 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-03-25 01:16:40.479 ServerApp] received signal 15, stopping
[I 2021-03-25 01:16:40.480 ServerApp] Shutting down 0 kernels
[I 2021-03-25 01:16:40.480 ServerApp] Shutting down 0 terminals</msg>
<status status="PASS" starttime="20210325 01:16:40.581" endtime="20210325 01:16:40.583"/>
</kw>
<status status="PASS" starttime="20210325 01:16:40.479" endtime="20210325 01:16:40.583"/>
</kw>
<status status="PASS" starttime="20210325 01:16:39.860" endtime="20210325 01:16:40.583"/>
</test>
<test id="s1-s1-s2-t2" name="Test Landing Page">
<kw name="Get Variable Value" library="BuiltIn">
<var>${HEADLESS}</var>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20210325 01:16:40.588" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210325 01:16:40.585" endtime="20210325 01:16:40.588"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{options}</var>
<arg>headless=${HEADLESS}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210325 01:16:40.590" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210325 01:16:40.589" endtime="20210325 01:16:40.590"/>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<var>${extra_args}</var>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210325 01:16:40.591" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210325 01:16:40.591" endtime="20210325 01:16:40.591"/>
</kw>
<kw name="Start Process" library="Process">
<var>${jupyter_server_process}</var>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210325 01:16:40.592" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210325 01:16:40.595" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210325 01:16:40.591" endtime="20210325 01:16:40.595"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${jupyter_server_process}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20210325 01:16:40.597" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210325 01:16:40.596" endtime="20210325 01:16:40.597"/>
</kw>
<status status="PASS" starttime="20210325 01:16:40.590" endtime="20210325 01:16:40.597"/>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210325 01:16:40.598" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210325 01:16:40.597" endtime="20210325 01:16:40.599"/>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20210325 01:16:41.206" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210325 01:16:41.206" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Thu, 25 Mar 2021 01:16:41 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"22a8b273f459781b930ba536ae7a8a26c43a1681"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-03-25T01:16:41.178164Z", "started": "2021-03-25T01:16:41.178164Z"} 
 </msg>
<status status="PASS" starttime="20210325 01:16:40.599" endtime="20210325 01:16:41.207"/>
</kw>
<status status="PASS" starttime="20210325 01:16:40.597" endtime="20210325 01:16:41.207"/>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
<doc>Opens a new browser instance to the specific ``url``.</doc>
<msg timestamp="20210325 01:16:41.208" level="INFO">http://127.0.0.1:8888</msg>
<msg timestamp="20210325 01:16:44.857" level="INFO">0%|          | 0/108773488 [00:00&lt;?, ?it/s] 11%|#         | 11571200/108773488 [00:00&lt;00:00, 115636568.74it/s] 29%|##8       | 31232000/108773488 [00:00&lt;00:00, 163141355.98it/s] 46%|####6     | 50452480/108773488 [00:00&lt;00:00, 176394364.35it/s] 64%|######4   | 69652480/108773488 [00:00&lt;00:00, 182273120.07it/s] 82%|########1 | 88995840/108773488 [00:00&lt;00:00, 186289836.72it/s]100%|#########9| 108288000/108773488 [00:00&lt;00:00, 188256976.52it/s]100%|##########| 108773488/108773488 [00:00&lt;00:00, 180313372.66it/s]</msg>
<status status="PASS" starttime="20210325 01:16:41.207" endtime="20210325 01:16:44.858"/>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<arg>id:ipython_notebook</arg>
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<status status="PASS" starttime="20210325 01:16:44.861" endtime="20210325 01:16:44.985"/>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210325 01:16:45.142" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-1.png"&gt;&lt;img src="puppeteer-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210325 01:16:44.986" endtime="20210325 01:16:45.142"/>
</kw>
<status status="PASS" starttime="20210325 01:16:44.858" endtime="20210325 01:16:45.143"/>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210325 01:16:45.143" endtime="20210325 01:16:45.172"/>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="TEARDOWN">
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${jupyter_server_process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20210325 01:16:45.173" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210325 01:16:45.274" level="INFO">Process completed.</msg>
<msg timestamp="20210325 01:16:45.274" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210325 01:16:45.173" endtime="20210325 01:16:45.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 01:16:45.275" level="INFO">/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/jupyter_server/transutils.py:13: FutureWarning: The alias `_()` will be deprecated. Use `_i18n()` instead.
  warnings.warn(warn_msg, FutureWarning)
[I 2021-03-25 01:16:41.171 ServerApp] nbclassic | extension was successfully linked.
[W 2021-03-25 01:16:41.187 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-03-25 01:16:41.194 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-03-25 01:16:41.195 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-03-25 01:16:41.195 ServerApp] Jupyter Server 1.5.1 is running at:
[I 2021-03-25 01:16:41.195 ServerApp] http://localhost:8888/tree
[I 2021-03-25 01:16:41.195 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-03-25 01:16:41.195 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-03-25 01:16:44.612 ServerApp] 302 GET / (127.0.0.1) 0.50ms
[C 2021-03-25 01:16:45.173 ServerApp] received signal 15, stopping
[I 2021-03-25 01:16:45.173 ServerApp] Shutting down 0 kernels
[I 2021-03-25 01:16:45.174 ServerApp] Shutting down 0 terminals</msg>
<status status="PASS" starttime="20210325 01:16:45.274" endtime="20210325 01:16:45.275"/>
</kw>
<status status="PASS" starttime="20210325 01:16:45.172" endtime="20210325 01:16:45.275"/>
</kw>
<status status="PASS" starttime="20210325 01:16:40.584" endtime="20210325 01:16:45.275"/>
</test>
<test id="s1-s1-s2-t3" name="Test file_to_run">
<kw name="Get Variable Value" library="BuiltIn">
<var>${HEADLESS}</var>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20210325 01:16:45.279" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210325 01:16:45.277" endtime="20210325 01:16:45.279"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{options}</var>
<arg>headless=${HEADLESS}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210325 01:16:45.280" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210325 01:16:45.279" endtime="20210325 01:16:45.280"/>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<var>${extra_args}</var>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210325 01:16:45.280" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210325 01:16:45.280" endtime="20210325 01:16:45.280"/>
</kw>
<kw name="Start Process" library="Process">
<var>${jupyter_server_process}</var>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210325 01:16:45.281" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210325 01:16:45.285" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210325 01:16:45.281" endtime="20210325 01:16:45.285"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${jupyter_server_process}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20210325 01:16:45.287" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210325 01:16:45.286" endtime="20210325 01:16:45.287"/>
</kw>
<status status="PASS" starttime="20210325 01:16:45.280" endtime="20210325 01:16:45.287"/>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210325 01:16:45.288" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210325 01:16:45.287" endtime="20210325 01:16:45.289"/>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20210325 01:16:45.897" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210325 01:16:45.897" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Thu, 25 Mar 2021 01:16:45 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"a3c61cab6b19bc5174eded8ec0a4ecf0d4dd3193"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-03-25T01:16:45.871875Z", "started": "2021-03-25T01:16:45.871875Z"} 
 </msg>
<status status="PASS" starttime="20210325 01:16:45.289" endtime="20210325 01:16:45.897"/>
</kw>
<status status="PASS" starttime="20210325 01:16:45.287" endtime="20210325 01:16:45.898"/>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
<doc>Opens a new browser instance to the specific ``url``.</doc>
<msg timestamp="20210325 01:16:45.899" level="INFO">http://127.0.0.1:8888</msg>
<status status="PASS" starttime="20210325 01:16:45.898" endtime="20210325 01:16:46.333"/>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<arg>id:ipython_notebook</arg>
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<status status="PASS" starttime="20210325 01:16:46.334" endtime="20210325 01:16:46.435"/>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210325 01:16:46.591" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-2.png"&gt;&lt;img src="puppeteer-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210325 01:16:46.436" endtime="20210325 01:16:46.592"/>
</kw>
<status status="PASS" starttime="20210325 01:16:46.334" endtime="20210325 01:16:46.592"/>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210325 01:16:46.592" endtime="20210325 01:16:46.618"/>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="TEARDOWN">
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${jupyter_server_process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20210325 01:16:46.619" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210325 01:16:46.720" level="INFO">Process completed.</msg>
<msg timestamp="20210325 01:16:46.720" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210325 01:16:46.619" endtime="20210325 01:16:46.720"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 01:16:46.722" level="INFO">/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/jupyter_server/transutils.py:13: FutureWarning: The alias `_()` will be deprecated. Use `_i18n()` instead.
  warnings.warn(warn_msg, FutureWarning)
[I 2021-03-25 01:16:45.865 ServerApp] nbclassic | extension was successfully linked.
[W 2021-03-25 01:16:45.881 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-03-25 01:16:45.888 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-03-25 01:16:45.888 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-03-25 01:16:45.888 ServerApp] Jupyter Server 1.5.1 is running at:
[I 2021-03-25 01:16:45.888 ServerApp] http://localhost:8888/tree
[I 2021-03-25 01:16:45.888 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-03-25 01:16:45.888 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-03-25 01:16:46.076 ServerApp] 302 GET / (127.0.0.1) 0.52ms
[C 2021-03-25 01:16:46.619 ServerApp] received signal 15, stopping
[I 2021-03-25 01:16:46.619 ServerApp] Shutting down 0 kernels
[I 2021-03-25 01:16:46.620 ServerApp] Shutting down 0 terminals</msg>
<status status="PASS" starttime="20210325 01:16:46.721" endtime="20210325 01:16:46.722"/>
</kw>
<status status="PASS" starttime="20210325 01:16:46.618" endtime="20210325 01:16:46.723"/>
</kw>
<status status="PASS" starttime="20210325 01:16:45.276" endtime="20210325 01:16:46.723"/>
</test>
<status status="PASS" starttime="20210325 01:16:39.729" endtime="20210325 01:16:46.725"/>
</suite>
<status status="PASS" starttime="20210325 01:16:36.414" endtime="20210325 01:16:46.727"/>
</suite>
<status status="PASS" starttime="20210325 01:16:36.390" endtime="20210325 01:16:46.730"/>
</suite>
<statistics>
<total>
<stat pass="4" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" skip="0" id="s1" name="Atest">Atest</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1" name="Jupyter Server">Atest.Jupyter Server</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="JupyterServerCLI">Atest.Jupyter Server.JupyterServerCLI</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s2" name="Nbclassic">Atest.Jupyter Server.Nbclassic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
