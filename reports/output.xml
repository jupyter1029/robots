<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.8.7 on linux)" generated="20210304 00:39:07.293" rpa="false">
<suite id="s1" name="Atest" source="/home/runner/work/robots/robots/atest">
<suite id="s1-s1" name="Jupyter Server" source="/home/runner/work/robots/robots/atest/jupyter_server">
<suite id="s1-s1-s1" name="JupyterServerCLI" source="/home/runner/work/robots/robots/atest/jupyter_server/JupyterServerCLI.robot">
<test id="s1-s1-s1-t1" name="Test &quot;port&quot; trait">
<kw name="Start Unauthenticated Jupyter Server" library="Variables">
<arguments>
<arg>--ServerApp.port=9999</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210304 00:39:07.390" level="INFO">${extra_args} = ['--ServerApp.token=', '']</msg>
<status status="PASS" starttime="20210304 00:39:07.390" endtime="20210304 00:39:07.391"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210304 00:39:07.391" level="INFO">Starting process:
jupyter-server --ServerApp.port=9999 --ServerApp.token= ""</msg>
<msg timestamp="20210304 00:39:07.394" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210304 00:39:07.391" endtime="20210304 00:39:07.394"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210304 00:39:07.395" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210304 00:39:07.394" endtime="20210304 00:39:07.395"></status>
</kw>
<status status="PASS" starttime="20210304 00:39:07.389" endtime="20210304 00:39:07.395"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<arguments>
<arg>http://127.0.0.1:9999</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210304 00:39:07.396" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:9999, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210304 00:39:07.396" endtime="20210304 00:39:07.397"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210304 00:39:10.409" level="INFO">GET Request : url=http://127.0.0.1:9999/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210304 00:39:10.409" level="INFO">GET Response : url=http://127.0.0.1:9999/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Thu, 04 Mar 2021 00:39:10 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"a84a10ab436fcdb081276ec76d7958e452d6d2e6"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-03-04T00:39:09.157687Z", "started": "2021-03-04T00:39:09.157687Z"} 
 </msg>
<status status="PASS" starttime="20210304 00:39:07.397" endtime="20210304 00:39:10.409"></status>
</kw>
<status status="PASS" starttime="20210304 00:39:07.395" endtime="20210304 00:39:10.410"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210304 00:39:10.411" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210304 00:39:10.512" level="INFO">Process completed.</msg>
<msg timestamp="20210304 00:39:10.512" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210304 00:39:10.411" endtime="20210304 00:39:10.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210304 00:39:10.513" level="INFO">[I 2021-03-04 00:39:08.459 ServerApp] Writing notebook server cookie secret to /home/runner/.local/share/jupyter/runtime/jupyter_cookie_secret
[I 2021-03-04 00:39:09.151 ServerApp] nbclassic | extension was successfully linked.
[W 2021-03-04 00:39:09.171 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-03-04 00:39:09.179 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-03-04 00:39:09.179 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-03-04 00:39:09.179 ServerApp] Jupyter Server 1.4.1 is running at:
[I 2021-03-04 00:39:09.179 ServerApp] http://localhost:9999/
[I 2021-03-04 00:39:09.179 ServerApp]  or http://127.0.0.1:9999/
[I 2021-03-04 00:39:09.179 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-03-04 00:39:10.411 ServerApp] received signal 15, stopping
[I 2021-03-04 00:39:10.411 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210304 00:39:10.512" endtime="20210304 00:39:10.513"></status>
</kw>
<status status="PASS" starttime="20210304 00:39:10.410" endtime="20210304 00:39:10.513"></status>
</kw>
<status status="PASS" starttime="20210304 00:39:07.389" endtime="20210304 00:39:10.513" critical="yes"></status>
</test>
<status status="PASS" starttime="20210304 00:39:07.319" endtime="20210304 00:39:10.514"></status>
</suite>
<suite id="s1-s1-s2" name="Nbclassic" source="/home/runner/work/robots/robots/atest/jupyter_server/Nbclassic.robot">
<test id="s1-s1-s2-t1" name="Test Entrypoint">
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210304 00:39:10.640" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210304 00:39:10.639" endtime="20210304 00:39:10.640"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210304 00:39:10.640" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210304 00:39:10.643" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210304 00:39:10.640" endtime="20210304 00:39:10.643"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210304 00:39:10.644" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210304 00:39:10.643" endtime="20210304 00:39:10.644"></status>
</kw>
<status status="PASS" starttime="20210304 00:39:10.639" endtime="20210304 00:39:10.644"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210304 00:39:10.645" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210304 00:39:10.645" endtime="20210304 00:39:10.647"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210304 00:39:11.257" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210304 00:39:11.257" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Thu, 04 Mar 2021 00:39:11 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"b283a42a75109211e0e24fd604aac4f34ffb62d7"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-03-04T00:39:11.165567Z", "started": "2021-03-04T00:39:11.165567Z"} 
 </msg>
<status status="PASS" starttime="20210304 00:39:10.647" endtime="20210304 00:39:11.257"></status>
</kw>
<status status="PASS" starttime="20210304 00:39:10.644" endtime="20210304 00:39:11.257"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210304 00:39:11.258" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210304 00:39:11.359" level="INFO">Process completed.</msg>
<msg timestamp="20210304 00:39:11.359" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210304 00:39:11.258" endtime="20210304 00:39:11.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210304 00:39:11.360" level="INFO">[I 2021-03-04 00:39:11.159 ServerApp] nbclassic | extension was successfully linked.
[W 2021-03-04 00:39:11.179 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-03-04 00:39:11.185 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-03-04 00:39:11.185 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-03-04 00:39:11.186 ServerApp] Jupyter Server 1.4.1 is running at:
[I 2021-03-04 00:39:11.186 ServerApp] http://localhost:8888/tree
[I 2021-03-04 00:39:11.186 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-03-04 00:39:11.186 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-03-04 00:39:11.258 ServerApp] received signal 15, stopping
[I 2021-03-04 00:39:11.258 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210304 00:39:11.359" endtime="20210304 00:39:11.360"></status>
</kw>
<status status="PASS" starttime="20210304 00:39:11.258" endtime="20210304 00:39:11.360"></status>
</kw>
<status status="PASS" starttime="20210304 00:39:10.638" endtime="20210304 00:39:11.360" critical="yes"></status>
</test>
<test id="s1-s1-s2-t2" name="Test Landing Page">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210304 00:39:11.362" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210304 00:39:11.361" endtime="20210304 00:39:11.362"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210304 00:39:11.363" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210304 00:39:11.362" endtime="20210304 00:39:11.363"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210304 00:39:11.364" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210304 00:39:11.363" endtime="20210304 00:39:11.364"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210304 00:39:11.364" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210304 00:39:11.367" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210304 00:39:11.364" endtime="20210304 00:39:11.367"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210304 00:39:11.368" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210304 00:39:11.368" endtime="20210304 00:39:11.368"></status>
</kw>
<status status="PASS" starttime="20210304 00:39:11.363" endtime="20210304 00:39:11.368"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210304 00:39:11.369" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210304 00:39:11.369" endtime="20210304 00:39:11.370"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210304 00:39:11.982" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210304 00:39:11.982" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Thu, 04 Mar 2021 00:39:11 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"e128e55f4497870c085ab566bf1e3e97abaa70bd"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-03-04T00:39:11.882310Z", "started": "2021-03-04T00:39:11.882310Z"} 
 </msg>
<status status="PASS" starttime="20210304 00:39:11.370" endtime="20210304 00:39:11.983"></status>
</kw>
<status status="PASS" starttime="20210304 00:39:11.369" endtime="20210304 00:39:11.983"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210304 00:39:11.983" level="INFO">http://127.0.0.1:8888</msg>
<msg timestamp="20210304 00:39:16.114" level="INFO">0%|          | 0/108773488 [00:00&lt;?, ?it/s] 15%|#4        | 16209920/108773488 [00:00&lt;00:00, 162058398.55it/s] 35%|###5      | 38113280/108773488 [00:00&lt;00:00, 195535583.14it/s] 59%|#####8    | 63703040/108773488 [00:00&lt;00:00, 223080234.89it/s] 83%|########2 | 90040320/108773488 [00:00&lt;00:00, 238966661.84it/s]100%|##########| 108773488/108773488 [00:00&lt;00:00, 231543465.08it/s]</msg>
<status status="PASS" starttime="20210304 00:39:11.983" endtime="20210304 00:39:16.114"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210304 00:39:16.115" endtime="20210304 00:39:16.241"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210304 00:39:16.400" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-1.png"&gt;&lt;img src="puppeteer-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210304 00:39:16.242" endtime="20210304 00:39:16.400"></status>
</kw>
<status status="PASS" starttime="20210304 00:39:16.115" endtime="20210304 00:39:16.401"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210304 00:39:16.401" endtime="20210304 00:39:16.423"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210304 00:39:16.424" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210304 00:39:16.525" level="INFO">Process completed.</msg>
<msg timestamp="20210304 00:39:16.525" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210304 00:39:16.424" endtime="20210304 00:39:16.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210304 00:39:16.525" level="INFO">[I 2021-03-04 00:39:11.876 ServerApp] nbclassic | extension was successfully linked.
[W 2021-03-04 00:39:11.895 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-03-04 00:39:11.902 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-03-04 00:39:11.902 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-03-04 00:39:11.902 ServerApp] Jupyter Server 1.4.1 is running at:
[I 2021-03-04 00:39:11.902 ServerApp] http://localhost:8888/tree
[I 2021-03-04 00:39:11.902 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-03-04 00:39:11.902 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-03-04 00:39:15.877 ServerApp] 302 GET / (127.0.0.1) 0.74ms
[C 2021-03-04 00:39:16.424 ServerApp] received signal 15, stopping
[I 2021-03-04 00:39:16.425 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210304 00:39:16.525" endtime="20210304 00:39:16.526"></status>
</kw>
<status status="PASS" starttime="20210304 00:39:16.423" endtime="20210304 00:39:16.526"></status>
</kw>
<status status="PASS" starttime="20210304 00:39:11.360" endtime="20210304 00:39:16.526" critical="yes"></status>
</test>
<test id="s1-s1-s2-t3" name="Test file_to_run">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210304 00:39:16.528" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210304 00:39:16.527" endtime="20210304 00:39:16.528"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210304 00:39:16.529" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210304 00:39:16.528" endtime="20210304 00:39:16.529"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210304 00:39:16.530" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210304 00:39:16.530" endtime="20210304 00:39:16.530"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210304 00:39:16.531" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210304 00:39:16.534" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210304 00:39:16.530" endtime="20210304 00:39:16.534"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210304 00:39:16.535" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210304 00:39:16.534" endtime="20210304 00:39:16.535"></status>
</kw>
<status status="PASS" starttime="20210304 00:39:16.529" endtime="20210304 00:39:16.535"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210304 00:39:16.536" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210304 00:39:16.536" endtime="20210304 00:39:16.537"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210304 00:39:17.145" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210304 00:39:17.145" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Thu, 04 Mar 2021 00:39:17 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"7a7128ae9c1ae2d32935b967c8494f2ee0fa0090"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-03-04T00:39:17.048217Z", "started": "2021-03-04T00:39:17.048217Z"} 
 </msg>
<status status="PASS" starttime="20210304 00:39:16.537" endtime="20210304 00:39:17.145"></status>
</kw>
<status status="PASS" starttime="20210304 00:39:16.535" endtime="20210304 00:39:17.145"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210304 00:39:17.146" level="INFO">http://127.0.0.1:8888</msg>
<status status="PASS" starttime="20210304 00:39:17.145" endtime="20210304 00:39:17.528"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210304 00:39:17.529" endtime="20210304 00:39:17.642"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210304 00:39:17.783" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-2.png"&gt;&lt;img src="puppeteer-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210304 00:39:17.643" endtime="20210304 00:39:17.783"></status>
</kw>
<status status="PASS" starttime="20210304 00:39:17.528" endtime="20210304 00:39:17.783"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210304 00:39:17.783" endtime="20210304 00:39:17.812"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210304 00:39:17.813" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210304 00:39:17.913" level="INFO">Process completed.</msg>
<msg timestamp="20210304 00:39:17.914" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210304 00:39:17.813" endtime="20210304 00:39:17.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210304 00:39:17.914" level="INFO">[I 2021-03-04 00:39:17.041 ServerApp] nbclassic | extension was successfully linked.
[W 2021-03-04 00:39:17.061 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-03-04 00:39:17.068 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-03-04 00:39:17.068 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-03-04 00:39:17.068 ServerApp] Jupyter Server 1.4.1 is running at:
[I 2021-03-04 00:39:17.068 ServerApp] http://localhost:8888/tree
[I 2021-03-04 00:39:17.068 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-03-04 00:39:17.068 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-03-04 00:39:17.312 ServerApp] 302 GET / (127.0.0.1) 0.48ms
[C 2021-03-04 00:39:17.813 ServerApp] received signal 15, stopping
[I 2021-03-04 00:39:17.813 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210304 00:39:17.914" endtime="20210304 00:39:17.915"></status>
</kw>
<status status="PASS" starttime="20210304 00:39:17.812" endtime="20210304 00:39:17.915"></status>
</kw>
<status status="PASS" starttime="20210304 00:39:16.526" endtime="20210304 00:39:17.915" critical="yes"></status>
</test>
<status status="PASS" starttime="20210304 00:39:10.515" endtime="20210304 00:39:17.916"></status>
</suite>
<status status="PASS" starttime="20210304 00:39:07.317" endtime="20210304 00:39:17.920"></status>
</suite>
<status status="PASS" starttime="20210304 00:39:07.294" endtime="20210304 00:39:17.925"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="Atest">Atest</stat>
<stat pass="4" fail="0" id="s1-s1" name="Jupyter Server">Atest.Jupyter Server</stat>
<stat pass="1" fail="0" id="s1-s1-s1" name="JupyterServerCLI">Atest.Jupyter Server.JupyterServerCLI</stat>
<stat pass="3" fail="0" id="s1-s1-s2" name="Nbclassic">Atest.Jupyter Server.Nbclassic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
