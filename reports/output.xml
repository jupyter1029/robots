<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.8.7 on linux)" generated="20210225 00:38:54.338" rpa="false">
<suite id="s1" name="Atest" source="/home/runner/work/robots/robots/atest">
<suite id="s1-s1" name="Jupyter Server" source="/home/runner/work/robots/robots/atest/jupyter_server">
<suite id="s1-s1-s1" name="JupyterServerCLI" source="/home/runner/work/robots/robots/atest/jupyter_server/JupyterServerCLI.robot">
<test id="s1-s1-s1-t1" name="Test &quot;port&quot; trait">
<kw name="Start Unauthenticated Jupyter Server" library="Variables">
<arguments>
<arg>--ServerApp.port=9999</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210225 00:38:54.435" level="INFO">${extra_args} = ['--ServerApp.token=', '']</msg>
<status status="PASS" starttime="20210225 00:38:54.435" endtime="20210225 00:38:54.435"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210225 00:38:54.435" level="INFO">Starting process:
jupyter-server --ServerApp.port=9999 --ServerApp.token= ""</msg>
<msg timestamp="20210225 00:38:54.438" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210225 00:38:54.435" endtime="20210225 00:38:54.439"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210225 00:38:54.439" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210225 00:38:54.439" endtime="20210225 00:38:54.439"></status>
</kw>
<status status="PASS" starttime="20210225 00:38:54.433" endtime="20210225 00:38:54.440"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<arguments>
<arg>http://127.0.0.1:9999</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210225 00:38:54.441" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:9999, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210225 00:38:54.440" endtime="20210225 00:38:54.441"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210225 00:39:00.655" level="INFO">GET Request : url=http://127.0.0.1:9999/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210225 00:39:00.655" level="INFO">GET Response : url=http://127.0.0.1:9999/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Thu, 25 Feb 2021 00:39:00 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"f5414b64365952e61bb141f343a4fbe5901062f2"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-25T00:38:58.497069Z", "started": "2021-02-25T00:38:58.497069Z"} 
 </msg>
<status status="PASS" starttime="20210225 00:38:54.441" endtime="20210225 00:39:00.655"></status>
</kw>
<status status="PASS" starttime="20210225 00:38:54.440" endtime="20210225 00:39:00.656"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210225 00:39:00.657" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210225 00:39:00.757" level="INFO">Process completed.</msg>
<msg timestamp="20210225 00:39:00.758" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210225 00:39:00.657" endtime="20210225 00:39:00.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210225 00:39:00.758" level="INFO">[I 2021-02-25 00:38:56.999 ServerApp] Writing notebook server cookie secret to /home/runner/.local/share/jupyter/runtime/jupyter_cookie_secret
[I 2021-02-25 00:38:58.491 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-25 00:38:58.510 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-25 00:38:58.517 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-25 00:38:58.518 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-25 00:38:58.518 ServerApp] Jupyter Server 1.4.1 is running at:
[I 2021-02-25 00:38:58.518 ServerApp] http://localhost:9999/
[I 2021-02-25 00:38:58.518 ServerApp]  or http://127.0.0.1:9999/
[I 2021-02-25 00:38:58.518 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-02-25 00:39:00.656 ServerApp] received signal 15, stopping
[I 2021-02-25 00:39:00.657 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210225 00:39:00.758" endtime="20210225 00:39:00.758"></status>
</kw>
<status status="PASS" starttime="20210225 00:39:00.656" endtime="20210225 00:39:00.758"></status>
</kw>
<status status="PASS" starttime="20210225 00:38:54.433" endtime="20210225 00:39:00.759" critical="yes"></status>
</test>
<status status="PASS" starttime="20210225 00:38:54.364" endtime="20210225 00:39:00.759"></status>
</suite>
<suite id="s1-s1-s2" name="Nbclassic" source="/home/runner/work/robots/robots/atest/jupyter_server/Nbclassic.robot">
<test id="s1-s1-s2-t1" name="Test Entrypoint">
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210225 00:39:00.868" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210225 00:39:00.868" endtime="20210225 00:39:00.868"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210225 00:39:00.869" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210225 00:39:00.871" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210225 00:39:00.868" endtime="20210225 00:39:00.872"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210225 00:39:00.872" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210225 00:39:00.872" endtime="20210225 00:39:00.873"></status>
</kw>
<status status="PASS" starttime="20210225 00:39:00.868" endtime="20210225 00:39:00.873"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210225 00:39:00.874" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210225 00:39:00.873" endtime="20210225 00:39:00.875"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210225 00:39:01.482" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210225 00:39:01.483" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Thu, 25 Feb 2021 00:39:01 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"0ed309b4420f87927cac5b4b41ce59b1e3488f0f"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-25T00:39:01.422173Z", "started": "2021-02-25T00:39:01.422173Z"} 
 </msg>
<status status="PASS" starttime="20210225 00:39:00.875" endtime="20210225 00:39:01.483"></status>
</kw>
<status status="PASS" starttime="20210225 00:39:00.873" endtime="20210225 00:39:01.483"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210225 00:39:01.484" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210225 00:39:01.585" level="INFO">Process completed.</msg>
<msg timestamp="20210225 00:39:01.585" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210225 00:39:01.484" endtime="20210225 00:39:01.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210225 00:39:01.586" level="INFO">[I 2021-02-25 00:39:01.416 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-25 00:39:01.435 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-25 00:39:01.442 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-25 00:39:01.442 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-25 00:39:01.442 ServerApp] Jupyter Server 1.4.1 is running at:
[I 2021-02-25 00:39:01.442 ServerApp] http://localhost:8888/tree
[I 2021-02-25 00:39:01.442 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-25 00:39:01.442 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-02-25 00:39:01.484 ServerApp] received signal 15, stopping
[I 2021-02-25 00:39:01.484 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210225 00:39:01.585" endtime="20210225 00:39:01.586"></status>
</kw>
<status status="PASS" starttime="20210225 00:39:01.483" endtime="20210225 00:39:01.586"></status>
</kw>
<status status="PASS" starttime="20210225 00:39:00.867" endtime="20210225 00:39:01.586" critical="yes"></status>
</test>
<test id="s1-s1-s2-t2" name="Test Landing Page">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210225 00:39:01.588" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210225 00:39:01.587" endtime="20210225 00:39:01.588"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210225 00:39:01.589" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210225 00:39:01.588" endtime="20210225 00:39:01.589"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210225 00:39:01.590" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210225 00:39:01.589" endtime="20210225 00:39:01.590"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210225 00:39:01.590" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210225 00:39:01.593" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210225 00:39:01.590" endtime="20210225 00:39:01.593"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210225 00:39:01.594" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210225 00:39:01.594" endtime="20210225 00:39:01.594"></status>
</kw>
<status status="PASS" starttime="20210225 00:39:01.589" endtime="20210225 00:39:01.595"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210225 00:39:01.596" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210225 00:39:01.595" endtime="20210225 00:39:01.596"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210225 00:39:02.203" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210225 00:39:02.204" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Thu, 25 Feb 2021 00:39:02 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"3cee81173c7a4d943badb4b7180c80687b981b98"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-25T00:39:02.109209Z", "started": "2021-02-25T00:39:02.109209Z"} 
 </msg>
<status status="PASS" starttime="20210225 00:39:01.596" endtime="20210225 00:39:02.204"></status>
</kw>
<status status="PASS" starttime="20210225 00:39:01.595" endtime="20210225 00:39:02.204"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210225 00:39:02.204" level="INFO">http://127.0.0.1:8888</msg>
<msg timestamp="20210225 00:39:12.477" level="INFO">0%|          | 0/108773488 [00:00&lt;?, ?it/s]  1%|          | 921600/108773488 [00:00&lt;00:11, 9143416.04it/s]  2%|2         | 2293760/108773488 [00:00&lt;00:09, 11821781.66it/s]  4%|3         | 4341760/108773488 [00:00&lt;00:06, 15763342.31it/s]  7%|7         | 7823360/108773488 [00:00&lt;00:04, 23209876.72it/s] 13%|#2        | 13803520/108773488 [00:00&lt;00:02, 36369664.29it/s] 22%|##1       | 23470080/108773488 [00:00&lt;00:01, 56335220.25it/s] 37%|###7      | 40683520/108773488 [00:00&lt;00:00, 93891526.73it/s] 60%|#####9    | 65116160/108773488 [00:00&lt;00:00, 141530877.24it/s] 84%|########4 | 91432960/108773488 [00:00&lt;00:00, 179407651.37it/s]100%|##########| 108773488/108773488 [00:00&lt;00:00, 112306854.32it/s]</msg>
<status status="PASS" starttime="20210225 00:39:02.204" endtime="20210225 00:39:12.477"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210225 00:39:12.478" endtime="20210225 00:39:12.563"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210225 00:39:12.673" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-1.png"&gt;&lt;img src="puppeteer-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210225 00:39:12.563" endtime="20210225 00:39:12.673"></status>
</kw>
<status status="PASS" starttime="20210225 00:39:12.478" endtime="20210225 00:39:12.674"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210225 00:39:12.674" endtime="20210225 00:39:12.701"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210225 00:39:12.702" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210225 00:39:12.803" level="INFO">Process completed.</msg>
<msg timestamp="20210225 00:39:12.803" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210225 00:39:12.702" endtime="20210225 00:39:12.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210225 00:39:12.804" level="INFO">[I 2021-02-25 00:39:02.103 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-25 00:39:02.121 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-25 00:39:02.128 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-25 00:39:02.128 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-25 00:39:02.128 ServerApp] Jupyter Server 1.4.1 is running at:
[I 2021-02-25 00:39:02.128 ServerApp] http://localhost:8888/tree
[I 2021-02-25 00:39:02.128 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-25 00:39:02.128 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-02-25 00:39:12.158 ServerApp] 302 GET / (127.0.0.1) 0.53ms
[C 2021-02-25 00:39:12.702 ServerApp] received signal 15, stopping
[I 2021-02-25 00:39:12.702 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210225 00:39:12.803" endtime="20210225 00:39:12.804"></status>
</kw>
<status status="PASS" starttime="20210225 00:39:12.701" endtime="20210225 00:39:12.804"></status>
</kw>
<status status="PASS" starttime="20210225 00:39:01.586" endtime="20210225 00:39:12.804" critical="yes"></status>
</test>
<test id="s1-s1-s2-t3" name="Test file_to_run">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210225 00:39:12.806" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210225 00:39:12.805" endtime="20210225 00:39:12.806"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210225 00:39:12.807" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210225 00:39:12.806" endtime="20210225 00:39:12.807"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210225 00:39:12.807" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210225 00:39:12.807" endtime="20210225 00:39:12.807"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210225 00:39:12.808" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210225 00:39:12.811" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210225 00:39:12.808" endtime="20210225 00:39:12.811"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210225 00:39:12.812" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210225 00:39:12.811" endtime="20210225 00:39:12.812"></status>
</kw>
<status status="PASS" starttime="20210225 00:39:12.807" endtime="20210225 00:39:12.812"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210225 00:39:12.813" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210225 00:39:12.813" endtime="20210225 00:39:12.814"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210225 00:39:13.421" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210225 00:39:13.421" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Thu, 25 Feb 2021 00:39:13 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"eea2869dc003d9cf2f5871af3471da3a127e2d6a"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-25T00:39:13.332421Z", "started": "2021-02-25T00:39:13.332421Z"} 
 </msg>
<status status="PASS" starttime="20210225 00:39:12.814" endtime="20210225 00:39:13.422"></status>
</kw>
<status status="PASS" starttime="20210225 00:39:12.813" endtime="20210225 00:39:13.422"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210225 00:39:13.423" level="INFO">http://127.0.0.1:8888</msg>
<status status="PASS" starttime="20210225 00:39:13.422" endtime="20210225 00:39:13.848"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210225 00:39:13.849" endtime="20210225 00:39:13.962"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210225 00:39:14.110" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-2.png"&gt;&lt;img src="puppeteer-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210225 00:39:13.963" endtime="20210225 00:39:14.110"></status>
</kw>
<status status="PASS" starttime="20210225 00:39:13.849" endtime="20210225 00:39:14.110"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210225 00:39:14.110" endtime="20210225 00:39:14.133"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210225 00:39:14.134" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210225 00:39:14.234" level="INFO">Process completed.</msg>
<msg timestamp="20210225 00:39:14.235" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210225 00:39:14.134" endtime="20210225 00:39:14.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210225 00:39:14.235" level="INFO">[I 2021-02-25 00:39:13.325 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-25 00:39:13.345 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-25 00:39:13.351 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-25 00:39:13.352 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-25 00:39:13.352 ServerApp] Jupyter Server 1.4.1 is running at:
[I 2021-02-25 00:39:13.352 ServerApp] http://localhost:8888/tree
[I 2021-02-25 00:39:13.352 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-25 00:39:13.352 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-02-25 00:39:13.622 ServerApp] 302 GET / (127.0.0.1) 0.49ms
[C 2021-02-25 00:39:14.134 ServerApp] received signal 15, stopping
[I 2021-02-25 00:39:14.134 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210225 00:39:14.235" endtime="20210225 00:39:14.235"></status>
</kw>
<status status="PASS" starttime="20210225 00:39:14.133" endtime="20210225 00:39:14.236"></status>
</kw>
<status status="PASS" starttime="20210225 00:39:12.804" endtime="20210225 00:39:14.236" critical="yes"></status>
</test>
<status status="PASS" starttime="20210225 00:39:00.761" endtime="20210225 00:39:14.237"></status>
</suite>
<status status="PASS" starttime="20210225 00:38:54.362" endtime="20210225 00:39:14.239"></status>
</suite>
<status status="PASS" starttime="20210225 00:38:54.339" endtime="20210225 00:39:14.241"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="Atest">Atest</stat>
<stat pass="4" fail="0" id="s1-s1" name="Jupyter Server">Atest.Jupyter Server</stat>
<stat pass="1" fail="0" id="s1-s1-s1" name="JupyterServerCLI">Atest.Jupyter Server.JupyterServerCLI</stat>
<stat pass="3" fail="0" id="s1-s1-s2" name="Nbclassic">Atest.Jupyter Server.Nbclassic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
