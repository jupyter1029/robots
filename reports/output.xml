<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.8.8 on linux)" generated="20210306 00:39:40.091" rpa="false">
<suite id="s1" name="Atest" source="/home/runner/work/robots/robots/atest">
<suite id="s1-s1" name="Jupyter Server" source="/home/runner/work/robots/robots/atest/jupyter_server">
<suite id="s1-s1-s1" name="JupyterServerCLI" source="/home/runner/work/robots/robots/atest/jupyter_server/JupyterServerCLI.robot">
<test id="s1-s1-s1-t1" name="Test &quot;port&quot; trait">
<kw name="Start Unauthenticated Jupyter Server" library="Variables">
<arguments>
<arg>--ServerApp.port=9999</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210306 00:39:40.202" level="INFO">${extra_args} = ['--ServerApp.token=', '']</msg>
<status status="PASS" starttime="20210306 00:39:40.202" endtime="20210306 00:39:40.202"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210306 00:39:40.203" level="INFO">Starting process:
jupyter-server --ServerApp.port=9999 --ServerApp.token= ""</msg>
<msg timestamp="20210306 00:39:40.206" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210306 00:39:40.202" endtime="20210306 00:39:40.206"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210306 00:39:40.207" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210306 00:39:40.206" endtime="20210306 00:39:40.207"></status>
</kw>
<status status="PASS" starttime="20210306 00:39:40.200" endtime="20210306 00:39:40.207"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<arguments>
<arg>http://127.0.0.1:9999</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210306 00:39:40.208" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:9999, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210306 00:39:40.208" endtime="20210306 00:39:40.209"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210306 00:39:41.618" level="INFO">GET Request : url=http://127.0.0.1:9999/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210306 00:39:41.618" level="INFO">GET Response : url=http://127.0.0.1:9999/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Sat, 06 Mar 2021 00:39:41 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"83756bfd07d62a79c5493dca42b398d6aa2840c6"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-03-06T00:39:41.510675Z", "started": "2021-03-06T00:39:41.510675Z"} 
 </msg>
<status status="PASS" starttime="20210306 00:39:40.209" endtime="20210306 00:39:41.619"></status>
</kw>
<status status="PASS" starttime="20210306 00:39:40.207" endtime="20210306 00:39:41.619"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210306 00:39:41.620" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210306 00:39:41.720" level="INFO">Process completed.</msg>
<msg timestamp="20210306 00:39:41.721" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210306 00:39:41.620" endtime="20210306 00:39:41.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210306 00:39:41.721" level="INFO">[I 2021-03-06 00:39:40.938 ServerApp] Writing notebook server cookie secret to /home/runner/.local/share/jupyter/runtime/jupyter_cookie_secret
[I 2021-03-06 00:39:41.504 ServerApp] nbclassic | extension was successfully linked.
[W 2021-03-06 00:39:41.526 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-03-06 00:39:41.535 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-03-06 00:39:41.535 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-03-06 00:39:41.535 ServerApp] Jupyter Server 1.4.1 is running at:
[I 2021-03-06 00:39:41.535 ServerApp] http://localhost:9999/
[I 2021-03-06 00:39:41.535 ServerApp]  or http://127.0.0.1:9999/
[I 2021-03-06 00:39:41.535 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-03-06 00:39:41.620 ServerApp] received signal 15, stopping
[I 2021-03-06 00:39:41.620 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210306 00:39:41.721" endtime="20210306 00:39:41.722"></status>
</kw>
<status status="PASS" starttime="20210306 00:39:41.619" endtime="20210306 00:39:41.722"></status>
</kw>
<status status="PASS" starttime="20210306 00:39:40.200" endtime="20210306 00:39:41.722" critical="yes"></status>
</test>
<status status="PASS" starttime="20210306 00:39:40.119" endtime="20210306 00:39:41.723"></status>
</suite>
<suite id="s1-s1-s2" name="Nbclassic" source="/home/runner/work/robots/robots/atest/jupyter_server/Nbclassic.robot">
<test id="s1-s1-s2-t1" name="Test Entrypoint">
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210306 00:39:41.860" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210306 00:39:41.860" endtime="20210306 00:39:41.860"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210306 00:39:41.861" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210306 00:39:41.864" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210306 00:39:41.860" endtime="20210306 00:39:41.864"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210306 00:39:41.865" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210306 00:39:41.864" endtime="20210306 00:39:41.865"></status>
</kw>
<status status="PASS" starttime="20210306 00:39:41.859" endtime="20210306 00:39:41.865"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210306 00:39:41.867" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210306 00:39:41.866" endtime="20210306 00:39:41.869"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210306 00:39:42.483" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210306 00:39:42.483" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Sat, 06 Mar 2021 00:39:42 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"df3574c0ac314e1b5740413916b92b35314db46f"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-03-06T00:39:42.450403Z", "started": "2021-03-06T00:39:42.450403Z"} 
 </msg>
<status status="PASS" starttime="20210306 00:39:41.869" endtime="20210306 00:39:42.483"></status>
</kw>
<status status="PASS" starttime="20210306 00:39:41.865" endtime="20210306 00:39:42.484"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210306 00:39:42.485" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210306 00:39:42.585" level="INFO">Process completed.</msg>
<msg timestamp="20210306 00:39:42.585" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210306 00:39:42.484" endtime="20210306 00:39:42.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210306 00:39:42.586" level="INFO">[I 2021-03-06 00:39:42.441 ServerApp] nbclassic | extension was successfully linked.
[W 2021-03-06 00:39:42.466 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-03-06 00:39:42.475 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-03-06 00:39:42.475 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-03-06 00:39:42.476 ServerApp] Jupyter Server 1.4.1 is running at:
[I 2021-03-06 00:39:42.476 ServerApp] http://localhost:8888/tree
[I 2021-03-06 00:39:42.476 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-03-06 00:39:42.476 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-03-06 00:39:42.484 ServerApp] received signal 15, stopping
[I 2021-03-06 00:39:42.484 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210306 00:39:42.586" endtime="20210306 00:39:42.586"></status>
</kw>
<status status="PASS" starttime="20210306 00:39:42.484" endtime="20210306 00:39:42.586"></status>
</kw>
<status status="PASS" starttime="20210306 00:39:41.859" endtime="20210306 00:39:42.586" critical="yes"></status>
</test>
<test id="s1-s1-s2-t2" name="Test Landing Page">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210306 00:39:42.589" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210306 00:39:42.587" endtime="20210306 00:39:42.589"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210306 00:39:42.590" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210306 00:39:42.589" endtime="20210306 00:39:42.590"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210306 00:39:42.591" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210306 00:39:42.590" endtime="20210306 00:39:42.591"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210306 00:39:42.591" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210306 00:39:42.594" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210306 00:39:42.591" endtime="20210306 00:39:42.594"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210306 00:39:42.595" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210306 00:39:42.595" endtime="20210306 00:39:42.595"></status>
</kw>
<status status="PASS" starttime="20210306 00:39:42.590" endtime="20210306 00:39:42.596"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210306 00:39:42.597" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210306 00:39:42.596" endtime="20210306 00:39:42.597"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210306 00:39:43.205" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210306 00:39:43.206" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Sat, 06 Mar 2021 00:39:43 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"c0a043e8ba8ec7871ee93d2e585707634a258641"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-03-06T00:39:43.170077Z", "started": "2021-03-06T00:39:43.170077Z"} 
 </msg>
<status status="PASS" starttime="20210306 00:39:42.598" endtime="20210306 00:39:43.206"></status>
</kw>
<status status="PASS" starttime="20210306 00:39:42.596" endtime="20210306 00:39:43.206"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210306 00:39:43.207" level="INFO">http://127.0.0.1:8888</msg>
<msg timestamp="20210306 00:39:47.382" level="INFO">0%|          | 0/108773488 [00:00&lt;?, ?it/s] 14%|#4        | 15237120/108773488 [00:00&lt;00:00, 152322318.03it/s] 39%|###8      | 42137600/108773488 [00:00&lt;00:00, 220944240.92it/s] 64%|######4   | 70010880/108773488 [00:00&lt;00:00, 247294015.82it/s] 91%|#########1| 99082240/108773488 [00:00&lt;00:00, 264409662.55it/s]100%|##########| 108773488/108773488 [00:00&lt;00:00, 250637583.03it/s]</msg>
<status status="PASS" starttime="20210306 00:39:43.206" endtime="20210306 00:39:47.382"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210306 00:39:47.383" endtime="20210306 00:39:47.502"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210306 00:39:47.638" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-1.png"&gt;&lt;img src="puppeteer-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210306 00:39:47.502" endtime="20210306 00:39:47.638"></status>
</kw>
<status status="PASS" starttime="20210306 00:39:47.383" endtime="20210306 00:39:47.638"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210306 00:39:47.638" endtime="20210306 00:39:47.659"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210306 00:39:47.660" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210306 00:39:47.760" level="INFO">Process completed.</msg>
<msg timestamp="20210306 00:39:47.761" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210306 00:39:47.660" endtime="20210306 00:39:47.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210306 00:39:47.761" level="INFO">[I 2021-03-06 00:39:43.163 ServerApp] nbclassic | extension was successfully linked.
[W 2021-03-06 00:39:43.189 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-03-06 00:39:43.196 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-03-06 00:39:43.196 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-03-06 00:39:43.196 ServerApp] Jupyter Server 1.4.1 is running at:
[I 2021-03-06 00:39:43.196 ServerApp] http://localhost:8888/tree
[I 2021-03-06 00:39:43.196 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-03-06 00:39:43.197 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-03-06 00:39:47.133 ServerApp] 302 GET / (127.0.0.1) 0.51ms
[C 2021-03-06 00:39:47.660 ServerApp] received signal 15, stopping
[I 2021-03-06 00:39:47.660 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210306 00:39:47.761" endtime="20210306 00:39:47.761"></status>
</kw>
<status status="PASS" starttime="20210306 00:39:47.659" endtime="20210306 00:39:47.762"></status>
</kw>
<status status="PASS" starttime="20210306 00:39:42.587" endtime="20210306 00:39:47.762" critical="yes"></status>
</test>
<test id="s1-s1-s2-t3" name="Test file_to_run">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210306 00:39:47.764" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210306 00:39:47.763" endtime="20210306 00:39:47.764"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210306 00:39:47.765" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210306 00:39:47.764" endtime="20210306 00:39:47.765"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210306 00:39:47.765" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210306 00:39:47.765" endtime="20210306 00:39:47.766"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210306 00:39:47.766" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210306 00:39:47.769" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210306 00:39:47.766" endtime="20210306 00:39:47.770"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210306 00:39:47.771" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210306 00:39:47.770" endtime="20210306 00:39:47.771"></status>
</kw>
<status status="PASS" starttime="20210306 00:39:47.765" endtime="20210306 00:39:47.771"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210306 00:39:47.772" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210306 00:39:47.771" endtime="20210306 00:39:47.772"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210306 00:39:48.380" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210306 00:39:48.381" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Sat, 06 Mar 2021 00:39:48 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"7c8cff5e78d2d00edf562ff4c821a7410eb27914"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-03-06T00:39:48.334972Z", "started": "2021-03-06T00:39:48.334972Z"} 
 </msg>
<status status="PASS" starttime="20210306 00:39:47.773" endtime="20210306 00:39:48.381"></status>
</kw>
<status status="PASS" starttime="20210306 00:39:47.771" endtime="20210306 00:39:48.381"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210306 00:39:48.382" level="INFO">http://127.0.0.1:8888</msg>
<status status="PASS" starttime="20210306 00:39:48.381" endtime="20210306 00:39:48.812"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210306 00:39:48.813" endtime="20210306 00:39:48.938"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210306 00:39:49.081" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-2.png"&gt;&lt;img src="puppeteer-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210306 00:39:48.939" endtime="20210306 00:39:49.081"></status>
</kw>
<status status="PASS" starttime="20210306 00:39:48.812" endtime="20210306 00:39:49.081"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210306 00:39:49.081" endtime="20210306 00:39:49.103"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210306 00:39:49.104" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210306 00:39:49.204" level="INFO">Process completed.</msg>
<msg timestamp="20210306 00:39:49.205" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210306 00:39:49.103" endtime="20210306 00:39:49.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210306 00:39:49.205" level="INFO">[I 2021-03-06 00:39:48.328 ServerApp] nbclassic | extension was successfully linked.
[W 2021-03-06 00:39:48.349 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-03-06 00:39:48.357 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-03-06 00:39:48.357 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-03-06 00:39:48.357 ServerApp] Jupyter Server 1.4.1 is running at:
[I 2021-03-06 00:39:48.357 ServerApp] http://localhost:8888/tree
[I 2021-03-06 00:39:48.357 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-03-06 00:39:48.357 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-03-06 00:39:48.577 ServerApp] 302 GET / (127.0.0.1) 0.50ms
[C 2021-03-06 00:39:49.104 ServerApp] received signal 15, stopping
[I 2021-03-06 00:39:49.104 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210306 00:39:49.205" endtime="20210306 00:39:49.205"></status>
</kw>
<status status="PASS" starttime="20210306 00:39:49.103" endtime="20210306 00:39:49.206"></status>
</kw>
<status status="PASS" starttime="20210306 00:39:47.762" endtime="20210306 00:39:49.206" critical="yes"></status>
</test>
<status status="PASS" starttime="20210306 00:39:41.724" endtime="20210306 00:39:49.207"></status>
</suite>
<status status="PASS" starttime="20210306 00:39:40.117" endtime="20210306 00:39:49.209"></status>
</suite>
<status status="PASS" starttime="20210306 00:39:40.092" endtime="20210306 00:39:49.212"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="Atest">Atest</stat>
<stat pass="4" fail="0" id="s1-s1" name="Jupyter Server">Atest.Jupyter Server</stat>
<stat pass="1" fail="0" id="s1-s1-s1" name="JupyterServerCLI">Atest.Jupyter Server.JupyterServerCLI</stat>
<stat pass="3" fail="0" id="s1-s1-s2" name="Nbclassic">Atest.Jupyter Server.Nbclassic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
