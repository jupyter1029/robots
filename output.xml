<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.8.7 on linux)" generated="20210209 20:13:32.676" rpa="false">
<suite id="s1" name="Atest" source="/home/runner/work/robots/robots/atest">
<suite id="s1-s1" name="Jupyter Server" source="/home/runner/work/robots/robots/atest/jupyter_server">
<suite id="s1-s1-s1" name="JupyterServerCLI" source="/home/runner/work/robots/robots/atest/jupyter_server/JupyterServerCLI.robot">
<test id="s1-s1-s1-t1" name="Test &quot;port&quot; trait">
<kw name="Start Unauthenticated Jupyter Server" library="Variables">
<arguments>
<arg>--ServerApp.port=9999</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210209 20:13:32.784" level="INFO">${extra_args} = ['--ServerApp.token=', '']</msg>
<status status="PASS" starttime="20210209 20:13:32.784" endtime="20210209 20:13:32.784"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210209 20:13:32.785" level="INFO">Starting process:
jupyter-server --ServerApp.port=9999 --ServerApp.token= ""</msg>
<msg timestamp="20210209 20:13:32.788" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210209 20:13:32.784" endtime="20210209 20:13:32.788"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210209 20:13:32.789" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210209 20:13:32.788" endtime="20210209 20:13:32.789"></status>
</kw>
<status status="PASS" starttime="20210209 20:13:32.782" endtime="20210209 20:13:32.789"></status>
</kw>
<kw name="Check Jupyter Server Status">
<arguments>
<arg>http://127.0.0.1:9999</arg>
</arguments>
<msg timestamp="20210209 20:13:32.791" level="FAIL">No keyword with name 'Check Jupyter Server Status' found.</msg>
<status status="FAIL" starttime="20210209 20:13:32.791" endtime="20210209 20:13:32.791"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 20:13:32.793" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210209 20:13:32.893" level="INFO">Process completed.</msg>
<msg timestamp="20210209 20:13:32.894" level="INFO">${result} = &lt;result object with rc -15&gt;</msg>
<status status="PASS" starttime="20210209 20:13:32.792" endtime="20210209 20:13:32.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210209 20:13:32.895" level="INFO"></msg>
<status status="PASS" starttime="20210209 20:13:32.894" endtime="20210209 20:13:32.895"></status>
</kw>
<status status="PASS" starttime="20210209 20:13:32.792" endtime="20210209 20:13:32.895"></status>
</kw>
<status status="FAIL" starttime="20210209 20:13:32.782" endtime="20210209 20:13:32.895" critical="yes">No keyword with name 'Check Jupyter Server Status' found.</status>
</test>
<status status="FAIL" starttime="20210209 20:13:32.704" endtime="20210209 20:13:32.895"></status>
</suite>
<suite id="s1-s1-s2" name="Nbclassic" source="/home/runner/work/robots/robots/atest/jupyter_server/Nbclassic.robot">
<test id="s1-s1-s2-t1" name="Test Entrypoint">
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210209 20:13:33.308" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210209 20:13:33.308" endtime="20210209 20:13:33.308"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210209 20:13:33.309" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210209 20:13:33.312" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210209 20:13:33.308" endtime="20210209 20:13:33.312"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210209 20:13:33.313" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210209 20:13:33.312" endtime="20210209 20:13:33.313"></status>
</kw>
<status status="PASS" starttime="20210209 20:13:33.307" endtime="20210209 20:13:33.313"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210209 20:13:33.314" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210209 20:13:33.314" endtime="20210209 20:13:33.315"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210209 20:13:36.329" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210209 20:13:36.330" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Tue, 09 Feb 2021 20:13:36 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"11dc463e310070c56299920cbb8480b7dcb0f7d0"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-09T20:13:34.842301Z", "started": "2021-02-09T20:13:34.842301Z"} 
 </msg>
<status status="PASS" starttime="20210209 20:13:33.315" endtime="20210209 20:13:36.330"></status>
</kw>
<status status="PASS" starttime="20210209 20:13:33.313" endtime="20210209 20:13:36.330"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 20:13:36.332" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210209 20:13:36.432" level="INFO">Process completed.</msg>
<msg timestamp="20210209 20:13:36.432" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210209 20:13:36.331" endtime="20210209 20:13:36.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210209 20:13:36.433" level="INFO">[I 2021-02-09 20:13:33.980 ServerApp] Writing notebook server cookie secret to /home/runner/.local/share/jupyter/runtime/jupyter_cookie_secret
[I 2021-02-09 20:13:34.835 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-09 20:13:34.856 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-09 20:13:34.864 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-09 20:13:34.864 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-09 20:13:34.864 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-09 20:13:34.864 ServerApp] http://localhost:8888/tree
[I 2021-02-09 20:13:34.864 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-09 20:13:34.864 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-02-09 20:13:36.331 ServerApp] received signal 15, stopping
[I 2021-02-09 20:13:36.332 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210209 20:13:36.433" endtime="20210209 20:13:36.433"></status>
</kw>
<status status="PASS" starttime="20210209 20:13:36.331" endtime="20210209 20:13:36.434"></status>
</kw>
<status status="PASS" starttime="20210209 20:13:33.307" endtime="20210209 20:13:36.434" critical="yes"></status>
</test>
<test id="s1-s1-s2-t2" name="Test Landing Page">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210209 20:13:36.436" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210209 20:13:36.435" endtime="20210209 20:13:36.436"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210209 20:13:36.437" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210209 20:13:36.437" endtime="20210209 20:13:36.437"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210209 20:13:36.438" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210209 20:13:36.438" endtime="20210209 20:13:36.438"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210209 20:13:36.439" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210209 20:13:36.443" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210209 20:13:36.438" endtime="20210209 20:13:36.443"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210209 20:13:36.444" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210209 20:13:36.443" endtime="20210209 20:13:36.444"></status>
</kw>
<status status="PASS" starttime="20210209 20:13:36.437" endtime="20210209 20:13:36.444"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210209 20:13:36.445" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210209 20:13:36.445" endtime="20210209 20:13:36.446"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210209 20:13:37.055" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210209 20:13:37.055" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Tue, 09 Feb 2021 20:13:37 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"4fbc81b5f6d11c6cb45fe377d6f1fb725028b4b5"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-09T20:13:37.016229Z", "started": "2021-02-09T20:13:37.016229Z"} 
 </msg>
<status status="PASS" starttime="20210209 20:13:36.446" endtime="20210209 20:13:37.055"></status>
</kw>
<status status="PASS" starttime="20210209 20:13:36.444" endtime="20210209 20:13:37.055"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210209 20:13:37.056" level="INFO">http://127.0.0.1:8888</msg>
<msg timestamp="20210209 20:13:40.917" level="INFO">0%|          | 0/108773488 [00:00&lt;?, ?it/s] 19%|#8        | 20602880/108773488 [00:00&lt;00:00, 205561932.80it/s] 42%|####1     | 45301760/108773488 [00:00&lt;00:00, 229905461.89it/s] 66%|######6   | 72192000/108773488 [00:00&lt;00:00, 247683569.55it/s] 92%|#########1| 99962880/108773488 [00:00&lt;00:00, 259470295.32it/s]100%|##########| 108773488/108773488 [00:00&lt;00:00, 251508195.44it/s]</msg>
<status status="PASS" starttime="20210209 20:13:37.055" endtime="20210209 20:13:40.918"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210209 20:13:40.919" endtime="20210209 20:13:41.043"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210209 20:13:41.196" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-1.png"&gt;&lt;img src="puppeteer-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210209 20:13:41.043" endtime="20210209 20:13:41.196"></status>
</kw>
<status status="PASS" starttime="20210209 20:13:40.918" endtime="20210209 20:13:41.196"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210209 20:13:41.197" endtime="20210209 20:13:41.219"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 20:13:41.220" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210209 20:13:41.321" level="INFO">Process completed.</msg>
<msg timestamp="20210209 20:13:41.321" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210209 20:13:41.220" endtime="20210209 20:13:41.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210209 20:13:41.322" level="INFO">[I 2021-02-09 20:13:37.009 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-09 20:13:37.030 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-09 20:13:37.037 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-09 20:13:37.037 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-09 20:13:37.038 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-09 20:13:37.038 ServerApp] http://localhost:8888/tree
[I 2021-02-09 20:13:37.038 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-09 20:13:37.038 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-02-09 20:13:40.634 ServerApp] 302 GET / (127.0.0.1) 0.49ms
[C 2021-02-09 20:13:41.220 ServerApp] received signal 15, stopping
[I 2021-02-09 20:13:41.220 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210209 20:13:41.321" endtime="20210209 20:13:41.322"></status>
</kw>
<status status="PASS" starttime="20210209 20:13:41.219" endtime="20210209 20:13:41.322"></status>
</kw>
<status status="PASS" starttime="20210209 20:13:36.435" endtime="20210209 20:13:41.322" critical="yes"></status>
</test>
<test id="s1-s1-s2-t3" name="Test file_to_run">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210209 20:13:41.324" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210209 20:13:41.323" endtime="20210209 20:13:41.324"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210209 20:13:41.325" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210209 20:13:41.324" endtime="20210209 20:13:41.325"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210209 20:13:41.326" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210209 20:13:41.326" endtime="20210209 20:13:41.326"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210209 20:13:41.326" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210209 20:13:41.330" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210209 20:13:41.326" endtime="20210209 20:13:41.330"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210209 20:13:41.331" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210209 20:13:41.330" endtime="20210209 20:13:41.331"></status>
</kw>
<status status="PASS" starttime="20210209 20:13:41.325" endtime="20210209 20:13:41.331"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210209 20:13:41.332" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210209 20:13:41.332" endtime="20210209 20:13:41.333"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210209 20:13:41.941" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210209 20:13:41.941" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Tue, 09 Feb 2021 20:13:41 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"01b4546246338e40ae8d493ade5bf48169553496"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-09T20:13:41.883659Z", "started": "2021-02-09T20:13:41.883659Z"} 
 </msg>
<status status="PASS" starttime="20210209 20:13:41.333" endtime="20210209 20:13:41.941"></status>
</kw>
<status status="PASS" starttime="20210209 20:13:41.331" endtime="20210209 20:13:41.941"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210209 20:13:41.942" level="INFO">http://127.0.0.1:8888</msg>
<status status="PASS" starttime="20210209 20:13:41.942" endtime="20210209 20:13:42.358"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210209 20:13:42.359" endtime="20210209 20:13:42.489"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210209 20:13:42.633" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-2.png"&gt;&lt;img src="puppeteer-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210209 20:13:42.489" endtime="20210209 20:13:42.633"></status>
</kw>
<status status="PASS" starttime="20210209 20:13:42.358" endtime="20210209 20:13:42.633"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210209 20:13:42.633" endtime="20210209 20:13:42.666"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 20:13:42.667" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210209 20:13:42.768" level="INFO">Process completed.</msg>
<msg timestamp="20210209 20:13:42.768" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210209 20:13:42.667" endtime="20210209 20:13:42.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210209 20:13:42.769" level="INFO">[I 2021-02-09 20:13:41.876 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-09 20:13:41.898 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-09 20:13:41.905 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-09 20:13:41.905 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-09 20:13:41.905 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-09 20:13:41.905 ServerApp] http://localhost:8888/tree
[I 2021-02-09 20:13:41.905 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-09 20:13:41.905 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-02-09 20:13:42.119 ServerApp] 302 GET / (127.0.0.1) 0.48ms
[C 2021-02-09 20:13:42.667 ServerApp] received signal 15, stopping
[I 2021-02-09 20:13:42.667 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210209 20:13:42.769" endtime="20210209 20:13:42.769"></status>
</kw>
<status status="PASS" starttime="20210209 20:13:42.667" endtime="20210209 20:13:42.769"></status>
</kw>
<status status="PASS" starttime="20210209 20:13:41.322" endtime="20210209 20:13:42.769" critical="yes"></status>
</test>
<status status="PASS" starttime="20210209 20:13:32.896" endtime="20210209 20:13:42.771"></status>
</suite>
<status status="FAIL" starttime="20210209 20:13:32.702" endtime="20210209 20:13:42.774"></status>
</suite>
<status status="FAIL" starttime="20210209 20:13:32.677" endtime="20210209 20:13:42.777"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="1">Critical Tests</stat>
<stat pass="3" fail="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="3" fail="1" id="s1" name="Atest">Atest</stat>
<stat pass="3" fail="1" id="s1-s1" name="Jupyter Server">Atest.Jupyter Server</stat>
<stat pass="0" fail="1" id="s1-s1-s1" name="JupyterServerCLI">Atest.Jupyter Server.JupyterServerCLI</stat>
<stat pass="3" fail="0" id="s1-s1-s2" name="Nbclassic">Atest.Jupyter Server.Nbclassic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
