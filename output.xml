<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.8.7 on linux)" generated="20210209 22:30:02.551" rpa="false">
<suite id="s1" name="Atest" source="/home/runner/work/robots/robots/atest">
<suite id="s1-s1" name="Jupyter Server" source="/home/runner/work/robots/robots/atest/jupyter_server">
<suite id="s1-s1-s1" name="JupyterServerCLI" source="/home/runner/work/robots/robots/atest/jupyter_server/JupyterServerCLI.robot">
<test id="s1-s1-s1-t1" name="Test &quot;port&quot; trait">
<kw name="Start Unauthenticated Jupyter Server" library="Variables">
<arguments>
<arg>--ServerApp.port=9999</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210209 22:30:02.652" level="INFO">${extra_args} = ['--ServerApp.token=', '']</msg>
<status status="PASS" starttime="20210209 22:30:02.651" endtime="20210209 22:30:02.652"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210209 22:30:02.652" level="INFO">Starting process:
jupyter-server --ServerApp.port=9999 --ServerApp.token= ""</msg>
<msg timestamp="20210209 22:30:02.656" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210209 22:30:02.652" endtime="20210209 22:30:02.656"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210209 22:30:02.657" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210209 22:30:02.656" endtime="20210209 22:30:02.657"></status>
</kw>
<status status="PASS" starttime="20210209 22:30:02.650" endtime="20210209 22:30:02.657"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<arguments>
<arg>http://127.0.0.1:9999</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210209 22:30:02.658" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:9999, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210209 22:30:02.658" endtime="20210209 22:30:02.659"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210209 22:30:04.070" level="INFO">GET Request : url=http://127.0.0.1:9999/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210209 22:30:04.070" level="INFO">GET Response : url=http://127.0.0.1:9999/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Tue, 09 Feb 2021 22:30:04 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"62578e660711ae5697ca40e71443b5e882dbfa57"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-09T22:30:03.760444Z", "started": "2021-02-09T22:30:03.760444Z"} 
 </msg>
<status status="PASS" starttime="20210209 22:30:02.659" endtime="20210209 22:30:04.070"></status>
</kw>
<status status="PASS" starttime="20210209 22:30:02.657" endtime="20210209 22:30:04.070"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 22:30:04.072" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210209 22:30:04.173" level="INFO">Process completed.</msg>
<msg timestamp="20210209 22:30:04.173" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210209 22:30:04.072" endtime="20210209 22:30:04.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210209 22:30:04.174" level="INFO">[I 2021-02-09 22:30:03.254 ServerApp] Writing notebook server cookie secret to /home/runner/.local/share/jupyter/runtime/jupyter_cookie_secret
[I 2021-02-09 22:30:03.753 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-09 22:30:03.774 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-09 22:30:03.782 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-09 22:30:03.782 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-09 22:30:03.782 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-09 22:30:03.782 ServerApp] http://localhost:9999/
[I 2021-02-09 22:30:03.782 ServerApp]  or http://127.0.0.1:9999/
[I 2021-02-09 22:30:03.782 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-02-09 22:30:04.072 ServerApp] received signal 15, stopping
[I 2021-02-09 22:30:04.072 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210209 22:30:04.173" endtime="20210209 22:30:04.174"></status>
</kw>
<status status="PASS" starttime="20210209 22:30:04.071" endtime="20210209 22:30:04.174"></status>
</kw>
<status status="PASS" starttime="20210209 22:30:02.649" endtime="20210209 22:30:04.174" critical="yes"></status>
</test>
<status status="PASS" starttime="20210209 22:30:02.576" endtime="20210209 22:30:04.175"></status>
</suite>
<suite id="s1-s1-s2" name="Nbclassic" source="/home/runner/work/robots/robots/atest/jupyter_server/Nbclassic.robot">
<test id="s1-s1-s2-t1" name="Test Entrypoint">
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210209 22:30:04.309" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210209 22:30:04.309" endtime="20210209 22:30:04.309"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210209 22:30:04.310" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210209 22:30:04.314" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210209 22:30:04.309" endtime="20210209 22:30:04.314"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210209 22:30:04.315" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210209 22:30:04.314" endtime="20210209 22:30:04.315"></status>
</kw>
<status status="PASS" starttime="20210209 22:30:04.308" endtime="20210209 22:30:04.315"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210209 22:30:04.316" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210209 22:30:04.316" endtime="20210209 22:30:04.317"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210209 22:30:04.927" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210209 22:30:04.927" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Tue, 09 Feb 2021 22:30:04 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"616997a314e407999d7ab2ef86ef61344b7cc870"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-09T22:30:04.880297Z", "started": "2021-02-09T22:30:04.880297Z"} 
 </msg>
<status status="PASS" starttime="20210209 22:30:04.317" endtime="20210209 22:30:04.927"></status>
</kw>
<status status="PASS" starttime="20210209 22:30:04.315" endtime="20210209 22:30:04.927"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 22:30:04.929" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210209 22:30:05.029" level="INFO">Process completed.</msg>
<msg timestamp="20210209 22:30:05.029" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210209 22:30:04.928" endtime="20210209 22:30:05.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210209 22:30:05.031" level="INFO">[I 2021-02-09 22:30:04.873 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-09 22:30:04.893 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-09 22:30:04.900 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-09 22:30:04.901 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-09 22:30:04.901 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-09 22:30:04.901 ServerApp] http://localhost:8888/tree
[I 2021-02-09 22:30:04.901 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-09 22:30:04.901 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-02-09 22:30:04.928 ServerApp] received signal 15, stopping
[I 2021-02-09 22:30:04.930 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210209 22:30:05.030" endtime="20210209 22:30:05.031"></status>
</kw>
<status status="PASS" starttime="20210209 22:30:04.928" endtime="20210209 22:30:05.031"></status>
</kw>
<status status="PASS" starttime="20210209 22:30:04.308" endtime="20210209 22:30:05.031" critical="yes"></status>
</test>
<test id="s1-s1-s2-t2" name="Test Landing Page">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210209 22:30:05.034" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210209 22:30:05.032" endtime="20210209 22:30:05.034"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210209 22:30:05.036" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210209 22:30:05.034" endtime="20210209 22:30:05.036"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210209 22:30:05.037" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210209 22:30:05.037" endtime="20210209 22:30:05.037"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210209 22:30:05.038" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210209 22:30:05.041" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210209 22:30:05.037" endtime="20210209 22:30:05.041"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210209 22:30:05.043" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210209 22:30:05.042" endtime="20210209 22:30:05.043"></status>
</kw>
<status status="PASS" starttime="20210209 22:30:05.036" endtime="20210209 22:30:05.043"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210209 22:30:05.044" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210209 22:30:05.043" endtime="20210209 22:30:05.044"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210209 22:30:05.653" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210209 22:30:05.654" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Tue, 09 Feb 2021 22:30:05 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"5aec9372ee6efaeeb1c197d8dc48e6a5ed4a90cd"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-09T22:30:05.588954Z", "started": "2021-02-09T22:30:05.588954Z"} 
 </msg>
<status status="PASS" starttime="20210209 22:30:05.045" endtime="20210209 22:30:05.654"></status>
</kw>
<status status="PASS" starttime="20210209 22:30:05.043" endtime="20210209 22:30:05.654"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210209 22:30:05.655" level="INFO">http://127.0.0.1:8888</msg>
<msg timestamp="20210209 22:30:09.572" level="INFO">0%|          | 0/108773488 [00:00&lt;?, ?it/s] 18%|#7        | 19066880/108773488 [00:00&lt;00:00, 190662617.78it/s] 37%|###7      | 40427520/108773488 [00:00&lt;00:00, 203674445.66it/s] 58%|#####8    | 63406080/108773488 [00:00&lt;00:00, 215565093.24it/s] 79%|#######9  | 86200320/108773488 [00:00&lt;00:00, 220445869.61it/s]100%|##########| 108773488/108773488 [00:00&lt;00:00, 217390656.81it/s]</msg>
<status status="PASS" starttime="20210209 22:30:05.654" endtime="20210209 22:30:09.573"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210209 22:30:09.574" endtime="20210209 22:30:09.696"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210209 22:30:09.832" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-1.png"&gt;&lt;img src="puppeteer-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210209 22:30:09.696" endtime="20210209 22:30:09.832"></status>
</kw>
<status status="PASS" starttime="20210209 22:30:09.573" endtime="20210209 22:30:09.833"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210209 22:30:09.833" endtime="20210209 22:30:09.857"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 22:30:09.858" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210209 22:30:09.960" level="INFO">Process completed.</msg>
<msg timestamp="20210209 22:30:09.960" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210209 22:30:09.858" endtime="20210209 22:30:09.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210209 22:30:09.961" level="INFO">[I 2021-02-09 22:30:05.582 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-09 22:30:05.602 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-09 22:30:05.609 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-09 22:30:05.609 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-09 22:30:05.609 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-09 22:30:05.609 ServerApp] http://localhost:8888/tree
[I 2021-02-09 22:30:05.609 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-09 22:30:05.609 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-02-09 22:30:09.334 ServerApp] 302 GET / (127.0.0.1) 0.47ms
[C 2021-02-09 22:30:09.858 ServerApp] received signal 15, stopping
[I 2021-02-09 22:30:09.858 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210209 22:30:09.961" endtime="20210209 22:30:09.961"></status>
</kw>
<status status="PASS" starttime="20210209 22:30:09.857" endtime="20210209 22:30:09.962"></status>
</kw>
<status status="PASS" starttime="20210209 22:30:05.032" endtime="20210209 22:30:09.962" critical="yes"></status>
</test>
<test id="s1-s1-s2-t3" name="Test file_to_run">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210209 22:30:09.965" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210209 22:30:09.963" endtime="20210209 22:30:09.965"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210209 22:30:09.965" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210209 22:30:09.965" endtime="20210209 22:30:09.966"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210209 22:30:09.966" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210209 22:30:09.966" endtime="20210209 22:30:09.966"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210209 22:30:09.967" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210209 22:30:09.971" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210209 22:30:09.966" endtime="20210209 22:30:09.971"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210209 22:30:09.972" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210209 22:30:09.971" endtime="20210209 22:30:09.972"></status>
</kw>
<status status="PASS" starttime="20210209 22:30:09.966" endtime="20210209 22:30:09.972"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210209 22:30:09.974" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210209 22:30:09.973" endtime="20210209 22:30:09.974"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210209 22:30:10.584" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210209 22:30:10.585" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Tue, 09 Feb 2021 22:30:10 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"c98b7bf6f8eb7709b5253af11b295f87c644034d"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-09T22:30:10.519139Z", "started": "2021-02-09T22:30:10.519139Z"} 
 </msg>
<status status="PASS" starttime="20210209 22:30:09.974" endtime="20210209 22:30:10.585"></status>
</kw>
<status status="PASS" starttime="20210209 22:30:09.973" endtime="20210209 22:30:10.585"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210209 22:30:10.586" level="INFO">http://127.0.0.1:8888</msg>
<status status="PASS" starttime="20210209 22:30:10.585" endtime="20210209 22:30:11.030"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210209 22:30:11.031" endtime="20210209 22:30:11.135"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210209 22:30:11.269" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="puppeteer-screenshot-2.png"&gt;&lt;img src="puppeteer-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210209 22:30:11.135" endtime="20210209 22:30:11.269"></status>
</kw>
<status status="PASS" starttime="20210209 22:30:11.031" endtime="20210209 22:30:11.269"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210209 22:30:11.269" endtime="20210209 22:30:11.297"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 22:30:11.298" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210209 22:30:11.499" level="INFO">Process completed.</msg>
<msg timestamp="20210209 22:30:11.500" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210209 22:30:11.298" endtime="20210209 22:30:11.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210209 22:30:11.501" level="INFO">[I 2021-02-09 22:30:10.512 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-09 22:30:10.532 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-09 22:30:10.539 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-09 22:30:10.539 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-09 22:30:10.539 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-09 22:30:10.539 ServerApp] http://localhost:8888/tree
[I 2021-02-09 22:30:10.540 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-09 22:30:10.540 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-02-09 22:30:10.781 ServerApp] 302 GET / (127.0.0.1) 0.48ms
[C 2021-02-09 22:30:11.298 ServerApp] received signal 15, stopping
[I 2021-02-09 22:30:11.298 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210209 22:30:11.500" endtime="20210209 22:30:11.501"></status>
</kw>
<status status="PASS" starttime="20210209 22:30:11.298" endtime="20210209 22:30:11.501"></status>
</kw>
<status status="PASS" starttime="20210209 22:30:09.963" endtime="20210209 22:30:11.501" critical="yes"></status>
</test>
<status status="PASS" starttime="20210209 22:30:04.176" endtime="20210209 22:30:11.503"></status>
</suite>
<status status="PASS" starttime="20210209 22:30:02.574" endtime="20210209 22:30:11.506"></status>
</suite>
<status status="PASS" starttime="20210209 22:30:02.552" endtime="20210209 22:30:11.509"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="Atest">Atest</stat>
<stat pass="4" fail="0" id="s1-s1" name="Jupyter Server">Atest.Jupyter Server</stat>
<stat pass="1" fail="0" id="s1-s1-s1" name="JupyterServerCLI">Atest.Jupyter Server.JupyterServerCLI</stat>
<stat pass="3" fail="0" id="s1-s1-s2" name="Nbclassic">Atest.Jupyter Server.Nbclassic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
