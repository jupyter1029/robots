<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.8.7 on linux)" generated="20210209 22:20:20.127" rpa="false">
<suite id="s1" name="Atest" source="/home/runner/work/robots/robots/atest">
<suite id="s1-s1" name="Jupyter Server" source="/home/runner/work/robots/robots/atest/jupyter_server">
<suite id="s1-s1-s1" name="JupyterServerCLI" source="/home/runner/work/robots/robots/atest/jupyter_server/JupyterServerCLI.robot">
<test id="s1-s1-s1-t1" name="Test &quot;port&quot; trait">
<kw name="Start Unauthenticated Jupyter Server" library="Variables">
<arguments>
<arg>--ServerApp.port=9999</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210209 22:20:20.241" level="INFO">${extra_args} = ['--ServerApp.token=', '']</msg>
<status status="PASS" starttime="20210209 22:20:20.241" endtime="20210209 22:20:20.241"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210209 22:20:20.242" level="INFO">Starting process:
jupyter-server --ServerApp.port=9999 --ServerApp.token= ""</msg>
<msg timestamp="20210209 22:20:20.245" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210209 22:20:20.241" endtime="20210209 22:20:20.245"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210209 22:20:20.246" level="INFO">${jupyter_server_process} = 1</msg>
<status status="PASS" starttime="20210209 22:20:20.245" endtime="20210209 22:20:20.246"></status>
</kw>
<status status="PASS" starttime="20210209 22:20:20.239" endtime="20210209 22:20:20.246"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<arguments>
<arg>http://127.0.0.1:9999</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210209 22:20:20.248" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:9999, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210209 22:20:20.247" endtime="20210209 22:20:20.248"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210209 22:20:23.261" level="INFO">GET Request : url=http://127.0.0.1:9999/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210209 22:20:23.261" level="INFO">GET Response : url=http://127.0.0.1:9999/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Tue, 09 Feb 2021 22:20:23 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"3a3025d8cfcbee3498aa85da6aa2e8f5c5dd0fb4"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-09T22:20:21.979207Z", "started": "2021-02-09T22:20:21.979207Z"} 
 </msg>
<status status="PASS" starttime="20210209 22:20:20.248" endtime="20210209 22:20:23.261"></status>
</kw>
<status status="PASS" starttime="20210209 22:20:20.246" endtime="20210209 22:20:23.262"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 22:20:23.263" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210209 22:20:23.363" level="INFO">Process completed.</msg>
<msg timestamp="20210209 22:20:23.364" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210209 22:20:23.263" endtime="20210209 22:20:23.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210209 22:20:23.364" level="INFO">[I 2021-02-09 22:20:21.247 ServerApp] Writing notebook server cookie secret to /home/runner/.local/share/jupyter/runtime/jupyter_cookie_secret
[I 2021-02-09 22:20:21.973 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-09 22:20:21.994 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-09 22:20:22.003 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-09 22:20:22.004 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-09 22:20:22.004 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-09 22:20:22.004 ServerApp] http://localhost:9999/
[I 2021-02-09 22:20:22.004 ServerApp]  or http://127.0.0.1:9999/
[I 2021-02-09 22:20:22.004 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-02-09 22:20:23.263 ServerApp] received signal 15, stopping
[I 2021-02-09 22:20:23.263 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210209 22:20:23.364" endtime="20210209 22:20:23.364"></status>
</kw>
<status status="PASS" starttime="20210209 22:20:23.262" endtime="20210209 22:20:23.365"></status>
</kw>
<status status="PASS" starttime="20210209 22:20:20.239" endtime="20210209 22:20:23.365" critical="yes"></status>
</test>
<status status="PASS" starttime="20210209 22:20:20.158" endtime="20210209 22:20:23.366"></status>
</suite>
<suite id="s1-s1-s2" name="Nbclassic" source="/home/runner/work/robots/robots/atest/jupyter_server/Nbclassic.robot">
<test id="s1-s1-s2-t1" name="Test Entrypoint">
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210209 22:20:23.491" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210209 22:20:23.491" endtime="20210209 22:20:23.491"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210209 22:20:23.492" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210209 22:20:23.495" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210209 22:20:23.491" endtime="20210209 22:20:23.495"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210209 22:20:23.496" level="INFO">${jupyter_server_process} = 2</msg>
<status status="PASS" starttime="20210209 22:20:23.495" endtime="20210209 22:20:23.496"></status>
</kw>
<status status="PASS" starttime="20210209 22:20:23.491" endtime="20210209 22:20:23.496"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210209 22:20:23.497" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210209 22:20:23.497" endtime="20210209 22:20:23.498"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210209 22:20:24.106" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210209 22:20:24.106" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Tue, 09 Feb 2021 22:20:24 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"b267cc8e8c287bbd7ac750917b250b9c2738df0c"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-09T22:20:24.024767Z", "started": "2021-02-09T22:20:24.024767Z"} 
 </msg>
<status status="PASS" starttime="20210209 22:20:23.498" endtime="20210209 22:20:24.106"></status>
</kw>
<status status="PASS" starttime="20210209 22:20:23.496" endtime="20210209 22:20:24.106"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 22:20:24.107" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210209 22:20:24.208" level="INFO">Process completed.</msg>
<msg timestamp="20210209 22:20:24.208" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210209 22:20:24.107" endtime="20210209 22:20:24.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210209 22:20:24.209" level="INFO">[I 2021-02-09 22:20:24.018 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-09 22:20:24.038 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-09 22:20:24.044 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-09 22:20:24.045 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-09 22:20:24.045 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-09 22:20:24.045 ServerApp] http://localhost:8888/tree
[I 2021-02-09 22:20:24.045 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-09 22:20:24.045 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 2021-02-09 22:20:24.107 ServerApp] received signal 15, stopping
[I 2021-02-09 22:20:24.109 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210209 22:20:24.208" endtime="20210209 22:20:24.209"></status>
</kw>
<status status="PASS" starttime="20210209 22:20:24.107" endtime="20210209 22:20:24.209"></status>
</kw>
<status status="PASS" starttime="20210209 22:20:23.490" endtime="20210209 22:20:24.209" critical="yes"></status>
</test>
<test id="s1-s1-s2-t2" name="Test Landing Page">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210209 22:20:24.212" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210209 22:20:24.211" endtime="20210209 22:20:24.212"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210209 22:20:24.213" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210209 22:20:24.212" endtime="20210209 22:20:24.213"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210209 22:20:24.213" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210209 22:20:24.213" endtime="20210209 22:20:24.213"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210209 22:20:24.214" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210209 22:20:24.217" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210209 22:20:24.214" endtime="20210209 22:20:24.217"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210209 22:20:24.218" level="INFO">${jupyter_server_process} = 3</msg>
<status status="PASS" starttime="20210209 22:20:24.218" endtime="20210209 22:20:24.218"></status>
</kw>
<status status="PASS" starttime="20210209 22:20:24.213" endtime="20210209 22:20:24.218"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210209 22:20:24.219" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210209 22:20:24.219" endtime="20210209 22:20:24.220"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210209 22:20:24.828" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210209 22:20:24.828" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Tue, 09 Feb 2021 22:20:24 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"811ba5f2abeab54fd206c8530d859c44cc58bcf3"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-09T22:20:24.785917Z", "started": "2021-02-09T22:20:24.785917Z"} 
 </msg>
<status status="PASS" starttime="20210209 22:20:24.220" endtime="20210209 22:20:24.828"></status>
</kw>
<status status="PASS" starttime="20210209 22:20:24.219" endtime="20210209 22:20:24.829"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210209 22:20:24.829" level="INFO">http://127.0.0.1:8888</msg>
<msg timestamp="20210209 22:20:31.073" level="INFO">0%|          | 0/108773488 [00:00&lt;?, ?it/s]  4%|4         | 4792320/108773488 [00:00&lt;00:02, 47883859.08it/s] 10%|#         | 10915840/108773488 [00:00&lt;00:02, 35360073.94it/s] 17%|#7        | 18759680/108773488 [00:00&lt;00:02, 43849666.97it/s] 27%|##7       | 29808640/108773488 [00:00&lt;00:01, 63965933.89it/s] 38%|###7      | 41052160/108773488 [00:00&lt;00:00, 78566553.68it/s] 46%|####5     | 49664000/108773488 [00:00&lt;00:00, 78788250.56it/s] 53%|#####3    | 58050560/108773488 [00:00&lt;00:00, 62575164.04it/s] 60%|#####9    | 65095680/108773488 [00:01&lt;00:00, 58778282.39it/s] 66%|######5   | 71505920/108773488 [00:01&lt;00:00, 49236711.51it/s] 71%|#######   | 76963840/108773488 [00:01&lt;00:00, 47502654.18it/s] 82%|########2 | 89415680/108773488 [00:01&lt;00:00, 65205688.68it/s] 91%|#########1| 99061760/108773488 [00:01&lt;00:00, 72923513.79it/s]100%|##########| 108773488/108773488 [00:01&lt;00:00, 64797801.82it/s]</msg>
<status status="PASS" starttime="20210209 22:20:24.829" endtime="20210209 22:20:31.073"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Set Screenshot Directory" library="PuppeteerLibrary">
<arguments>
<arg>${OUTPUT DIR}</arg>
</arguments>
<status status="PASS" starttime="20210209 22:20:31.074" endtime="20210209 22:20:31.074"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210209 22:20:31.074" endtime="20210209 22:20:31.184"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210209 22:20:31.337" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="reports/puppeteer-screenshot-1.png"&gt;&lt;img src="reports/puppeteer-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210209 22:20:31.185" endtime="20210209 22:20:31.337"></status>
</kw>
<status status="PASS" starttime="20210209 22:20:31.073" endtime="20210209 22:20:31.337"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210209 22:20:31.337" endtime="20210209 22:20:31.357"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 22:20:31.358" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210209 22:20:31.458" level="INFO">Process completed.</msg>
<msg timestamp="20210209 22:20:31.459" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210209 22:20:31.358" endtime="20210209 22:20:31.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210209 22:20:31.460" level="INFO">[I 2021-02-09 22:20:24.778 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-09 22:20:24.800 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-09 22:20:24.807 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-09 22:20:24.807 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-09 22:20:24.807 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-09 22:20:24.807 ServerApp] http://localhost:8888/tree
[I 2021-02-09 22:20:24.807 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-09 22:20:24.807 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-02-09 22:20:30.821 ServerApp] 302 GET / (127.0.0.1) 0.47ms
[C 2021-02-09 22:20:31.358 ServerApp] received signal 15, stopping
[I 2021-02-09 22:20:31.358 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210209 22:20:31.459" endtime="20210209 22:20:31.460"></status>
</kw>
<status status="PASS" starttime="20210209 22:20:31.357" endtime="20210209 22:20:31.460"></status>
</kw>
<status status="PASS" starttime="20210209 22:20:24.210" endtime="20210209 22:20:31.460" critical="yes"></status>
</test>
<test id="s1-s1-s2-t3" name="Test file_to_run">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${HEADLESS}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${HEADLESS}</var>
</assign>
<msg timestamp="20210209 22:20:31.462" level="INFO">${HEADLESS} = True</msg>
<status status="PASS" starttime="20210209 22:20:31.461" endtime="20210209 22:20:31.462"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>headless=${HEADLESS}</arg>
</arguments>
<assign>
<var>&amp;{options}</var>
</assign>
<msg timestamp="20210209 22:20:31.463" level="INFO">&amp;{options} = { headless=True }</msg>
<status status="PASS" starttime="20210209 22:20:31.462" endtime="20210209 22:20:31.463"></status>
</kw>
<kw name="Start Nbclassic">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>--ServerApp.token=</arg>
<arg>--no-browser</arg>
</arguments>
<assign>
<var>${extra_args}</var>
</assign>
<msg timestamp="20210209 22:20:31.463" level="INFO">${extra_args} = ['--ServerApp.token=', '--no-browser']</msg>
<status status="PASS" starttime="20210209 22:20:31.463" endtime="20210209 22:20:31.463"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>jupyter-nbclassic</arg>
<arg>@{arguments}</arg>
<arg>@{extra_args}</arg>
<arg>stderr=STDOUT</arg>
</arguments>
<assign>
<var>${jupyter_server_process}</var>
</assign>
<msg timestamp="20210209 22:20:31.464" level="INFO">Starting process:
jupyter-nbclassic --ServerApp.token= --no-browser</msg>
<msg timestamp="20210209 22:20:31.467" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210209 22:20:31.464" endtime="20210209 22:20:31.467"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<msg timestamp="20210209 22:20:31.468" level="INFO">${jupyter_server_process} = 4</msg>
<status status="PASS" starttime="20210209 22:20:31.468" endtime="20210209 22:20:31.468"></status>
</kw>
<status status="PASS" starttime="20210209 22:20:31.463" endtime="20210209 22:20:31.468"></status>
</kw>
<kw name="Check Server Status" library="Variables">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>${address}</arg>
<arg>max_retries=10</arg>
<arg>disable_warnings=${True}</arg>
</arguments>
<msg timestamp="20210209 22:20:31.470" level="INFO">Creating Session using : alias=jupyter-server, url=http://127.0.0.1:8888, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210209 22:20:31.469" endtime="20210209 22:20:31.470"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>jupyter-server</arg>
<arg>/api/status</arg>
<arg>expected_status=200</arg>
</arguments>
<msg timestamp="20210209 22:20:32.078" level="INFO">GET Request : url=http://127.0.0.1:8888/api/status 
 path_url=/api/status 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210209 22:20:32.078" level="INFO">GET Response : url=http://127.0.0.1:8888/api/status 
 status=200, reason=OK 
 headers={'Server': 'TornadoServer/6.1', 'Content-Type': 'application/json', 'Date': 'Tue, 09 Feb 2021 22:20:32 GMT', 'Content-Security-Policy': "frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'", 'Etag': '"5c486a05b2d5ae20a652377e59d3a6804d123332"', 'Content-Length': '122'} 
 body={"connections": 0, "kernels": 0, "last_activity": "2021-02-09T22:20:31.994662Z", "started": "2021-02-09T22:20:31.994662Z"} 
 </msg>
<status status="PASS" starttime="20210209 22:20:31.470" endtime="20210209 22:20:32.079"></status>
</kw>
<status status="PASS" starttime="20210209 22:20:31.469" endtime="20210209 22:20:32.079"></status>
</kw>
<kw name="Open Browser" library="PuppeteerLibrary">
<doc>Opens a new browser instance to the specific ``url``.</doc>
<arguments>
<arg>http://127.0.0.1:8888</arg>
<arg>options=${options}</arg>
</arguments>
<msg timestamp="20210209 22:20:32.079" level="INFO">http://127.0.0.1:8888</msg>
<status status="PASS" starttime="20210209 22:20:32.079" endtime="20210209 22:20:32.495"></status>
</kw>
<kw name="Verify Classic Notebook Landing Page" library="Keywords">
<kw name="Set Screenshot Directory" library="PuppeteerLibrary">
<arguments>
<arg>${OUTPUT DIR}</arg>
</arguments>
<status status="PASS" starttime="20210209 22:20:32.496" endtime="20210209 22:20:32.496"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="PuppeteerLibrary">
<doc>Waits until ``locator`` element is displayed on web page.</doc>
<arguments>
<arg>id:ipython_notebook</arg>
</arguments>
<status status="PASS" starttime="20210209 22:20:32.496" endtime="20210209 22:20:32.613"></status>
</kw>
<kw name="Capture Page Screenshot" library="PuppeteerLibrary">
<doc>Capture current web page as image png file.</doc>
<msg timestamp="20210209 22:20:32.751" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="reports/puppeteer-screenshot-2.png"&gt;&lt;img src="reports/puppeteer-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210209 22:20:32.613" endtime="20210209 22:20:32.751"></status>
</kw>
<status status="PASS" starttime="20210209 22:20:32.495" endtime="20210209 22:20:32.751"></status>
</kw>
<kw name="Close Browser" library="PuppeteerLibrary">
<doc>Closes the current browser</doc>
<status status="PASS" starttime="20210209 22:20:32.751" endtime="20210209 22:20:32.777"></status>
</kw>
<kw name="Teardown Jupyter Server" library="Variables" type="teardown">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${jupyter_server_process}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 22:20:32.778" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20210209 22:20:32.878" level="INFO">Process completed.</msg>
<msg timestamp="20210209 22:20:32.879" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210209 22:20:32.777" endtime="20210209 22:20:32.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20210209 22:20:32.880" level="INFO">[I 2021-02-09 22:20:31.988 ServerApp] nbclassic | extension was successfully linked.
[W 2021-02-09 22:20:32.007 ServerApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 2021-02-09 22:20:32.013 ServerApp] nbclassic | extension was successfully loaded.
[I 2021-02-09 22:20:32.014 ServerApp] Serving notebooks from local directory: /home/runner/work/robots/robots
[I 2021-02-09 22:20:32.014 ServerApp] Jupyter Server 1.3.0 is running at:
[I 2021-02-09 22:20:32.014 ServerApp] http://localhost:8888/tree
[I 2021-02-09 22:20:32.014 ServerApp]  or http://127.0.0.1:8888/tree
[I 2021-02-09 22:20:32.014 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2021-02-09 22:20:32.249 ServerApp] 302 GET / (127.0.0.1) 0.39ms
[C 2021-02-09 22:20:32.777 ServerApp] received signal 15, stopping
[I 2021-02-09 22:20:32.778 ServerApp] Shutting down 0 kernels</msg>
<status status="PASS" starttime="20210209 22:20:32.879" endtime="20210209 22:20:32.880"></status>
</kw>
<status status="PASS" starttime="20210209 22:20:32.777" endtime="20210209 22:20:32.880"></status>
</kw>
<status status="PASS" starttime="20210209 22:20:31.460" endtime="20210209 22:20:32.880" critical="yes"></status>
</test>
<status status="PASS" starttime="20210209 22:20:23.367" endtime="20210209 22:20:32.881"></status>
</suite>
<status status="PASS" starttime="20210209 22:20:20.156" endtime="20210209 22:20:32.883"></status>
</suite>
<status status="PASS" starttime="20210209 22:20:20.129" endtime="20210209 22:20:32.886"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="Atest">Atest</stat>
<stat pass="4" fail="0" id="s1-s1" name="Jupyter Server">Atest.Jupyter Server</stat>
<stat pass="1" fail="0" id="s1-s1-s1" name="JupyterServerCLI">Atest.Jupyter Server.JupyterServerCLI</stat>
<stat pass="3" fail="0" id="s1-s1-s2" name="Nbclassic">Atest.Jupyter Server.Nbclassic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
